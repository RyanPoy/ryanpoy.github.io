[{"id":0,"href":"/docs/example/","title":"Example Site","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":1,"href":"/docs/example/table-of-contents/with-toc/","title":"With ToC","section":"Table of Contents","content":" Caput vino delphine in tamen vias # Cognita laeva illo fracta # Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nTe at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere # Pectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\nPhrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\nLimitibus misere sit # Aurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua # Iuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta # Mortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"},{"id":2,"href":"/docs/example/table-of-contents/without-toc/","title":"Without ToC","section":"Table of Contents","content":" At me ipso nepotibus nunc celebratior genus # Tanto oblite # Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius # Quibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\nRemansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae # Credulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\nBaculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"},{"id":3,"href":"/posts/creating-a-new-theme/","title":"Creating a New Theme","section":"Blog","content":" Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = \u0026#34;2014-09-28\u0026#34; title = \u0026#34;creating a new theme\u0026#34; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026#34;2014-09-28\u0026#34; title = \u0026#34;creating a new theme\u0026#34; +++ bah and humbug $ Some Definitions # There are a few concepts that you need to understand before creating a theme.\nSkins # Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page # The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File # When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent # Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter # The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown # Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files # Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template # A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template # A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template # A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site # Let\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta $ cd ~/Sites/zafta $ ls -l total 8 drwxr-xr-x 7 quoha staff 238 Sep 29 16:49 . drwxr-xr-x 3 quoha staff 102 Sep 29 16:49 .. drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site # Running the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose INFO: 2014/09/29 Using config file: config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static $ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public total 16 -rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml -rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml $ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site # Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml sitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] WARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme # Hugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton # Use the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta $ ls -l total 8 drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes -rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public drwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes $ find themes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html -rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml $ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml author = \u0026#34;michael d henderson\u0026#34; description = \u0026#34;a minimal working template\u0026#34; license = \u0026#34;MIT\u0026#34; name = \u0026#34;zafta\u0026#34; source_repo = \u0026#34;\u0026#34; tags = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;] :wq ## also edit themes/zafta/LICENSE.md and change ## the bit that says \u0026#34;YOUR_NAME_HERE\u0026#34; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html $ Update the Configuration File to Use the Theme # Now that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml theme = \u0026#34;zafta\u0026#34; baseurl = \u0026#34;\u0026#34; languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;zafta - totally refreshing\u0026#34; MetaDataFormat = \u0026#34;toml\u0026#34; :wq $ Generate the Site # Now that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public total 16 drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css -rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html -rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml drwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js -rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml $ Notice four things:\nHugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically. The Home Page # Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html $ The Magic of Static # Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld drwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta drwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes drwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials drwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css drwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js $ The Theme Development Cycle # When you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\nPurge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4. I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory # When generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option # Hugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload # Hugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands # Use the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory. ## $ rm -rf public ## ## run hugo in watch mode ## $ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public $ hugo server --watch --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms Watching for changes in /Users/quoha/Sites/zafta/content Serving pages from /Users/quoha/Sites/zafta/public Web Server is available at http://localhost:1313 Press Ctrl+C to stop INFO: 2014/09/29 File System Event: [\u0026#34;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026#34;: MODIFY|ATTRIB] Change detected, rebuilding site WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 1 ms Update the Home Page Template # The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\nindex.html _default/list.html _default/single.html We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page # Right now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and then verify the results.\n$ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 0 pages created 0 tags created 0 categories created in 2 ms $ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt; Live Reload # Note: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] + \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page # \u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts # Now that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md ERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{} $ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md +++ Description = \u0026#34;\u0026#34; Tags = [] Categories = [] +++ :wq $ find themes/zafta/archetypes -type f | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md -rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md $ hugo --verbose new post/first.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/first.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md /Users/quoha/Sites/zafta/content/post/first.md created $ hugo --verbose new post/second.md INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 attempting to create post/second.md of post INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md /Users/quoha/Sites/zafta/content/post/second.md created $ ls -l content/post total 16 -rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md -rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md $ cat content/post/first.md +++ Categories = [] Description = \u0026#34;\u0026#34; Tags = [] date = \u0026#34;2014-09-29T21:54:53-05:00\u0026#34; title = \u0026#34;first\u0026#34; +++ my first post $ cat content/post/second.md +++ Categories = [] Description = \u0026#34;\u0026#34; Tags = [] date = \u0026#34;2014-09-29T21:57:09-05:00\u0026#34; title = \u0026#34;second\u0026#34; +++ my second post $ Build the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;, \u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html $ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates # In Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage # The home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\nrange .Title end The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts # We\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l -rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File # $ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq $ Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html $ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content # The posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; {{ range first 10 .Data.Pages }} \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Build the web site and verify the results.\n$ rm -rf public $ hugo --verbose INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/ INFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;} WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html] 0 draft content 0 future content 2 pages created 0 tags created 0 categories created in 4 ms $ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html -rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html -rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html -rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html $ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/second/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/first/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; $ Create a Post Listing # We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l -rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages # Let\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++ title = \u0026#34;about\u0026#34; description = \u0026#34;about this site\u0026#34; date = \u0026#34;2014-09-27\u0026#34; slug = \u0026#34;about time\u0026#34; +++ ## about us i\u0026#39;m speechless :wq Generate the web site and verify the results.\n$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/theme/\u0026#34;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/about-time/\u0026#34;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/second-post/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/first-post/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; \u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] + \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026#34;post\u0026#34;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if eq .Type \u0026#34;page\u0026#34; }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html -rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html -rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html -rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html -rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml [permalinks] page = \u0026#34;/:title/\u0026#34; about = \u0026#34;/:filename/\u0026#34; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates # If you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials # In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; :wq $ vi themes/zafta/layouts/partials/footer.html \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq Update the Home Page Template to Use the Partials # The most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026#34;theme/partials/header.html\u0026#34; . }} versus\n{{ partial \u0026#34;header.html\u0026#34; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt; {{ range first 10 .Data.Pages }} {{ if eq .Type \u0026#34;post\u0026#34;}} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} \u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt; {{ range .Data.Pages }} {{ if or (eq .Type \u0026#34;page\u0026#34;) (eq .Type \u0026#34;about\u0026#34;) }} \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; {{ end }} {{ end }} {{ partial \u0026#34;footer.html\u0026#34; . }} :wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials # $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026#34;footer.html\u0026#34; . }} :wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts # It\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template # We\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026#34;footer.html\u0026#34; . }} :wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post $ vi themes/zafta/layouts/_default/single.html {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; {{ .Content }} {{ partial \u0026#34;footer.html\u0026#34; . }} :wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html {{ partial \u0026#34;header.html\u0026#34; . }} \u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt; {{ .Content }} {{ partial \u0026#34;footer.html\u0026#34; . }} :wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself # DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n"},{"id":4,"href":"/posts/migrate-from-jekyll/","title":"Migrating from Jekyll","section":"Blog","content":" Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file # Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site # The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\nChange your submodule to point to map gh-pages to public instead of _site (recommended).\ngit submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public Or, change the Hugo configuration to use _site instead of public.\n{ .. \u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;, .. } Convert Jekyll templates to Hugo templates # That\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes # Jekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation # As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll class ImageTag \u0026lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot; else source = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot; end if @link source += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot; if @link source += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot; end source += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption source += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot; source end end end Liquid::Template.register_tag('image', Jekyll::ImageTag) is written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt; \u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt; {{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }} \u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt; {{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }} {{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}} \u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }} {{ .Get \u0026quot;title\u0026quot; }}{{ end }} {{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt; {{ .Get \u0026quot;caption\u0026quot; }} {{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }} {{ .Get \u0026quot;attr\u0026quot; }} {{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }} \u0026lt;/p\u0026gt; {{ end }} \u0026lt;/figcaption\u0026gt; {{ end }} \u0026lt;/figure\u0026gt; \u0026lt;!-- image --\u0026gt; Usage # I simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %} to this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}} As a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches # Fix content # Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up # You\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff # Hey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n"},{"id":5,"href":"/docs/example/table-of-contents/","title":"Table of Contents","section":"Example Site","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":6,"href":"/posts/growth-hacking/","title":"黑客增长简悟","section":"Blog","content":" 引子 # 黑客增长这个词已经出现很久了，之前只是听说过，也仅仅只是听说。这段时间，通过一些资料阅读，算是有一些了解了。简单说一下自己的领悟吧。\n什么是黑客增长 # 黑客增长的英文为Growth Hacking，它有很多其他的中文翻译，常见的有：黑客增长，黑客成长，增长黑客，成长黑客，骇客增长，骇客成长，增长骇客，成长骇客。从这些字面上的意思看，貌似和计算机黑客技术有很大的关系。但是事实确完全不是那么回事。\n黑客增长指的是创业型团队在数据分析基础上，利用产品手段或技术手段来获取自发增长的运营手段。说通俗一点就是：初创公司或者大中型公司内部创业型团队，以数据驱动营销，以市场指导产品，通过低成本的手段解决产品早期增长问题。\n要做哪些工作 # 可以看出，所谓 黑客增长 并不是只通过孤立的一件事情来做成。它其实是一套组合拳的手段。因此，也需要多部门合作。\n几个重点词汇：数据分析，产品手段，技术手段，运营手段\n具体的手段是没有手段，因为所有的手段都是日常的团队工作：\n产品团队 找出产品的重点和亮点，并极限的打造之。站在用户的角度思考问题，解决痛点，简化交互，完善体验。 技术团队 1）利用技术手段，满足产品团队的产品打磨。 2）通过技术优化，尽可能解决技术带来的各种成本。 3）利用数据分析的手段，给产品和运营以各种数据支撑和指导，方便其决策 运营团队 对数据进行分析，找出用户的特征，做更好的运营策略 万变不离数据 # 任何手段和工作都是以结果为导向的。所以，指定目标很重要，而且必须量化。无法量化的目标不叫做目标，叫做口号。\n要能量化目标就必须要有数据指导，也就是技术团队需要支撑的。当然，具体要关心哪些数据以及其算法应该由产品团队和运营团队决定。一个不懂得要看哪些数据的产品和运营不是好产品和好运营。\n数据要经常迭代和修正。产品不同阶段，其目标也不一样。例如一开始考虑拉新，接下来考虑留存，后续可能考虑商业。所以，数据也要进行迭代和修正。\n总结 # 可见，黑客增长 不是说增长就能增长的。至少先要保证下面前提：\n1）产品的大方向正确 2）产品的体检良好 这样才能有机会。在前提正确的基础上，再围绕下面几点来做文章。\n1）Acquisition（获取用户） 2）Activation（激发活跃） 3）Retention（提高留存） 4）Revenue（增加收入） 5）Referral（传播推荐） 每个点都有很多方法和工具。这里真没有什么推荐的，感觉就是经验的积累。\n"},{"id":7,"href":"/posts/HomeBrew%E4%BF%AE%E6%94%B9%E5%9B%BD%E5%86%85%E6%BA%90/","title":"HomeBrew修改国内源","section":"Blog","content":"因为众所周知的原因，正常访问homebrew是很难的。所以，我们需要修改它的源，让其指向国内。\n对于 homebrew，需要替换的是4个模块的镜像： # Homebrew Homebrew Core Homebrew-bottles Homebrew Cask 替换 Homebrew # git -C \u0026ldquo;$(brew \u0026ndash;repo)\u0026rdquo; remote set-url origin https://mirrors.ustc.edu.cn/brew.git\n替换 Homebrew Core # git -C \u0026ldquo;$(brew \u0026ndash;repo homebrew/core)\u0026rdquo; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git\n替换 Homebrew Cask # git -C \u0026ldquo;$(brew \u0026ndash;repo homebrew/cask)\u0026rdquo; remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git\n替换 Homebrew-bottles # 对于 bash 用户： echo \u0026rsquo;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles\u0026rsquo; \u0026raquo; ~/.bash_profile source ~/.bash_profile\n对于 zsh 用户： echo \u0026rsquo;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles\u0026rsquo; \u0026raquo; ~/.zshrc source ~/.zshrc\n"},{"id":8,"href":"/posts/translation-rethinking-kanban/","title":"重新设计我的看板","section":"Blog","content":"发现 一篇文章，觉得有意思，就翻译了一下。\n如果你曾今使用过 Trello，Jira，或者 其他看板工具，你可能习惯于像这样看看板：\n注意：便签的名字被修改，以保护内容\n这里，我们有一个典型的3列布局；To Do，Doing，和 Done。我们有下面3个可用的维度：\n垂直：优先级 水平：状态 颜色：工作业务轨迹 根据项目，颜色的使用也有所不同。有很多系统都是采用这种方式，而我也已经习惯使用这种方式了。即使它有一些问题，像：\n只有几种颜色可以用，所以在复杂的系统里面可能不够 列表里面只有一个 \u0026rsquo;top\u0026rsquo;，所以如果有很多人的工作清单大部分不一致 如果小组是相对独立的，人们可能需要跳过清单的的底部来寻找他们工作上的便签 当然，这些情况是少见的，且可以被管理的。所以我仍然很高兴用这种模型来工作。Jira同样让这简单，因为我可以创建过滤器，仅仅关注看板中我工作需要的部分。 但是，当我最近加入了一个在Trello看板的任务，我看到： 好吧，人们。 我怎么知道这个便签之前的状态？我怎么分离我自己的已经工作完成的记录？ 这里的水平维度由状态被替换成工作的轨迹。我的同事说这样把他解放出来了，因为他是这样思考项目的。我认为得回到我曾经使用过的方式。但是这个项目已经有了比Trello更多的可用的工作轨迹的颜色。\n然后我恍然大悟：我真正关注的状态仅仅是关于\u0026quot;Doing\u0026quot;。这很容易用颜色体现出来。而且所有这些其它可用颜色我确定使用两种来体现我的故事点数：0表示微不足道，2表示简单，4表示困难。\n现在，看板看起来像这样： 现在我的维度是这样：\n垂直：优先级 水平：工作业务轨迹 颜色：状态和困难程度 注意我们添加了一点额外的信息，现在来介绍这6中工作轨迹的选项 我们也在左边添加了一个\u0026quot;Ideas\u0026quot;的列用来表示更高级别的ideas，也仍然需要拆分到不同的工作轨迹中。一个\u0026quot;Done\u0026quot;的列拿到最后边，表示已经完成的便签。\n我们仍然在这点上进行迭代，就像你这么做的。但是，我很高兴它的产生。而且真的很高兴，我不是强迫自己在现有的看板上先入为主。\n"},{"id":9,"href":"/posts/goisforlovers/","title":"(Hu)go Template Primer","section":"Blog","content":"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates # Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax # Golang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }} Parameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }} Methods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }} Parentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }} Variables # Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt; Variables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}} {{ $address }} Functions # Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }} Includes # When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }} Logic # Go templates provide the most basic iteration and conditional logic.\nIteration # Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }} {{ . }} {{ end }} Example 2: Declaring value variable name\n{{range $element := array}} {{ $element }} {{ end }} Example 2: Declaring key and value variable name\n{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }} Conditionals # If, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\nfalse 0 any array, slice, map, or string of length zero Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }} Example 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{else}} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }} Example 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Example 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }} Example 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }} {{ index .Params \u0026quot;alt\u0026quot; }} {{ else if isset .Params \u0026quot;caption\u0026quot; }} {{ index .Params \u0026quot;caption\u0026quot; }} {{ end }} Pipes # One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }} is the same as\n{{ eq 1 1 | if }} Same {{ end }} It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }} Access the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}} Stuff Here {{ end }} Could be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }} Stuff Here {{ end }} Context (aka. the dot) # The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n{{ $title := .Site.Title }} {{ range .Params.tags }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt; {{ end }} Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters # Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters # In each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n--- title: \u0026#34;Permalinks\u0026#34; date: \u0026#34;2013-11-18\u0026#34; aliases: - \u0026#34;/doc/permalinks/\u0026#34; groups: [\u0026#34;extras\u0026#34;] groups_weight: 30 notoc: true --- Here is the corresponding code inside of the template:\n{{ if not .Params.notoc }} \u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt; {{ .TableOfContents }} \u0026lt;/div\u0026gt; {{ end }} Using Site (config) Parameters # In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; TwitterUser: \u0026#34;spf13\u0026#34; SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt; \u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026#34;twitter\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://twitter.com/{{.}}\u0026#34; rel=\u0026#34;author\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/images/twitter.png\u0026#34; width=\u0026#34;48\u0026#34; height=\u0026#34;48\u0026#34; title=\u0026#34;Twitter: {{.}}\u0026#34; alt=\u0026#34;Twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026#34;recent\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; {{end}}\u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; "},{"id":10,"href":"/posts/hugoisforlovers/","title":"Getting Started with Hugo","section":"Blog","content":" Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\nClone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Press ctrl+c to stop Once you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site # Stop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 27 ms \u0026gt; Web Server is available at http://localhost:1313 \u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content \u0026gt; Press ctrl+c to stop Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site \u0026gt; 29 pages created \u0026gt; 0 tags index created \u0026gt; in 26 ms Refresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun # The best way to learn something is to play with it.\n"},{"id":11,"href":"/posts/12-Years-1780-Kilometers-6-Hours/","title":"12年，1780公里，6小时","section":"Blog","content":"12年前，青涩的他怀揣着懵懂的梦想踏上了这个被人津津乐道的城市的土地。\n古色古香的南锣鼓巷和钢筋铁骨的国贸中心、气势磅礴的万里长城和宁静如璧的互城小河体现出它与生俱来的混乱。密密麻麻的人群，拥堵不堪的车流，忙忙碌碌的人们，匆匆忙忙的脚步却又反映出那与混乱抗衡的秩序。人们在这儿实现梦想、体味繁华、分享喜悦，也在这儿增长欲望、产生颓废、无尽挣扎。\n12年的经历，让他飞快的成长。\n12年的岁月，让他收获颇多。\n12年的人生，有喜悦，有悲伤，有欢乐，有忧愁。\n12年的生活，既感谢，也抱怨，既接受，也无奈。\n12年的日子，充实却又平淡。\n一路走来，让他深深体会到在这个什么都有，什么都不缺少的城市里却唯独没有尽头。在这里，只有那丁点存在感，却没有一丝归属感。\n背起行囊，拾拕心情，6小时，1780公里，从新出发。\n"},{"id":12,"href":"/posts/QCon-Beijing-2013/","title":"2013年的北京QCon","section":"Blog","content":" 引子 # 接到了QCon BeiJing的邀请，很荣幸，也很有压力，不知道能不能讲好。尽力吧。\n一周准备 # 在确定了 Topic 的主题后，开始了为期一周的准备时间。这是忙碌的一周，本以为准备PPT会很简单的，但写的时候，才发现很多东西都需要完善和准备，确实不简单。但既然参加 QCon 的讲演，既然去分享，那么就一定要做好它，一定要讲好它。不管怎么说，断断续续，磨磨蹭蹭，总算是写完了。\n技巧 # 参加了qcon的讲师培训，收获颇多。\n演讲和阅读\n演讲不是阅读，不要在演讲中去阅读那些本来应该由资料传达的信息。演讲应该承担书面资料解决不好的问题。『演讲陈述』与『资料阅读』有着不同的特点。否则，直接把讲演的资料打印好发给听讲者回去阅读好了。\n准备内容\n先准备内容，后进行排版（左右脑不同，混杂进行眼中降低效率） 用手绘思维导图进行内容整理（手绘的印象会比用软件强很多倍） 产品的FAB（Feature, Advantage, Benefit），聚焦对听众的Benifit。 内容萃取漏斗，化繁为简, 信息由混乱复杂变为简洁有力的过程。（通过ticker note能够做到这些） 传递信心比传递信息更重要（二者会表现出截然不同的思路和做法。不要试图把自己在演讲领域中知道的东西全盘托出，以显干货十足。一次最糟糕的演讲陈述,可能就是因为负载了过多的信息造成的。） 让你的演讲有合适的『粒度』，不要用逐字逐句的演讲稿，保持粒度最佳工具“sticker-note” 不要用层级结构，用线性结构来组织slides 现场表现\n克服紧张：转移观众注意力，刻意演练（自我录像5分钟），现场考察（重要） 手势：万能切西瓜，双手切，左手切，右手切，切向观众。 忌讳：揣兜，扶臂\n视觉力 slides 信息应该具备三个层次：\n幻灯片：要点、图片、表格，辅助进行视觉传达 注释：辅助进行语言传达 资料讲义：辅助传递无法细致展开的内容。可以附在最后几页，也可以打印出来，然后发给听讲者。 手段\n利用“演讲者视图”，在切换到下一页ppt之前，先通过演讲者试图中的内容，讲述下一页ppt的内容，然后再自然切换，凸显熟练与从容。此手法再电影中的学名：shock cutting。\n作为讲师 # 4月，QCon终于开始了。26号上午的企业级第2场是我的slides。主题是：SOHU邮箱在Python中的经验，感觉不错，有可以提高的地方。\n但是讲的时候过于来回走动了 没有在停在一个地方让焦点都集中过来 超时7分钟，预期40分钟，讲了47分钟 这个是我infoq演讲的内容 这个是slides\n作为听众 # Erlang开发实践 # QCon北京，我除了是讲师，也听了几场不错的演讲。尤其是对于 淘宝 余锋 的 《erlang开发实践》映像还是蛮深刻的。除了开始关于erlang的哲学和世界观，基本上就没有和erlang相关的东西了，都是再讲一些系统设计相关的。\nerlang的世界观\n世界是并行的 外物皆独善其身 万事皆通讯 世界观很新颖，但是却是很正确。正是这种简单直接的世界观，使得erlang的世界非常的直观和简单\n大型系统具有的共通性\n高响应 高性能 高一致性 对于这个，我觉得，余锋的意思是指各个系统应该保证在分布式环境下面是一致的，而不是出现多个不同的版本。当然，高一致性还可以指数据上的高一致性。不过大型系统不一定要求高一致性，这个是由具体的业务决定的。而且在很多时候，高性能，高响应 和 数据高一致性很难达到同时满足\n大型系统设计\n复杂性管理\n系统肯定具有复杂性，尤其是大型系统。既然存在复杂性，那么通常要做的事情是把复杂性集中到一个点上，而不要分散到各个地方，只有这样，才能容易管理，容易差错，容易设计，容易实现\n警告零容忍\n我非常的赞成这个观点。对于看似平常的warning千万不要不在乎，反而，你应该重视起来。因为，这个看似无所谓的warning极有可能是导致你系统崩溃的最亏祸首。这个在我做Postfix MTA 和 Milter 交互时候出现的warning就能开出来。\n捣乱系统\n余锋提出了一个有意思的观点，就是自己写一个捣乱系统用来模拟各种真实发生的不可预知的异常，例如：网络故障，第3方依赖服务奔溃，硬件损坏，数据库错误。从而破坏生产环境中各种服务的正常运行。用来检测程序的鲁棒性。\n大型服务部署\n不停机热更新\n这个和erlang有关系，因为erlang是支持热更新代码的。对于其它语言，例如python，那么可能没有这种方式，能做的事情可能就是 restart service gracefully。\n系统监控\n各种监控，磁盘，IO，网络，响应等等\n支持随时更新，删除，添加，停止，启动节点\n对集群的安全，进行审计：1) 完善的日志；2) 完整的history；\n很容易的查找到误操作的步骤（当然，对于操作的history可能和一些业务相关）\n推荐引擎 # 听了推荐引擎的专场。感觉总体将来，新意不高。基本上都差不多。关于推荐引擎做一下总结。\n推荐引擎的本质：\n在用户和商品之间通过一种合理的方式找到一种联系\n把具有和当前用户喜欢的商品相同的特征的商品推荐出来 类似用户喜欢的，但是当前用户还没有买，推荐出来 把和用户喜欢的商品相似的商品进行推荐 冷启动\n所谓冷启动就是说，当一个用户刚刚注册，或者一个用户初次登陆，那么他的历史数据为0，或者很少，所以，很难分析他的购买意图\n通过商品热点来推荐 通过地域特点来推荐 通过用户信息来推荐 实时的捕获用户的浏览行为，进行实时分析，去连线商品数据进行推荐（这个是一个有难度的实时或者准实时系统） 算法\n协同过滤可以说是所有推荐引擎的第一步。任何一个推荐引擎一开始一定得用协同过滤来实现一遍 jaccard 算法公式：买过两个产品的交集/买过两个产品的并集 推荐引擎往往是多个算法结合和配合使用，而不是单一的某种算法 算法的关注点 ctr: 点击率，用户是否喜欢推荐结果 cvr: 转化率，从推荐到付钱 pcvr: ctr * cvr 这个值越高越好，但是ctr和cvr基本上是一个反比趋势 算法重要性：算法很重要，但是不是最重要。工程和系统的实现能力才是最重要的，甚至高于算法。 eg. 一淘的 两个产品之间的相似度： hadoop，每天需要计算 4个小时，后来的优化 用了2个小时，最后只需要24min 20% improve in CTR 电商推荐引擎的数据\n数据模型：\n宝贝metadata，title，attributes 人群属性：年纪，性别，购买力 等等 性别预测：物理性别(男/女)，购买性别(账号可能家庭公用，又可以分成长期和短期性别) 对于长期：广告主有用 短期：推荐系统有用 浏览数据：时长，点击，购买 等等 数据形式\ninput: \u0026lt;userId, \u0026lt;item1, item2, …, itemN\u0026raquo; 通常就是日志log 通常具有稀疏性，但是也不是完全想象中那样子稀疏，公式定义： 活跃用户数量/活跃产品数 被点过1次，或者被看过1次的商品才能有推荐价值 output: \u0026lt;itemMain: itemRecord1, itemRecord2, … , itemRecordN\u0026gt; 搜索结果页面推荐\n相关推荐，搜索结果从文本相似度，推荐结果从图片相似度 基于query做惊喜性的推荐，婴儿床-\u0026gt;床单-\u0026gt;衣服 注意点\n业内一般认为：user相似度作为推荐理由可能不会得到对方的认可 对领域和对数据的理解比算法要重要 算法很重要，但是不是最重要。工程和系统的实现能力才是最重要的，甚至高于算法 购买贵重物品的用户购买意图一般会很明确 "},{"id":13,"href":"/posts/fudge-using-document/","title":"fudge使用文档","section":"Blog","content":"fudge是一个python的mock框架，我非常喜欢它。决定把使用文档翻译出来。\nFudging a Web Service # 当测试一个使用web服务的代码时，你可能想快速的设置一个不依赖于真实的在互联网上的web服务。这是一个使用mock对象的好的方式。假设你又一个Twitter的机器人，看起来像这样：\n\u0026gt;\u0026gt;\u0026gt; import oauthtwitter \u0026gt;\u0026gt;\u0026gt; def post_msg_to_twitter(msg): ... api = oauthtwitter.OAuthApi( ... \u0026#39;\u0026lt;consumer_key\u0026gt;\u0026#39;, \u0026#39;\u0026lt;consumer_secret\u0026gt;\u0026#39;, ... \u0026#39;\u0026lt;oauth_token\u0026gt;\u0026#39;, \u0026#39;\u0026lt;oauth_token_secret\u0026gt;\u0026#39; ... ) ... api.UpdateStatus(msg) ... print \u0026#34;Sent: %s\u0026#34; % msg \u0026gt;\u0026gt;\u0026gt; 因为 oauthtwitter是独立维护的，你的代码只要调用了正确的方法，就能正常工作。\nA Simple TestCase # 你可以使用一个假的声明的期望的class来代替OAuthApi的class，它这样用：\n\u0026gt;\u0026gt;\u0026gt; import fudge \u0026gt;\u0026gt;\u0026gt; @fudge.patch(\u0026#39;oauthtwitter.OAuthApi\u0026#39;) ... def test(FakeOAuthApi): ... (FakeOAuthApi.expects_call() ... .with_args(\u0026#39;\u0026lt;consumer_key\u0026gt;\u0026#39;, \u0026#39;\u0026lt;consumer_secret\u0026gt;\u0026#39;, ... \u0026#39;\u0026lt;oauth_token\u0026gt;\u0026#39;, \u0026#39;\u0026lt;oauth_token_secret\u0026gt;\u0026#39;) ... .returns_fake() ... .expects(\u0026#39;UpdateStatus\u0026#39;).with_arg_count(1)) ... ... post_msg_to_twitter(\u0026#34;hey there fellow testing freaks!\u0026#34;) \u0026gt;\u0026gt;\u0026gt; 让我们来分解一下：\n测试阶段，patch装饰器将用一个假的对象临时的打一个补丁。并且使它作为一个参数，传入到测试方法中。这允许你添加你所想要的东西。 这里你看到的这个fake对象，期望有一个方法被调用，这个方法使用4个指定的字符串作为参数。它返回了一个对象实例(一个新的fake对象)，它希望你使用一个参数调用fake_oauth.UpdateStatus() 最后, post_msg_to_twitter() 被调用。让我们运行测试！ \u0026gt;\u0026gt;\u0026gt; test() Sent: hey there fellow testing freaks! 很高兴，它通过了。\nFudge让你声明了你想要的或松散或紧密的期望(expectations)。如果你不关心确切的参数，你可以不调用fudge.Fake.with_args()。如果你不关心方法是不是真的被调用，你可以用fudge.Fake.provides()来代替fudge.Fake.expects()。同样的，当你不想为真实的参数值而操心，可以使用fudge.Fake.with_arg_count()。在其它方面有检测者，检测参数的值。\nFake objects without patches (dependency injection) # 如果你不需要任何补丁，你可以使用fudge.test()装饰器。这将捕获任何一个被抛出的非预期的异常。这是一个例子：\n\u0026gt;\u0026gt;\u0026gt; def send_msg(api): ... if False: # a mistake ... api.UpdateStatus(\u0026#39;hello\u0026#39;) ... \u0026gt;\u0026gt;\u0026gt; @fudge.test ... def test_msg(): ... FakeOAuthApi = (fudge.Fake(\u0026#39;OAuthApi\u0026#39;) ... .is_callable() ... .expects(\u0026#39;UpdateStatus\u0026#39;)) ... api = FakeOAuthApi() ... send_msg(api) ... \u0026gt;\u0026gt;\u0026gt; test_msg() Traceback (most recent call last): ... AssertionError: fake:OAuthApi.UpdateStatus() was not called Stubs Without Expectations # 如果你想要一个fake对象，可以被调用但是它不是一定被调用，除了用Fake.provides()代替Fake.expects()外，代码完全一样。这是一个调用is_logged_in()永远返回True的例子：\n\u0026gt;\u0026gt;\u0026gt; def show_secret_word(): ... import auth ... user = auth.current_user() ... if user.is_logged_in(): ... print \u0026#34;Bird is the word\u0026#34; ... else: ... print \u0026#34;Access denied\u0026#34; ... \u0026gt;\u0026gt;\u0026gt; @fudge.patch(\u0026#39;auth.current_user\u0026#39;) ... def test_secret_word(current_user): ... user = current_user.expects_call().returns_fake() ... user = user.provides(\u0026#39;is_logged_in\u0026#39;).returns(True) ... show_secret_word() ... \u0026gt;\u0026gt;\u0026gt; test_secret_word() Bird is the word 注意，如果user.is_logged_in()没有被调用，不会有任何的异常被抛出。因为它是\u0026rsquo;提供\u0026rsquo;(provided)，不是\u0026rsquo;期望\u0026rsquo;(expected)。\nReplacing A Method # 有时候，返回一个静态的值不是完全足够的。你真正需要运行一些代码。你可以使用Fake.calls()，就像这样：\n\u0026gt;\u0026gt;\u0026gt; auth = fudge.Fake() \u0026gt;\u0026gt;\u0026gt; def check_user(username): ... if username==\u0026#39;bert\u0026#39;: ... print \u0026#34;Bird is the word\u0026#34; ... else: ... print \u0026#34;Access denied\u0026#34; ... \u0026gt;\u0026gt;\u0026gt; auth = auth.provides(\u0026#39;show_secret_word_for_user\u0026#39;).call(check_user) \u0026gt;\u0026gt;\u0026gt; # Now, the check_user function gets called instead: \u0026gt;\u0026gt;\u0026gt; auth.show_secret_word_for_user(\u0026#34;bert\u0026#34;) Bird is the word \u0026gt;\u0026gt;\u0026gt; auth.show_secret_word_for_user(\u0026#34;ernie\u0026#34;) Access denied Cascading Objects # 你可能想让一些对象用长的链式的工作。这有一个使用fudging SQLAlchemy级联查询的例子。注意 Fake.returns_fake() 指定于session.query(User)返回一个新的对象。同样注意因为query()返回一个迭代器，它设置返回一个fake用户对象的列表。\n\u0026gt;\u0026gt;\u0026gt; import fudge \u0026gt;\u0026gt;\u0026gt; session = fudge.Fake(\u0026#39;session\u0026#39;) \u0026gt;\u0026gt;\u0026gt; query = (session.provides(\u0026#39;query\u0026#39;) ... .returns_fake() ... .provides(\u0026#39;order_by\u0026#39;) ... .returns( ... [fudge.Fake(\u0026#39;User\u0026#39;).has_attr(name=\u0026#39;Al\u0026#39;, lastname=\u0026#39;Capone\u0026#39;)] ... ) ... ) \u0026gt;\u0026gt;\u0026gt; from models import User \u0026gt;\u0026gt;\u0026gt; for instance in session.query(User).order_by(User.id): ... print instance.name, instance.lastname ... Al Capone Multiple Return Values # 我们说，你想测试需要调用多次和返回多个结果的代码。到现在，你仅仅看到Fake.returns()方法将返回一个无穷值(value infinitely)。要改变它，调用To change that, 调用Fake.next_call()可以指定调用顺序。这是一个购物车场景的例子:\n\u0026gt;\u0026gt;\u0026gt; cart = (fudge.Fake(\u0026#39;cart\u0026#39;) ... .provides(\u0026#39;add\u0026#39;) ... .with_args(\u0026#39;book\u0026#39;) ... .returns({\u0026#39;contents\u0026#39;: [\u0026#39;book\u0026#39;]}) ... .next_call() ... .with_args(\u0026#39;dvd\u0026#39;) ... .returns({\u0026#39;contents\u0026#39;: [\u0026#39;book\u0026#39;, \u0026#39;dvd\u0026#39;]})) \u0026gt;\u0026gt;\u0026gt; cart.add(\u0026#39;book\u0026#39;) {\u0026#39;contents\u0026#39;: [\u0026#39;book\u0026#39;]} \u0026gt;\u0026gt;\u0026gt; cart.add(\u0026#39;dvd\u0026#39;) {\u0026#39;contents\u0026#39;: [\u0026#39;book\u0026#39;, \u0026#39;dvd\u0026#39;]} \u0026gt;\u0026gt;\u0026gt; cart.add(\u0026#39;monkey\u0026#39;) Traceback (most recent call last): ... AssertionError: This attribute of fake:cart can only be called 2 time(s). Expecting A Specific Call Order # 你可能需要测试一个对象，预计它在一个特定的顺序中作为一个方法被调用。仅仅在调用fudge.Fake.expects()之前带使用fudge.Fake.remember_order()，就像这样:\n\u0026gt;\u0026gt;\u0026gt; import fudge \u0026gt;\u0026gt;\u0026gt; session = (fudge.Fake(\u0026#34;session\u0026#34;).remember_order() ... .expects(\u0026#34;get_count\u0026#34;).returns(0) ... .expects(\u0026#34;set_count\u0026#34;).with_args(5) ... .expects(\u0026#34;get_count\u0026#34;).returns(5)) ... \u0026gt;\u0026gt;\u0026gt; session.get_count() 0 \u0026gt;\u0026gt;\u0026gt; session.set_count(5) \u0026gt;\u0026gt;\u0026gt; session.get_count() 5 \u0026gt;\u0026gt;\u0026gt; fudge.verify() 如果你没有按照顺序调用，讲输出一个描述性的错误。\n\u0026gt;\u0026gt;\u0026gt; session.set_count(5) Traceback (most recent call last): ... AssertionError: Call #1 was fake:session.set_count(5); Expected: #1 fake:session.get_count()[0], #2 fake:session.set_count(5), #3 fake:session.get_count()[1], end Allowing any call or attribute (a complete stub) # 如果你需要一个对象，延迟提供任何调用或者任何属性，你可以声明fudge.Fake.is_a_stub()。任何被请求的方法或者属性将永远返回一个新的fudge.Fake实例，使其更加容易的工作在复杂的对象上。这有一个例子：\n\u0026gt;\u0026gt;\u0026gt; Server = fudge.Fake(\u0026#39;xmlrpclib.Server\u0026#39;).is_a_stub() \u0026gt;\u0026gt;\u0026gt; pypi = Server(\u0026#39;http://pypi.python.org/pypi\u0026#39;) \u0026gt;\u0026gt;\u0026gt; pypi.list_packages() fake:xmlrpclib.Server().list_packages() \u0026gt;\u0026gt;\u0026gt; pypi.package_releases() fake:xmlrpclib.Server().package_releases() Stubs像这样无限的进行。\n\u0026gt;\u0026gt;\u0026gt; f = fudge.Fake(\u0026#39;base\u0026#39;).is_a_stub() \u0026gt;\u0026gt;\u0026gt; f.one.two.three().four fake:base.one.two.three().four 注意当使用fudge.Fake.is_a_stub()，你不能延迟访问任何有相同名字的属性或者方法，像returns()或者with_args()。你需要直接使用fudge.expects()等，来声明一个预期。\nWorking with Arguments # fudge.Fake.with_args() 方法可以随意的允许你声明怎样传递参数到你的对象的预期。对于一个预期的确定的参数值，它通常就足够了。但是有时候你需要为动态的参数值使用fudge.inspector方法。\n这有一个短的例子：\n\u0026gt;\u0026gt;\u0026gt; import fudge \u0026gt;\u0026gt;\u0026gt; from fudge.inspector import arg \u0026gt;\u0026gt;\u0026gt; image = (fudge.Fake(\u0026#34;image\u0026#34;) ... .expects(\u0026#34;save\u0026#34;) ... .with_args(\u0026#34;JPEG\u0026#34;, arg.endswith(\u0026#34;.jpg\u0026#34;), resolution=arg.any()) ... ) 这个声明十分的灵活；它允许下面这样的调用：\n\u0026gt;\u0026gt;\u0026gt; image.save(\u0026#34;JPEG\u0026#34;, \u0026#34;/tmp/unicorns-and-rainbows.jpg\u0026#34;, resolution=72) \u0026gt;\u0026gt;\u0026gt; image.save(\u0026#34;JPEG\u0026#34;, \u0026#34;/tmp/me-being-serious.jpg\u0026#34;, resolution=96) 这就是Fudge！更多的细节请看fudge的API：\nfudge\nfudge.inspector\nfudge.patcher\n"},{"id":14,"href":"/posts/fate/","title":"善·缘","section":"Blog","content":"不信一见钟情，只因为我不是一个极端的人。\n既然不是一个极端的人，就不会有极端的想法，也不会有极端的感受。\n我相信缘分。\n缘分是一种奇妙的东西，你不想的时候，却偏偏来到你的身旁。\n我相信命运。\n命运是一种缥缈的东西，你永远琢磨不透，上天的如此安排究竟为何。\n"},{"id":15,"href":"/posts/a-quick-guide-to-using-tornado/","title":"tornado教程","section":"Blog","content":"最近要做一个新的系统：一个披着邮件系统外衣的消息系统。性能肯定是一方面，所以Webpy就不打算用了。Django本来是我的第一选择，但是觉得Django可能也会出现性能问题。我还是考虑其它的吧。选来选去，最后选择了Torando。因为它：简单；传说性能好；成熟案例 （ 知乎, FriendFeed )\n简单尝试 # 安装 sudo pip install tornado 第一个demo #coding: utf-8 import tornado.ioloop import tornado.web class Index(tornado.web.RequestHandler): def get(self): self.write(\u0026#39;Hello, world ! \\n\u0026#39;) urls = ( (\u0026#39;/\u0026#39;, Index), ) def start(): app = tornado.web.Application(urls) app.listen(4322) tornado.ioloop.IOLoop.instance().start() if __name__ == \u0026#39;__main__\u0026#39;: start() 启动：python webpy_test.py 0.0.0.0:4322 GET 测试：curl http://localhost:4322 结果如下： Hello, world\n看到了么，和Webpy长得几乎一模一样。我先简单压测一下它。如果好的话，我觉得可以考虑新系统用它来写，旧系统或者也可以往这方面上转。\n压测：ab -c 10 -n 1000 http://192.168.95.222:4322/ This is ApacheBench, Version 2.3 \u0026lt;$Revision: 655654 $\u0026gt; Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/ Licensed to The Apache Software Foundation, http://www.apache.org/ Benchmarking 192.168.95.222 (be patient) Completed 100 requests Completed 200 requests Completed 300 requests Completed 400 requests Completed 500 requests Completed 600 requests Completed 700 requests Completed 800 requests Completed 900 requests Completed 1000 requests Finished 1000 requests Server Software: TornadoServer/2.1.1 Server Hostname: 192.168.95.222 Server Port: 4322 Document Path: / Document Length: 16 bytes Concurrency Level: 10 Time taken for tests: 0.693 seconds Complete requests: 1000 Failed requests: 0 Write errors: 0 Total transferred: 174000 bytes HTML transferred: 16000 bytes Requests per second: 1443.30 [#/sec] (mean) Time per request: 6.929 [ms] (mean) Time per request: 0.693 [ms] (mean, across all concurrent requests) Transfer rate: 245.25 [Kbytes/sec] received Connection Times (ms) min mean[+/-sd] median max Connect: 1 1 1.0 1 13 Processing: 1 6 1.9 5 18 Waiting: 1 5 1.8 5 18 Total: 3 7 1.8 6 19 Percentage of the requests served within a certain time (ms) 50% 6 66% 7 75% 7 80% 7 90% 8 95% 10 98% 13 99% 17 100% 19 (longest request) 每秒将近是1443，接近webpy的10倍。\n压测-100并发，2000请求：ab -c 100 -n 2000 http://192.168.95.222:4322/ This is ApacheBench, Version 2.3 \u0026lt;$Revision: 655654 $\u0026gt; Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/ Licensed to The Apache Software Foundation, http://www.apache.org/ Benchmarking 192.168.95.222 (be patient) Completed 200 requests Completed 400 requests Completed 600 requests Completed 800 requests Completed 1000 requests Completed 1200 requests Completed 1400 requests Completed 1600 requests Completed 1800 requests Completed 2000 requests Finished 2000 requests Server Software: TornadoServer/2.1.1 Server Hostname: 192.168.95.222 Server Port: 4322 Document Path: / Document Length: 16 bytes Concurrency Level: 100 Time taken for tests: 1.075 seconds Complete requests: 2000 Failed requests: 0 Write errors: 0 Total transferred: 348000 bytes HTML transferred: 32000 bytes Requests per second: 1860.06 [#/sec] (mean) Time per request: 53.762 [ms] (mean) Time per request: 0.538 [ms] (mean, across all concurrent requests) Transfer rate: 316.06 [Kbytes/sec] received Connection Times (ms) min mean[+/-sd] median max Connect: 1 1 1.0 1 8 Processing: 4 51 13.0 46 76 Waiting: 4 51 13.0 46 75 Total: 8 53 12.8 48 77 Percentage of the requests served within a certain time (ms) 50% 48 66% 65 75% 65 80% 65 90% 66 95% 70 98% 73 99% 73 100% 77 (longest request) 每秒1800个请求，响应为53.8ms，很强大啊。\n那就选它了。\n主要核心 # Handler # 对于Tornado而言，MVC中的C就是它的Handler。Torando的Handler非常好写，只要继承自tornado.web.RequestHandler就好了。下面我统一的把Handler叫做Controller，因为习惯了这种叫法。对于Controller的主要调用顺序如下：\n__init__：构造方法，如果需要在开始做一些事情的话，不推荐在这里。而推荐使用initialize initialize：这里做事情，比方说给这个Controller加入一些成员变量。例如： class TestController(tornado.web.RequestHandler): def initialize(self): self.uuid = uuid.uuid4().hex prepare：调用具体的get/post/...方法之前，会调用它。在这里加入加入一些权限控制。比如说，除了登陆页面外，需要登陆成功了才能进行访问。 class TestController(tornado.web.RequestHandler): def prepare(self): if not self.request.uri.startswith(self.get_login_url()) \\ and self.current_user is None: self.redirect(self.get_login_url()) get/post/put/delete/...：具体业务的方法 get_error_html：当有异常抛出的时候会调用它, 比方说，我们要渲染自己的错误页面 def get_error_html(self, status_code, **kwargs): return self.render_string( \u0026#39;my_error.html\u0026#39;, code=code, message=message, exception=exception ) finish：这个是一个很重要的方法，因为tornado最后总会调用finish一次，且仅仅调用一次。这个是由于它是异步框架的原因。 除了上面的调用顺序中的几个方法，常用的就是下面的了:\nget_current_user：得到当前用户，这个需要自己重写。一般的做法，从cookie中找到相应的session信息，再通过查session或者查db找到具体的用户 def get_current_user(self): username = self.get_secure_cookie(\u0026#34;user\u0026#34;) return self.db.get(\u0026#34;select * from user where username = %s\u0026#34;, username) if username else None redirect：302跳转到某个地址。我一般喜欢封装一下，封装为： def redirect_to(self, path, notice = None): self.notice(notice) return self.redirect(path) 这里的notice其实类似于rails中的flash。利用cookie实现的。代码如下：\ndef notice(self, value = None): if value is not None: _value = urllib2.quote(value.encode(\u0026#39;utf-8\u0026#39;), \u0026#39;true\u0026#39;) self.set_cookie(self.FLASH_COOKIE_KEY, _value) else: v = self.get_cookie(self.FLASH_COOKIE_KEY, None) self.clear_cookie(self.FLASH_COOKIE_KEY) return urllib.unquote_plus(v).decode(\u0026#39;utf-8\u0026#39;) if v is not None else v render：渲染某个页面，同样我也细化封装一下： def render_view(self, view_name, notice = None, **kwargs): kwargs.update(filters) _notice = notice or self.notice() return self.render(view_name, notice = _notice, **kwargs) 这样我就可以传入更多的默认渲染的东西\nDB操作 # tornado 的db操作非常简单。简单到没有。仅仅只是对 mysql提供了基本的封装。\n打开连接： db = database.Connection(host, database, user=None, password=None, max_idle_time=7 * 3600) 查询多条记录 # 可能sql注入 for user in db.query(\u0026#34;SELECT * FROM user WHERE gender=\u0026#39;f\u0026#39;\u0026#34;): print user.username, user.password # 没有sql注入 db.query(\u0026#34;SELECT * FROM user WHERE gender = %s\u0026#34;, \u0026#39;f\u0026#39;): 查询单条记录：永远只是返回第1条 db.get(\u0026#39;SELECT * FROM user WHERE id = 1\u0026#39;) # 可能有sql注入 db.get(\u0026#39;SELECT * FROM user WHERE id = %s\u0026#39;, 1) # 没有sql注入 删除/修改/插入 db.execute(sql, *parameters) 批量 的删除/修改/插入 db.executemany(sql, *parameters) 注意： 没有transaction的处理。\nTemplates # tornado的templates，就是MVC的V，即：view。对于页面上常用的tag，基本和django一样。最大的差距就是所有的都是end结尾。不像django的endif等等。\n常用tag\nif 比django的好，django没有elif {% if %} {% elif %} {% else %} {% end %} block 和 django不同点：不需要 endblock {% block %} {% end %} extend和django的一样 {% extend %} for循环和django一样 {% for %} {% end %} 设置变量： 一个变量 name = \u0026lsquo;poy\u0026rsquo;, 这个对于一些navgation的高亮很有帮助。\n{% set name=\u0026#39;poy\u0026#39; %} 嵌入python代码：django里面只能是filter，但是Tornado是允许在template里面直接写python的代码的： {{ \u0026#39;RyanPoy\u0026#39;.lower() }} 对于python代码，可以直接封装成方法，然后，tornado可以直接在handler render 一个template的的时候把相应的function以key-value的方式传过来，这样就可以直接使用了。\nclass HelloHandler(WebHandler): return self.render(\u0026#39;test.html\u0026#39;, hello = lambda name: \u0026#39;hello, %s\u0026#39; % name) 然后在test.html里面写：\n{{ hello(\u0026#39;pengyi\u0026#39;) }} Route # tornado的url就是下面的形式：\nurls = [ (r\u0026#39;/user/show/\u0026#39;, UserShow), (r\u0026#39;/user/login/\u0026#39;, UserLogin), (r\u0026#39;/group/maillist/\u0026#39;, GroupMaillist), ] 这里给出一个封装，用来自动的进行route，首先要求，项目目录如下：\n接下来，就是url的自动生成了。我写了一个route.py的文件。 route.py\n#coding: utf-8 import os import sys def __url_of(module_name): return \u0026#39;/\u0026#39;.join([ v for v in module_name.split(\u0026#39;_\u0026#39;) if v ]) def reasoning(): from app.controllers.base_controller import BaseController valible_suffix = [\u0026#39;/\u0026#39;] controllers_dir = \u0026#39;app/controllers\u0026#39; controllers_package = \u0026#39;.\u0026#39;.join(controllers_dir.split(\u0026#39;/\u0026#39;)) controllers_dir = os.path.normpath(os.path.join(os.path.dirname(__file__), \u0026#39;..\u0026#39;, controllers_dir)) urls = [] for _, _, files in os.walk(controllers_dir): for f in files: if f == \u0026#39;base_controller.py\u0026#39; or not f.endswith(\u0026#39;controller.py\u0026#39;): continue prefix_name = f[0:-3] # 3 为 len(\u0026#39;.py\u0026#39;) model_name = prefix_name[0:-11] # 11 为 len(\u0026#39;_controller\u0026#39;) module_name = controllers_package + \u0026#39;.\u0026#39; + prefix_name module = __import__(module_name, fromlist=[\u0026#39;*\u0026#39;]) # 导入所有的内容到内存中 for class_name in dir(module): try: obj = getattr(module, class_name) if obj is BaseController or not issubclass(obj, BaseController): continue except TypeError, _: continue clazz = getattr(module, class_name) controller_file_name = module_name.split(\u0026#39;.\u0026#39;)[-1] for suffix in valible_suffix: if controller_file_name != \u0026#39;index_controller\u0026#39;: url = \u0026#39;/%s/%s%s\u0026#39; % (__url_of(model_name), class_name.lower(), suffix) else: # 如果是index_controller，那么映射只有class name，controller name 不要 url = \u0026#39;/%s%s\u0026#39; % (class_name.lower(), suffix) urls.append((url, clazz)) if class_name.lower() == \u0026#39;index\u0026#39;: for suffix in valible_suffix: if controller_file_name != \u0026#39;index_controller\u0026#39;: url = \u0026#39;/%s%s\u0026#39; % (__url_of(model_name), suffix) urls.append((url, clazz)) return urls def special(): import app.controllers as controllers mapping = { \u0026#39;/\u0026#39;: controllers.user_controller.Login } urls = [] for url, clazz in mapping.iteritems(): urls.append((url, clazz)) return urls def all(): def merge(all_urls_dict, mappings): for mapping in mappings: url, clazz = mapping[0], mapping[1] all_urls_dict[url] = (url, clazz) def merge_of(reasoning, special): all = {} merge(all, reasoning) merge(all, special) urls = all.values() urls.sort() return urls return merge_of(reasoning(), special()) def show(url_mappings): for mapping in url_mappings: print mapping if __name__ == \u0026#39;__main__\u0026#39;: name = \u0026#39;all\u0026#39; if len(sys.argv) == 2 and sys.argv[1] in (\u0026#39;all\u0026#39;, \u0026#39;reasoning\u0026#39;, \u0026#39;special\u0026#39;): name = sys.argv[1] urls = eval(name)() show(urls) 对于controller的写法如下：\ncompany_controller.py\n#coding: utf-8 from app.controllers.base_controller import BaseController class Index(BaseController): def get(self): pass def post(self): pass class List(BaseController): def get(self): pass def post(self): pass class Create(BaseController): def get(self): pass def post(self): pass class Show(BaseController): def get(self): pass def post(self): pass class Update(BaseController): def get(self): pass def post(self): pass 合体Django # 之前有提过，tornado的db非常的简单，只有一个基于mysql的基础封装，而这个封装甚至连事务都没有。所以，如果我们采用tornado的db能做的事情就是写sql语句。\n对于小型的系统还好，对于一些中/中大/大型业务系统，sql写起来是比较费事费时的，成本很高，尤其是以后的维护成本。\n所以，我们需要引入一个第3方的ORM。在Python，ORM最著名的莫过于 sqlalchemy 和 sqlobject了。\n那我们在tornado中就用它们？答案是否定的。原因是：我们期望能够有一个类似DJango的Admin管理界面。\n好吧，程序员总是很懒惰的，哪怕一个字母都不愿意多敲。程序员总是很贪心的，哪怕能多一片叶子，也要仅仅的攥着手中。\n现在的实际情况就来了，我们能不能利用DJango提供的ORM和Admin，为Tornado使用呢 ？\n经过一天的研究，答案是肯定的。下面，我们就来具体的讲讲。\n生成Django项目\ndjango-admin.py startproject Tornadjango 创建一个app 我习惯只有一个app，且命名为app\ncd Tornadjango python manage.py startapp app 修改app目录下的文件名 这个也是我习惯了的命名规则, 创建controllers.py, 删除views.py，在工程目录下面创建application.py。此时，目录结构应该如下：\n修改 url.py # #coding: utf-8 from django.conf.urls.defaults import patterns, include from django.contrib import admin import django import os admin.autodiscover() MEDIA_ROOT = os.path.join(os.path.dirname(django.__file__), \u0026#39;contrib\u0026#39;, \u0026#39;admin\u0026#39;, \u0026#39;media\u0026#39;) urlpatterns = patterns(\u0026#39;\u0026#39;, (r\u0026#39;^admin/media/(?P\u0026lt;path\u0026gt;.*)$\u0026#39;, \u0026#39;django.views.static.serve\u0026#39;,{\u0026#39;document_root\u0026#39;: MEDIA_ROOT, \u0026#39;show_indexes\u0026#39;: False}), (r\u0026#39;^admin/\u0026#39;, include(admin.site.urls)), ) 修改settings.py # # Django settings for Tornadjango project. import os DEBUG = True TEMPLATE_DEBUG = DEBUG PROJECT_PATH = os.path.join(os.path.dirname(__file__)) ADMINS = ( # (\u0026#39;Your Name\u0026#39;, \u0026#39;your_email@example.com\u0026#39;), ) MANAGERS = ADMINS DATABASES = { \u0026#39;default\u0026#39;: { \u0026#39;ENGINE\u0026#39;: \u0026#39;django.db.backends.sqlite3\u0026#39;, # Add \u0026#39;postgresql_psycopg2\u0026#39;, \u0026#39;postgresql\u0026#39;, \u0026#39;mysql\u0026#39;, \u0026#39;sqlite3\u0026#39; or \u0026#39;oracle\u0026#39;. \u0026#39;NAME\u0026#39;: \u0026#39;tornadjango\u0026#39;, # Or path to database file if using sqlite3. \u0026#39;USER\u0026#39;: \u0026#39;\u0026#39;, # Not used with sqlite3. \u0026#39;PASSWORD\u0026#39;: \u0026#39;\u0026#39;, # Not used with sqlite3. \u0026#39;HOST\u0026#39;: \u0026#39;\u0026#39;, # Set to empty string for localhost. Not used with sqlite3. \u0026#39;PORT\u0026#39;: \u0026#39;\u0026#39;, # Set to empty string for default. Not used with sqlite3. } } # Local time zone for this installation. Choices can be found here: # http://en.wikipedia.org/wiki/List_of_tz_zones_by_name # although not all choices may be available on all operating systems. # On Unix systems, a value of None will cause Django to use the same # timezone as the operating system. # If running in a Windows environment this must be set to the same as your # system time zone. TIME_ZONE = \u0026#39;Asia/Shanghai\u0026#39; # Language code for this installation. All choices can be found here: # http://www.i18nguy.com/unicode/language-identifiers.html LANGUAGE_CODE = \u0026#39;zh-cn\u0026#39; SITE_ID = 1 # If you set this to False, Django will make some optimizations so as not # to load the internationalization machinery. USE_I18N = True # If you set this to False, Django will not format dates, numbers and # calendars according to the current locale USE_L10N = True # Absolute filesystem path to the directory that will hold user-uploaded files. # Example: \u0026#34;/home/media/media.lawrence.com/media/\u0026#34; MEDIA_ROOT = \u0026#39;\u0026#39; # URL that handles the media served from MEDIA_ROOT. Make sure to use a # trailing slash. # Examples: \u0026#34;http://media.lawrence.com/media/\u0026#34;, \u0026#34;http://example.com/media/\u0026#34; MEDIA_URL = \u0026#39;\u0026#39; # Absolute path to the directory static files should be collected to. # Don\u0026#39;t put anything in this directory yourself; store your static files # in apps\u0026#39; \u0026#34;static/\u0026#34; subdirectories and in STATICFILES_DIRS. # Example: \u0026#34;/home/media/media.lawrence.com/static/\u0026#34; STATIC_ROOT = \u0026#39;\u0026#39; # URL prefix for static files. # Example: \u0026#34;http://media.lawrence.com/static/\u0026#34; STATIC_URL = \u0026#39;/static/\u0026#39; # URL prefix for admin static files -- CSS, JavaScript and images. # Make sure to use a trailing slash. # Examples: \u0026#34;http://foo.com/static/admin/\u0026#34;, \u0026#34;/static/admin/\u0026#34;. ADMIN_MEDIA_PREFIX = \u0026#39;/admin/media/\u0026#39; # Additional locations of static files STATICFILES_DIRS = ( # Put strings here, like \u0026#34;/home/html/static\u0026#34; or \u0026#34;C:/www/django/static\u0026#34;. # Always use forward slashes, even on Windows. # Don\u0026#39;t forget to use absolute paths, not relative paths. ) # List of finder classes that know how to find static files in # various locations. STATICFILES_FINDERS = ( \u0026#39;django.contrib.staticfiles.finders.FileSystemFinder\u0026#39;, \u0026#39;django.contrib.staticfiles.finders.AppDirectoriesFinder\u0026#39;, # \u0026#39;django.contrib.staticfiles.finders.DefaultStorageFinder\u0026#39;, ) # Make this unique, and don\u0026#39;t share it with anybody. SECRET_KEY = \u0026#39;oa8xplu6_lhlegtxpc(f+!tc=2$%\u0026amp;oumz4zx2_1d*vio75z3c7\u0026#39; # List of callables that know how to import templates from various sources. TEMPLATE_LOADERS = ( \u0026#39;django.template.loaders.filesystem.Loader\u0026#39;, \u0026#39;django.template.loaders.app_directories.Loader\u0026#39;, # \u0026#39;django.template.loaders.eggs.Loader\u0026#39;, ) MIDDLEWARE_CLASSES = ( \u0026#39;django.middleware.common.CommonMiddleware\u0026#39;, \u0026#39;django.contrib.sessions.middleware.SessionMiddleware\u0026#39;, \u0026#39;django.middleware.csrf.CsrfViewMiddleware\u0026#39;, \u0026#39;django.contrib.auth.middleware.AuthenticationMiddleware\u0026#39;, \u0026#39;django.contrib.messages.middleware.MessageMiddleware\u0026#39;, ) ROOT_URLCONF = \u0026#39;urls\u0026#39; TEMPLATE_DIRS = ( # Put strings here, like \u0026#34;/home/html/django_templates\u0026#34; or \u0026#34;C:/www/django/templates\u0026#34;. # Always use forward slashes, even on Windows. # Don\u0026#39;t forget to use absolute paths, not relative paths. ) INSTALLED_APPS = ( \u0026#39;django.contrib.auth\u0026#39;, \u0026#39;django.contrib.contenttypes\u0026#39;, \u0026#39;django.contrib.sessions\u0026#39;, \u0026#39;django.contrib.sites\u0026#39;, \u0026#39;django.contrib.messages\u0026#39;, \u0026#39;django.contrib.staticfiles\u0026#39;, # Uncomment the next line to enable the admin: \u0026#39;django.contrib.admin\u0026#39;, # Uncomment the next line to enable admin documentation: \u0026#39;django.contrib.admindocs\u0026#39;, # customer app \u0026#39;app\u0026#39;, ) # A sample logging configuration. The only tangible logging # performed by this configuration is to send an email to # the site admins on every HTTP 500 error. # See http://docs.djangoproject.com/en/dev/topics/logging for # more details on how to customize your logging configuration. LOGGING = { \u0026#39;version\u0026#39;: 1, \u0026#39;disable_existing_loggers\u0026#39;: False, \u0026#39;handlers\u0026#39;: { \u0026#39;mail_admins\u0026#39;: { \u0026#39;level\u0026#39;: \u0026#39;ERROR\u0026#39;, \u0026#39;class\u0026#39;: \u0026#39;django.utils.log.AdminEmailHandler\u0026#39; } }, \u0026#39;loggers\u0026#39;: { \u0026#39;django.request\u0026#39;: { \u0026#39;handlers\u0026#39;: [\u0026#39;mail_admins\u0026#39;], \u0026#39;level\u0026#39;: \u0026#39;ERROR\u0026#39;, \u0026#39;propagate\u0026#39;: True, }, } } 修改app.controller.py # #coding: utf8 import tornado.web class HelloController(tornado.web.RequestHandler): def get(self): self.write(\u0026#39;Hello, world ! \\n\u0026#39;) 修改application.py # #coding: utf-8 import os os.environ[\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;] = \u0026#39;settings\u0026#39; import settings import app.urls from django.core.handlers.wsgi import WSGIHandler from tornado import options, wsgi import tornado.httpserver options.define(\u0026#39;admin_port\u0026#39;, default=9900, type=int, help=\u0026#39;Run admin platform on the given port\u0026#39;) options.define(\u0026#39;app_port\u0026#39;, default=9901, type=int, help=\u0026#39;Run app platform on the given port\u0026#39;) tornado_env = dict( # template_path = os.path.join(os.path.dirname(__file__), \u0026#39;templates\u0026#39;), # static_path = os.path.join(os.path.dirname(__file__), \u0026#39;static\u0026#39;), xsrf_cookies = False, cookie_secret = \u0026#34;11oETzKXQAGaYdkL5gEmGeJJFuYh7EQnp2XdTP1o/Vo=\u0026#34;, autoescape = None, debug = settings.DEBUG, login_url = \u0026#39;/\u0026#39;, ) if __name__ == \u0026#34;__main__\u0026#34;: options.parse_command_line() address, admin_port, app_port = \u0026#39;0.0.0.0\u0026#39;, options.options.admin_port, options.options.app_port def admin_listen(): wsgi_app = wsgi.WSGIContainer(WSGIHandler()) tornado_app = tornado.web.Application([ (\u0026#39;/admin/(.*)\u0026#39;, tornado.web.FallbackHandler, dict(fallback=wsgi_app)), ]) tornado.httpserver.HTTPServer(tornado_app).listen(admin_port) print \u0026#39;run admin platform on (%s:%s)\u0026#39; % (address, admin_port) def app_listen(): tornado_app = tornado.web.Application(app.urls.urls) tornado_app.listen(app_port) print \u0026#39;run app platform on (%s:%s)\u0026#39; % (address, app_port) app_listen() admin_listen() tornado.ioloop.IOLoop.instance().start() 创建db # python manager.py syncdb 启动 # python application.py 浏览器访问 # http://localhost:9901/ # tornado app http://localhost:9900/admin/ # django admin 这样整个步骤就完成了。\n加载Django环境 # django很优秀的，只需要有一个settings.py就把django需要的环境都包含了。所以，在application.py的上面要写上：\nimport os os.environ[\u0026#39;DJANGO_SETTINGS_MODULE\u0026#39;] = \u0026#39;settings\u0026#39; 启动django服务 # django是http基于wsgi的，所以如果你要用django的admin，就必须启动wsgi。所以，在application.py里面有这样的代码：\ndef admin_listen(): wsgi_app = wsgi.WSGIContainer(WSGIHandler()) tornado_app = tornado.web.Application([ (\u0026#39;/admin/(.*)\u0026#39;, tornado.web.FallbackHandler, dict(fallback=wsgi_app)), ]) tornado.httpserver.HTTPServer(tornado_app).listen(admin_port) print \u0026#39;run admin platform on (%s:%s)\u0026#39; % (address, admin_port) 要修改工程的urls.py # 对于纯粹的django环境，django的admin对应的url可以自动的找到。但是由于我们是通过tornado的IOLoop代理过去的，就需要自己手动配置。所以，在urls.py里面有这样的代码：\nadmin.autodiscover() MEDIA_ROOT = os.path.join(os.path.dirname(django.__file__), \u0026#39;contrib\u0026#39;, \u0026#39;admin\u0026#39;, \u0026#39;media\u0026#39;) urlpatterns = patterns(\u0026#39;\u0026#39;, (r\u0026#39;^admin/media/(?P\u0026lt;path\u0026gt;.*)$\u0026#39;, \u0026#39;django.views.static.serve\u0026#39;,{\u0026#39;document_root\u0026#39;: MEDIA_ROOT, \u0026#39;show_indexes\u0026#39;: False}), (r\u0026#39;^admin/\u0026#39;, include(admin.site.urls)), ) 要修改settings.py里面的ADMIN_MEDIA_PREFIX # ADMIN_MEDIA_PREFIX 需要配置成为urls.py里面的urlpatterns对应的地址，否则会找不到静态资源\n使用Django的orm # 怎么使用django的orm。下面来说一说。\norm本身 # 直接使用django的orm，不管是django的admin还是tornado都是一样的。\n事务 # 直接看 Django 1.3 的事务相关的文档\n对于commit_on_success的方式 # 一定要注意一下：要自动提交，需要django的middleware。但是django的middelware又只有在django的http环境中才生效，那么对于tornado的http环境，如何生效呢？\n大家都知道django的middelware是在进入request之后，和response之前。所以，我们完全可以考虑直接把middelware的方法拿来用。下面是django的traction middelware的源代码。\ndjango.middleware.transaction.py\nclass TransactionMiddleware(object): \u0026#34;\u0026#34;\u0026#34; Transaction middleware. If this is enabled, each view function will be run with commit_on_response activated - that way a save() doesn\u0026#39;t do a direct commit, the commit is done when a successful response is created. If an exception happens, the database is rolled back. \u0026#34;\u0026#34;\u0026#34; def process_request(self, request): \u0026#34;\u0026#34;\u0026#34;Enters transaction management\u0026#34;\u0026#34;\u0026#34; transaction.enter_transaction_management() transaction.managed(True) def process_exception(self, request, exception): \u0026#34;\u0026#34;\u0026#34;Rolls back the database and leaves transaction management\u0026#34;\u0026#34;\u0026#34; if transaction.is_dirty(): transaction.rollback() transaction.leave_transaction_management() def process_response(self, request, response): \u0026#34;\u0026#34;\u0026#34;Commits and leaves transaction management.\u0026#34;\u0026#34;\u0026#34; if transaction.is_managed(): if transaction.is_dirty(): transaction.commit() transaction.leave_transaction_management() return response 所以，我们完全可以写这样一个BaseController，用来解决这个问题\nbase_controller.py\nclass BaseController(tornado.web.RequestHandler): def initialize(self, application, request, **kwargs): self.has_except = False def prepare(self): \u0026#34;\u0026#34;\u0026#34;Enters transaction management\u0026#34;\u0026#34;\u0026#34; transaction.enter_transaction_management() transaction.managed(True) def get_error_html(self, status_code, **kwargs): try: self.has_except = True if transaction.is_dirty(): transaction.rollback() transaction.leave_transaction_management() except: pass finally: super(BaseController, self).get_error_html(status_code, **kwargs) def finish(self, chunk=None): try: return super(BaseController, self).finish(chunk=chunk) finally: if not self.has_except and transaction.is_managed(): if transaction.is_dirty(): transaction.commit() transaction.leave_transaction_management() django.db.reset_queries() django.db.close_connection() 这样就达到了自动提交或者回滚transaction的目的。\n异步调用 # Tornado是一个异步框架，在单独的实例跑的时候，要注意。对于一些响应很长的操作，需要进行异步处理。\n比方说，有一个第3方的api调用，一般都修改为异步处理。这样能保证你的服务正常被响应，而不会出现阻塞。\nclass Download(BaseController): @tornado.web.asynchronous def get(self): def _(response): self.finish(response.body) url = self.get_argument(\u0026#39;download_url\u0026#39;, \u0026#39;\u0026#39;, True) httpclient.AsyncHTTPClient().fetch(url, _) 上面是这种写法比较麻烦，后来在tornado中加入了一个新的写方，叫做gen，看起来好像写同步代码一样。\nclass Download(BaseController): @tornado.web.asynchronous @gen.engine def get(self): url = self.get_argument(\u0026#39;download_url\u0026#39;, \u0026#39;\u0026#39;, True) response = yield gen.Task(client.fetch, url) self.finish(response.body) 注意 @tornado.web.asynchronous 要在 @gen.engine 之前。 是不是简洁了很多？但原理是什么？\n基础知识 # yield和generator # 对于python中的yield, 大家应该都知道。\n# -*- coding:utf-8 -*- def foo(n): for i in range(n): yield i for x in foo(2): print x 上面的代码输出的就是1，2。注意上面的代码，可以看到foo(1)其实返回的就是一个generator。 可以理解为一旦遇到yield的语句，就会返回一个generator。看看官方的解释：\nAny function containing a yield keyword is a generator function;\n从上面的基本代码来看，我们可以简单的理解为：遇到yield i, 就返回i，并且产生函数的临时中断，控制权交给外面的代码。等外面的代码消耗了这个返回值后，控制权在交回给函数，从之前的临时中断处再接着执行。\n当然，上述的理解并不完全正确。我们再来看看下面的代码。\n# -*- coding:utf-8 -*- def foo(n): for i in range(n): yield i g = foo(2) # 1 print g.next() # 2 print g.next() # 3 print g.next() # 4 上面的代码输出的是：\n0 1 Traceback (most recent call last): File \u0026#34;/Users/ryan/Workspace/myself/Tornadjango/app/tmp.py\u0026#34;, line 10, in \u0026lt;module\u0026gt; print g.next() StopIteration 现在明白了么？因为foo方法里面有yield，所以调用它总是会返回一个generator。所以\n1 得到一个generator，且在1的时候，foo函数不会有任何的执行。在解释器分析代码的时候，发现foo里面有yield，就已经把它当成一个generator了。\n2 得到generator的第一个值 0\n3 得到generator的第二个值 1\n4 由于generator已经完毕，所以，抛出StopIteration异常\n再来看下面的代码：\n# -*- coding:utf-8 -*- def foo(n): for i in range(n): v = yield i print \u0026#39;v_%s = %s\u0026#39; % (i, v) # 5 g = foo(2) # 1 print g.next() # 2 print g.next() # 3 print g.next() # 4 这个时候，结果是：\n0 v_0 = None 1 v_1 = None Traceback (most recent call last): File \u0026#34;/Users/ryan/Workspace/myself/Tornadjango/app/tmp.py\u0026#34;, line 11, in \u0026lt;module\u0026gt; print g.next() StopIteration 发现了么？ v的值是None哦。如果你是一个初学者，你肯定会认为 v 的值应该等于i。但是其实不是的。那么v为什么等于None呢 ？\n再看下面的代码：\n# -*- coding:utf-8 -*- def foo(n): for i in range(n): v = yield i print \u0026#39;v_%s = %s\u0026#39; % (i, v) g = foo(2) print g.next() print g.send(\u0026#39;a\u0026#39;) 结果如下：\n0 v_0 = a 1 可以看出。g.send(\u0026lsquo;a\u0026rsquo;)的时候，把\u0026rsquo;a\u0026rsquo;的值付给了v。\n那我们这样写呢？\n# -*- coding:utf-8 -*- def foo(n): for i in range(n): v = yield i print \u0026#39;v_%s = %s\u0026#39; % (i, v) g = foo(2) print g.send(\u0026#39;a\u0026#39;) 出现了如下的错误：\nTraceback (most recent call last): File \u0026#34;/Users/ryan/Workspace/myself/Tornadjango/app/tmp.py\u0026#34;, line 9, in \u0026lt;module\u0026gt; print g.send(\u0026#39;a\u0026#39;) TypeError: can\u0026#39;t send non-None value to a just-started generator 所以得出如下的结论：\ngenerator.next() 等价于 generator.send(None)\n对于一个generator，一定要先调用一个next，或者send(None)。才能再调用send(value)\n调用send(value)的时候，会把value的值赋给里面的接收者，且是上一次next的中断位置\n前面，我们说过tornado的web异步调用。下面我们来分析一下。\n先看下面的代码。\n# -*- coding:utf-8 -*- from tornado import ioloop, httpclient def deal(response): print \u0026#39;response.length =\u0026#39;, len(response.body) ioloop.IOLoop.instance().stop() def download(url): http_client = httpclient.AsyncHTTPClient() http_client.fetch(url, deal) download(\u0026#34;http://www.baidu.com/\u0026#34;) ioloop.IOLoop.instance().start() 结果如下：\nresponse.length = 10233 很明显的可以看出。http_client的fetch只是一个异步调用。需要传递一个deal方法，作为callback来去处理fetch后的response。\n如果我们用tornado的gen.engine方式可以这样写：\nfrom tornado import ioloop, httpclient, gen from tornado.gen import Task @gen.engine def download(url): http_client = httpclient.AsyncHTTPClient() response = yield Task(http_client.fetch, url) print \u0026#39;response.length =\u0026#39;, len(response.body) ioloop.IOLoop.instance().stop() download(\u0026#34;http://www.baidu.com/\u0026#34;) ioloop.IOLoop.instance().start() 这样就好像你在写同步代码一样。而不需要想之前那样处理回调了。如果要你实现一个gen.engine 和 Task 你会怎么实现呢？根据我们之前谈的 yield 和 generator，我们可以这样写代码：\n# -*- coding:utf-8 -*- from tornado import ioloop, httpclient import functools class MyTask(object): def __init__(self, func, *args, **kwargs): self.func = func self.args = args self.kwargs = kwargs def callback(self, response): try: self.gen.send(response) except StopIteration: pass def run(self, gen): self.gen = gen partail_func = functools.partial(self.func, *self.args, **self.kwargs) partail_func(callback = self.callback) def myengine(func): def _(*args, **kwargs): task_generator = func(*args, **kwargs) task = task_generator.next() task.run(task_generator) return _ @myengine def download(url): http_client = httpclient.AsyncHTTPClient() response = yield MyTask(http_client.fetch, url) print \u0026#39;response.length =\u0026#39;, len(response.body) ioloop.IOLoop.instance().stop() download(\u0026#34;http://www.baidu.com/\u0026#34;) ioloop.IOLoop.instance().start() 这个时候，结果是： ```python response.length = 10233 这样，属于我们自己的engine和task就出来了。\n"},{"id":16,"href":"/posts/a-user-guild-to-using-webpy/","title":"webpy教程","section":"Blog","content":"来 搜狐后，这里做的系统几乎都是 webpy + twsited 写的。所以，有必要好好学习一下这两个东西了。从今天开始介绍webpy。\nServer # 安装\nsudo pip install web.py 第一个demo\n#coding: utf-8 import web urls = ( \u0026#39;/\u0026#39;, \u0026#39;Index\u0026#39; ) class Index: def GET(self): return \u0026#39;Hello, world ! GET \\n\u0026#39; def POST(self): return \u0026#39;Hello, world ! POST \\n\u0026#39; def start(): app = web.application(urls, globals()) app.run() if __name__ == \u0026#39;__main__\u0026#39;: start() 启动\npython webpy_test.py 0.0.0.0:4321 GET 测试\n\u0026gt;\u0026gt;\u0026gt; curl http://localhost:4321 \u0026gt;\u0026gt;\u0026gt; Hello, world ! GET POST 测试\n\u0026gt;\u0026gt;\u0026gt; curl http://localhost:4321 -d\u0026#39;t=1\u0026#39; \u0026gt;\u0026gt;\u0026gt; Hello, world ! POST 总结\nurl 简单的就是字符串，和django很类似 对于Controller而言，get请求执行GET方法，post请求执行POST方法，估计PUT和DELETE等也是一样的 Template # 公司直接用的jinja。jinja和django template的太相似了。说说如果在webpy中使用jinja。\nwebpy_jinja.py\n#coding: utf-8 import web from web.contrib.template import render_jinja urls = ( \u0026#39;/\u0026#39;, \u0026#39;hello\u0026#39; ) app = web.application(urls, globals()) render = render_jinja( \u0026#39;templates\u0026#39;, # 模板位置. encoding = \u0026#39;utf-8\u0026#39;, # 编码. ) class Hello: def GET(self): return render.hello(value=\u0026#39;hello, World! GET\u0026#39;) def POST(self): return web.seeother(\u0026#39;/\u0026#39;) if __name__ == \u0026#34;__main__\u0026#34;: app.run() hello.html\n{{value}} 跳转\nHello 的 GET 请求就是直接的服务器渲染页面，发送给客户端(一般是browser) Hello 的 POST 就是服务器端返回给客户端http code，然后客户端直接进行跳转，再次跳转到Hello的GET上 数据库操作 # 得到连接\ndb = web.database(dbn=\u0026#39;postgres\u0026#39;, db=\u0026#39;mydata\u0026#39;, user=\u0026#39;dbuser\u0026#39;, pw=\u0026#39;\u0026#39;) 简单查询\ndb.select( \u0026#39;table_name\u0026#39;, # 表名 vars = {\u0026#39;name\u0026#39;=\u0026#39;py\u0026#39;}, # 用来填充查询条件, 这个例子中对应的就是where的$name where = \u0026#39;username=$name\u0026#39;, # 查询条件 what = \u0026#39;id, username\u0026#39;, # 表示你要查询的field是哪些，默认为*。这个例子中表示查询id和username字段 order = \u0026#39;age DESC\u0026#39;, # 排序方式，表示按照年龄的倒排 group = \u0026#39;gender\u0026#39;, # 表示按照gender分组 limit = 10, # 查询10条 offset = 10, # 表示从第10条开始 _test = True/False # 日志打印出查询语句，True表示打印，False表示不打印。一般debug环境设置为True ) 高级查询\ndb.query(\u0026#34;SELECT COUNT(*) AS total_users FROM users\u0026#34;) # 有sql注入，可以修改为下面的 db.query(\u0026#34;SELECT * FROM user WHERE user.id = %s\u0026#34; % 10) # 没有sql注入 db.query(\u0026#34;SELECT * FROM user WHERE user.id = $id\u0026#34;, vars = {\u0026#39;id\u0026#39;: 10 }) 更新\n# 把id=10的记录的username修改为pengyi db.update(\u0026#39;table_name\u0026#39;, where=\u0026#34;id = 10\u0026#34;, username = \u0026#34;pengyi\u0026#34;) 插入\ndb.insert(\u0026#39;table_name\u0026#39;, username=\u0026#34;Poy\u0026#34;) # 插入一条记录，设置username=Poy 删除\ndb.delete(\u0026#39;table_name\u0026#39;, where=\u0026#34;id = 10\u0026#34;) # 删除id=10的记录 事务\nwith db.transaction(): db.insert(\u0026#39;table_name\u0026#39;, name=\u0026#39;py\u0026#39;) db.insert(\u0026#39;table_name\u0026#39;, name=\u0026#39;pengyi\u0026#39;) 部署就不用说太多。直接fastcgi\ncgi配置 # 安装flug\nsudo pip install flup webpy启动代码中写\ndef run_cgi(func, addr): return flups.WSGIServer(func, multiplexed=False, bindAddress=addr).run() def start_fcgi(): app = web.application(urls, globals()) web.wsgi.runwsgi = lambda func, addr = None: flups.WSGIServer(func, multiplexed=False, bindAddress=addr).run() app.run() 性能测试 # webpy的性能真的是不敢恭维啊\n代码如下：\n#coding: utf-8 import web urls = ( \u0026#39;/\u0026#39;, \u0026#39;Index\u0026#39; ) class Index: def GET(self): return \u0026#39;Hello, world !\\n\u0026#39; def start(): app = web.application(urls, globals()) app.run() if __name__ == \u0026#39;__main__\u0026#39;: start() 利用apache 的ab进行压力测试，10并发1000次请求：\n\u0026gt;\u0026gt;\u0026gt; ab -c 10 -n 1000 http://192.168.95.222:4321/ \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; This is ApacheBench, Version 2.3 \u0026lt;$Revision: 655654 $\u0026gt; \u0026gt;\u0026gt;\u0026gt; Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/ \u0026gt;\u0026gt;\u0026gt; Licensed to The Apache Software Foundation, http://www.apache.org/ \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Benchmarking 192.168.95.222 (be patient) \u0026gt;\u0026gt;\u0026gt; Completed 100 requests \u0026gt;\u0026gt;\u0026gt; Completed 200 requests \u0026gt;\u0026gt;\u0026gt; Completed 300 requests \u0026gt;\u0026gt;\u0026gt; Completed 400 requests \u0026gt;\u0026gt;\u0026gt; Completed 500 requests \u0026gt;\u0026gt;\u0026gt; Completed 600 requests \u0026gt;\u0026gt;\u0026gt; Completed 700 requests \u0026gt;\u0026gt;\u0026gt; Completed 800 requests \u0026gt;\u0026gt;\u0026gt; Completed 900 requests \u0026gt;\u0026gt;\u0026gt; Completed 1000 requests \u0026gt;\u0026gt;\u0026gt; Finished 1000 requests \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Server Software: CherryPy/3.1.2 \u0026gt;\u0026gt;\u0026gt; Server Hostname: 192.168.95.222 \u0026gt;\u0026gt;\u0026gt; Server Port: 4321 \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Document Path: / \u0026gt;\u0026gt;\u0026gt; Document Length: 16 bytes \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Concurrency Level: 10 \u0026gt;\u0026gt;\u0026gt; Time taken for tests: 6.269 seconds \u0026gt;\u0026gt;\u0026gt; Complete requests: 1000 \u0026gt;\u0026gt;\u0026gt; Failed requests: 0 \u0026gt;\u0026gt;\u0026gt; Write errors: 0 \u0026gt;\u0026gt;\u0026gt; Total transferred: 108000 bytes \u0026gt;\u0026gt;\u0026gt; HTML transferred: 16000 bytes \u0026gt;\u0026gt;\u0026gt; Requests per second: 159.51 [#/sec] (mean) \u0026gt;\u0026gt;\u0026gt; Time per request: 62.691 [ms] (mean) \u0026gt;\u0026gt;\u0026gt; Time per request: 6.269 [ms] (mean, across all concurrent requests) \u0026gt;\u0026gt;\u0026gt; Transfer rate: 16.82 [Kbytes/sec] received \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Connection Times (ms) \u0026gt;\u0026gt;\u0026gt; min mean[+/-sd] median max \u0026gt;\u0026gt;\u0026gt; Connect: 1 1 0.3 1 5 \u0026gt;\u0026gt;\u0026gt; Processing: 29 61 14.7 61 373 \u0026gt;\u0026gt;\u0026gt; Waiting: 29 61 14.7 61 372 \u0026gt;\u0026gt;\u0026gt; Total: 30 62 14.7 62 374 \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Percentage of the requests served within a certain time (ms) \u0026gt;\u0026gt;\u0026gt; 50% 62 \u0026gt;\u0026gt;\u0026gt; 66% 64 \u0026gt;\u0026gt;\u0026gt; 75% 65 \u0026gt;\u0026gt;\u0026gt; 80% 66 \u0026gt;\u0026gt;\u0026gt; 90% 68 \u0026gt;\u0026gt;\u0026gt; 95% 70 \u0026gt;\u0026gt;\u0026gt; 98% 71 \u0026gt;\u0026gt;\u0026gt; 99% 73 \u0026gt;\u0026gt;\u0026gt; 100% 374 (longest request) 平均每秒只能在160s，太低了。\n再来看 100并发，2000请求\n\u0026gt;\u0026gt;\u0026gt; ab -c 100 -n 2000 http://192.168.95.222:4321/ \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; This is ApacheBench, Version 2.3 \u0026lt;$Revision: 655654 $\u0026gt; \u0026gt;\u0026gt;\u0026gt; Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/ \u0026gt;\u0026gt;\u0026gt; Licensed to The Apache Software Foundation, http://www.apache.org/ \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Benchmarking 192.168.95.222 (be patient) \u0026gt;\u0026gt;\u0026gt; Completed 200 requests \u0026gt;\u0026gt;\u0026gt; Completed 400 requests \u0026gt;\u0026gt;\u0026gt; Completed 600 requests \u0026gt;\u0026gt;\u0026gt; Completed 800 requests \u0026gt;\u0026gt;\u0026gt; Completed 1000 requests \u0026gt;\u0026gt;\u0026gt; Completed 1200 requests \u0026gt;\u0026gt;\u0026gt; Completed 1400 requests \u0026gt;\u0026gt;\u0026gt; Completed 1600 requests \u0026gt;\u0026gt;\u0026gt; Completed 1800 requests \u0026gt;\u0026gt;\u0026gt; Completed 2000 requests \u0026gt;\u0026gt;\u0026gt; Finished 2000 requests \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Server Software: CherryPy/3.1.2 \u0026gt;\u0026gt;\u0026gt; Server Hostname: 192.168.95.222 \u0026gt;\u0026gt;\u0026gt; Server Port: 4321 \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Document Path: / \u0026gt;\u0026gt;\u0026gt; Document Length: 20 bytes \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Concurrency Level: 100 \u0026gt;\u0026gt;\u0026gt; Time taken for tests: 15.158 seconds \u0026gt;\u0026gt;\u0026gt; Complete requests: 2000 \u0026gt;\u0026gt;\u0026gt; Failed requests: 0 \u0026gt;\u0026gt;\u0026gt; Write errors: 0 \u0026gt;\u0026gt;\u0026gt; Total transferred: 224000 bytes \u0026gt;\u0026gt;\u0026gt; HTML transferred: 40000 bytes \u0026gt;\u0026gt;\u0026gt; Requests per second: 131.94 [#/sec] (mean) \u0026gt;\u0026gt;\u0026gt; Time per request: 757.902 [ms] (mean) \u0026gt;\u0026gt;\u0026gt; Time per request: 7.579 [ms] (mean, across all concurrent requests) \u0026gt;\u0026gt;\u0026gt; Transfer rate: 14.43 [Kbytes/sec] received \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Connection Times (ms) \u0026gt;\u0026gt;\u0026gt; min mean[+/-sd] median max \u0026gt;\u0026gt;\u0026gt; Connect: 1 37 203.5 1 1207 \u0026gt;\u0026gt;\u0026gt; Processing: 58 707 915.3 640 6597 \u0026gt;\u0026gt;\u0026gt; Waiting: 57 707 915.3 639 6596 \u0026gt;\u0026gt;\u0026gt; Total: 61 744 1076.6 641 7802 \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; Percentage of the requests served within a certain time (ms) \u0026gt;\u0026gt;\u0026gt; 50% 641 \u0026gt;\u0026gt;\u0026gt; 66% 647 \u0026gt;\u0026gt;\u0026gt; 75% 650 \u0026gt;\u0026gt;\u0026gt; 80% 652 \u0026gt;\u0026gt;\u0026gt; 90% 667 \u0026gt;\u0026gt;\u0026gt; 95% 2641 \u0026gt;\u0026gt;\u0026gt; 98% 7173 \u0026gt;\u0026gt;\u0026gt; 99% 7674 \u0026gt;\u0026gt;\u0026gt; 100% 7802 (longest request) 每秒：131个请求，响应时间是：757ms左右。无法忍受了。\n"},{"id":17,"href":"/posts/join-SOHU/","title":"来了搜狐","section":"Blog","content":" Sohu # 来到了搜狐邮件中心。目前感觉不错。熟悉的人（有以前的同事），融洽的氛围，喜欢的工作环境。唯一了缺点是，可能是大公司的原因，或者可能是部门有10年的历史的原因。\n目前的代码很混乱。质量达不到迅奇那样。不过也好，这样就能通过重构，重写，快速的进入核心业务，毕竟，对于邮件这块，我还是空白。\ndiss last company # 这是一家国内做sns game的公司。在北京，主要针对日本市场，主流开发语言是Python。公司名就不说了,大家自己去猜吧。\n几个槽点：\n公司在试用期除了工资，上缴个人所得税外，没有任何的保险和公积金。 公司号称每天有餐补，其实就是加班的人可以免费吃一顿晚餐，而且必须在20:00后才能有吃 公司的项目就是一个接一个，全部都是小作坊式的，一个项目完成就进入另外一个项目，完成的项目就去sns website上进行试水，如果成功了，那就成功了，否则就宣布项目死亡 技术人员全部都是几个项目并行，上下文切换太严重 项目管理混乱，一个萝卜一个坑。进度由上面定，技术没有话语权 内部代码混乱，所有的人写东西都只能在原来的代码上加功能，绝对不敢修改或者删除。因为完全没有测试 发布测试更加可怕，还需要去日本的sns website上，不懂日文很悲剧 我的工作习惯是早上来了后先收邮件，看半小时新闻，早上来得早。中午是午休一个小时。领导坐我旁边，结果找我谈话几次。每次都是说：\u0026ldquo;我一扭头就看到你在看网页，或者你在睡觉\u0026rdquo;。你妹啊，工作的时候你怎么没有扭头啊 "},{"id":18,"href":"/posts/parse-html-with-python/","title":"网页解析","section":"Blog","content":"对于crawler, parse html 是一个必不可少的工作。现阶段有很多的开源库，python中也有自己的标准库。都是为了方便的解析html的。但是，由于我们的需求可能会变得很奇怪，比方说：对于script的东西也许也要解析。对于comment的东西可能也要分析。或者，还有其它的需求。为此，我重新造个轮子。\n核心要求：\nhtml 由 标签，内容组成 标签由标签名，attr=value 的属性对组成 标签可以是自关闭的，也可以显示关闭的，有些标签只有1个。有些是1对 对于 也可以当成是特殊的标签 同理， 也是特殊的标签 对于文本，其实也是一个特殊的标签，可以隐式的认为name=\u0026rsquo;\u0026rsquo;, attr='' 所以 需要有： 解析标签的工具 遍历网页，找出标签的东西 找出标签，并且解析后，存放解析后的数据的东西 接下来，讲讲如何进行网页里面标签块的解析。例如，我们要解析下面的内容：\n\u0026lt;a href=\u0026#39;#\u0026#39; class=\u0026#34;anavy\u0026#34;\u0026gt; 其实就是要解析出里面的href和class分别是什么。不过，要注意下面的几点：\n可以检查标签是否可见，这个有利于以后的html分析，从而知道这个内容是否要显示出来 支持不规范的标签，比方说只有开，没有闭；少一个空格 等等 直接上代码： html_util.py\n#coding=utf-8 class AttributeUtil(object): @classmethod def get_attribute(cls, html_string, attribute_name): if html_string is None: return None attribute_name = attribute_name.lower() p = cls.__find_attribute_name(html_string, attribute_name) if p == -1: return None p = cls.__find_char_pos(html_string, p + len(attribute_name)) if p == -1: return \u0026#39;\u0026#39; c = html_string[p] if c != \u0026#39;=\u0026#39;: return \u0026#39;\u0026#39; p = cls.__find_char_pos(html_string, p + 1) if p == -1: return \u0026#39;\u0026#39; c = html_string[p] if c == \u0026#34;\u0026#39;\u0026#34; or c == \u0026#39;\u0026#34;\u0026#39;: p1 = html_string.find(c, p + 1) if p1 == -1: return \u0026#39;\u0026#39; return cls.__clear_return(html_string[p + 1:p1]) p1 = cls.__find_blank_pos(html_string, p + 1) if p1 == -1: return html_string[p:].strip() return cls.__clear_return(html_string[p:p1].strip()) @classmethod def __clear_return(cls, str): if str is None: return None return str.replace(\u0026#39;\\n\u0026#39;, \u0026#39;\u0026#39;).replace(\u0026#39;\\r\u0026#39;, \u0026#39;\u0026#39;) @classmethod def __find_blank_pos(cls, html_string, p): for i in range(p, len(html_string)): c = html_string[i] if c.isspace() or c == \u0026#39;/\u0026#39; and i == len(html_string) - 2 or c == \u0026#39;\u0026gt;\u0026#39; and i == len(html_string) - 1: return i return -1 @classmethod def __find_char_pos(cls, html_string, p): if p \u0026lt; 0: return -1 for i in range(p, len(html_string)): if not html_string[i].isspace(): return i return -1 @classmethod def __find_attribute_name(cls, html_string, attribute_name): p = 0 tag_string_low = html_string.lower() attribute_name_length = len(attribute_name) while True: p = tag_string_low.find(attribute_name, p) if p == -1: break if p \u0026gt; 0: c = html_string[p - 1] if c.isspace() or c == \u0026#39;\u0026#34;\u0026#39; or c == \u0026#34;\u0026#39;\u0026#34;: if p + attribute_name_length == len(html_string): return p c = html_string[p + attribute_name_length] if c.isspace() or c == \u0026#39;=\u0026#39;: return p p = p + attribute_name_length if p == 0: c = html_string[p + attribute_name_length] if c.isspace() or c == \u0026#39;=\u0026#39;: return p p += attribute_name_length return -1 @classmethod def get_value_in_url(url, key): if url is None: return None p = url.find(\u0026#39;?\u0026#39;) if p == -1: return None lower_key = key.lower() params = url[p + 1:].split(\u0026#39;\u0026amp;\u0026#39;) for param in params: k, v = param.split(\u0026#39;=\u0026#39;) if k.lower() == lower_key: return v return None @classmethod def style_visibility(cls, value): \u0026#34;\u0026#34;\u0026#34; 查看是否可见， @return: 如果可见返回True,否则返回False \u0026#34;\u0026#34;\u0026#34; style = cls.get_attribute(value, \u0026#39;style\u0026#39;) if style is None: return True style = style.lower() p = style.find(\u0026#39;visibility\u0026#39;); if p == -1: return True p1 = style.find(\u0026#39;:\u0026#39;, p) if p1 == -1: return True p2 = style.find(\u0026#39;;\u0026#39;, p1) v = style[p1 + 1:] if p2 == -1 else style[p1 + 1:p2] if v == None: return True v = v.strip() if v == \u0026#39;hidden\u0026#39; or v == \u0026#39;false\u0026#39;: return False return True 测试代码如下： test_html_util.py\n#coding=utf-8 import unittest from html_util import AttributeUtil class AttributeAnalyzerTest(unittest.TestCase): def test_style_visibility(self): tag_string = \u0026#34;\u0026lt;DIV ID=\\\u0026#34;investInfo\\\u0026#34; STYLE=\\\u0026#34;position:absolute; width:106px; z-index:7; visibility: hiden\\\u0026#34; onMouseOver=\\\u0026#34;MM_showHideLayers(\u0026#39;newsCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;dataCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;viewGovernment\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;chengxinCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;workHall\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;superviseAppeal\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;participateGovern\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;investInfo\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;show\u0026#39;,\u0026#39;serviceGuide\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;)\\\u0026#34; onMouseOut=\\\u0026#34;MM_showHideLayers(\u0026#39;newsCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;dataCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;viewGovernment\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;chengxinCenter\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;workHall\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;superviseAppeal\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;participateGovern\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;investInfo\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;,\u0026#39;serviceGuide\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;hide\u0026#39;)\\\u0026#34;\u0026gt;\u0026#34; visibility = AttributeUtil.style_visibility(tag_string) self.assertTrue(visibility) def test_get_simple_attribute(self): tag_string = \u0026#34;window.location.href=\u0026#39;bbsShowTopic.aspx?BoardID=148\u0026amp;Page=182\u0026#39;\u0026#34; value = AttributeUtil.get_attribute(tag_string, \u0026#34;window.location.href\u0026#34;) self.assertEquals(value, \u0026#39;bbsShowTopic.aspx?BoardID=148\u0026amp;Page=182\u0026#39;) def test_get_none_attribute(self): \u0026#34;\u0026#34;\u0026#34; There is an error. why the result value became #\u0026#34;? the last version is none \u0026#34;\u0026#34;\u0026#34; value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;a href=#\\\u0026#34; class=\\\u0026#34;anavy\\\u0026#34;\u0026gt;\u0026#34;, \u0026#34;href\u0026#34;) self.assertEquals(value, \u0026#39;#\u0026#34;\u0026#39;) def test_get_attribute_from_no_standrand_format_html(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;sdgsadg witht=\\\u0026#34;123\\\u0026#34;src=ddsg\u0026#34;, \u0026#34;src\u0026#34;) self.assertEquals(value, \u0026#39;ddsg\u0026#39;) def test_get_empty_attribute_from_no_standrand_format_html(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;sdgsadg src=\u0026#39;\u0026#34;, \u0026#34;src\u0026#34;) self.assertEquals(\u0026#39;\u0026#39;, value) def test_get_upper_attribute(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;sdgsadg src=\u0026#39;SD\u0026#39;\u0026#34;, \u0026#34;src\u0026#34;) self.assertEquals(\u0026#39;SD\u0026#39;, value) def test_get_no_standrand_attribute(self): html_string = \u0026#34;\u0026lt;A class=blue href = \\\u0026#34;http://shanghai.sohu.com/\\\u0026#34; target=_blank\u0026gt;\u0026#34; value = AttributeUtil.get_attribute(html_string, \u0026#34;href\u0026#34;) self.assertEquals(value, \u0026#39;http://shanghai.sohu.com/\u0026#39;) def test_get_attribute_with_upper_attribute_name(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;sdgsadg src=\u0026#39;SD\u0026#39; \u0026lt;aa\u0026gt;\u0026#34;, \u0026#34;SRC\u0026#34;) self.assertEquals(value, \u0026#39;SD\u0026#39;) def test_get_none_attribute_2(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;script\u0026gt;window.location=\u0026#39;http://www.shang360.com\u0026#39;\u0026lt;/script\u0026gt;\u0026#34;, \u0026#34;a\u0026#34;) self.assertTrue(value is None) def test_tuge_page_fetch(self): value = AttributeUtil.get_attribute(\u0026#34;\u0026lt;script\u0026gt;window.location=\u0026#39;http://www.shang360.com\u0026#39;\u0026lt;/script\u0026gt;\u0026#34;, \u0026#34;a\u0026#34;) self.assertTrue(value is None) def test_img_tag_and_no_standrand_attribute(self): tag_string = \u0026#39;\u0026#39;\u0026#39;\u0026lt;IMG alt=在纽约联合国总部安理会会议厅，中国常驻联合国代表李保东 （左二） 与其他一些国家与会代表交谈。 src=\u0026#34;http://photocdn.sohu.com/20100610/Img272688535.jpg\u0026#34; align=middle\u0026gt;\u0026#39;\u0026#39;\u0026#39; value = AttributeUtil.get_attribute(tag_string, \u0026#34;src\u0026#34;) self.assertEquals(\u0026#39;http://photocdn.sohu.com/20100610/Img272688535.jpg\u0026#39;, value) if __name__ == \u0026#39;__main__\u0026#39;: unittest.main() 讲明了如何解析标签。接下来，我们要做的事情就是解析html的内容了。参考以往解析xml，可以采用sax的方式。这样更加清晰，代码也更加好写。\n我们的设计是有一个 HtmlHandler 和 HtmlParser。有HtmlHandler里面保留html的可见内容。而HtmlParser进行真正的解析。\nhtml_handler.py\n#coding=utf-8 class HtmlHandler(object): \u0026#34;\u0026#34;\u0026#34; 拿到标签后，进行相应处理的handler \u0026#34;\u0026#34;\u0026#34; def __init__(self, handle_comment=False, handle_text=True): self.handle_comment = handle_comment self.handle_text = handle_text self.script = False self.style = False self.html_list = [] def start(self, name, value, position): lower_name = name.lower() if lower_name == \u0026#39;style\u0026#39;: self.style = True if lower_name == \u0026#39;script\u0026#39;: self.script = True def end(self, name, value, position): lower_name = name.lower() if lower_name == \u0026#39;style\u0026#39;: self.style = False if lower_name == \u0026#39;script\u0026#39;: self.script = False def comment(self, text, position): if not self.script and not self.style: self.html_list.append(text) def text(self, text): if not self.script and not self.style: self.html_list.append(text) def finish(self): pass def get_html_exclude_script(self, connect_mark): return connect_mark.join(self.html_list) def clear_memory(self): self.html_list = [] 上面代码中，我们通过 handler.text 方法来text的追加。最后调用get_html_exclude_script就可以拿到网页的内容了。接下来，看html_parser的逻辑。\nhtml_parser.py\n#coding=utf-8 import re class HtmlParser(object): def __init__(self, handler, mask=None): self.handler = handler self.mask = mask self.handle_text = handler.handle_text self.handle_comment = handler.handle_comment self.is_end = False self.tag_name = \u0026#39;\u0026#39; self.replace_dict = { \u0026#39;\u0026amp;nbsp;\u0026#39;: \u0026#39; \u0026#39;, \u0026#39;\u0026amp;amp;\u0026#39;: \u0026#39;\u0026amp;\u0026#39;, \u0026#39;\u0026amp;lt;\u0026#39;: \u0026#39;\u0026lt;\u0026#39;, \u0026#39;\u0026amp;gt;\u0026#39;: \u0026#39;\u0026gt;\u0026#39;, \u0026#39;\u0026amp;brvbar;\u0026#39;: \u0026#39;?\u0026#39;, \u0026#39;\u0026amp;quot;\u0026#39;: \u0026#39;\u0026#34;\u0026#39;, \u0026#39;\u0026amp;middot;\u0026#39;: \u0026#39;?\u0026#39;, \u0026#39;\u0026amp;bull;\u0026#39;: \u0026#39;?\u0026#39;, \u0026#39;\\n\u0026#39;: \u0026#39; \u0026#39;, \u0026#39;\\r\u0026#39;: \u0026#39; \u0026#39; } self.rx = re.compile(\u0026#39;|\u0026#39;.join(map(re.escape, self.replace_dict))) def parse(self, html): self.handler.clear_memory() self.parse_html(html) self.handler.finish() def parse_html(self, html): if html is None: return current_tag_begin, last_tag_end = 0, 0 while last_tag_end != -1 and last_tag_end \u0026lt; len(html): current_tag_begin = html.find(\u0026#39;\u0026lt;\u0026#39;, last_tag_end) if current_tag_begin == -1: break self.text(html, last_tag_end, current_tag_begin); p2 = self.comment(html, current_tag_begin) # 看是不是注释 if (p2 \u0026gt; 0): # 是注释 last_tag_end = p2 continue # 当\u0026#39;\u0026lt;\u0026#39;后面不是注释的时候，走下面的代码片断 last_tag_end = self.check_is_end(html, current_tag_begin + 1); if last_tag_end == -1: # 表示已经结束了。 break last_tag_end = self.get_tag_name_position(html, last_tag_end) if last_tag_end \u0026lt; 0: # 可能是无效字符，也可能是没有关键字 last_tag_end = current_tag_begin + 1 if self.handle_text: self.handler.text(\u0026#34;\u0026lt;\u0026#34;) continue last_tag_end = self.find_tag_end(html, last_tag_end) # 找到了会返回位置 if (last_tag_end != -1): # 找到 last_tag_end += 1 if not self.in_mask(): continue str = html[current_tag_begin:last_tag_end] if self.isEnd: self.handler.end(self.keyWord, str, current_tag_begin) else: self.handler.start(self.keyWord, str, current_tag_begin) if not (\u0026#39;a\u0026#39; == self.keyWord or \u0026#39;A\u0026#39; == self.tag_name) and self.is_self_closed(str): self.handler.end(self.keyWord, str, current_tag_begin) if last_tag_end == -1: last_tag_end = current_tag_begin self.text(html, last_tag_end, len(html)) def is_self_closed(self, html): for i in range(len(html) - 2, 0, -1): c = html[i] if not c.isspace(): if c == \u0026#39;/\u0026#39;: return True return False return False def text(self, html, last_tag_end, current_tag_begin): if not self.handle_text: return begin, end = -1, current_tag_begin for i in range(last_tag_end, current_tag_begin): c = html[i] # 找到第一个不是空格的位置 if not c.isspace(): begin = i break if begin == -1: return # 全部是空格，返回 if current_tag_begin \u0026gt; 0: for i in range(current_tag_begin - 1, begin, -1): if not html[i].isspace(): end = i + 1 break self.handler.text(self.html_decode(html[begin:end])) def html_decode(self, html): return self.rx.sub(lambda match: self.replace_dict[match.group(0)], html) def comment(self, html, p): if html.startswith(\u0026#34;\u0026lt;!--\u0026#34;, p): p1 = html.find(\u0026#34;--\u0026gt;\u0026#34;, p + 2) if p1 == -1: return -1 p1 += 3 if self.handle_comment: self.handler.comment(html[p:p1], p) return p1 return -1 def in_mask(self): if self.keyWord is None: return False if self.mask is None: return True for x in self.mask: if self.keyWord == x.upper() or self.tag_name == x.lower(): return True return False def find_tag_end(self, html, p): if p == -1 or p \u0026gt;= len(html): return -1 match = \u0026#39;\u0026gt;\u0026#39; lastIsEqual = False for i in range(p, len(html)): c = html[i] if c == match: if match == \u0026#39;\u0026gt;\u0026#39;: return i if match == \u0026#34;\u0026#39;\u0026#34; or match == \u0026#39;\u0026#34;\u0026#39;: match = \u0026#39;\u0026gt;\u0026#39; elif (c == \u0026#34;\u0026#39;\u0026#34; or c == \u0026#39;\u0026#34;\u0026#39;) and lastIsEqual: if match == \u0026#39;\u0026gt;\u0026#39;: match = c if c == \u0026#39;=\u0026#39;: lastIsEqual = True elif not c.isspace(): lastIsEqual = False return -1 def get_tag_name_position(self, html, p): self.keyWord = None if p == -1 or p \u0026gt;= len(html): return -1 for i in range(p, len(html)): c = html[i] if self.is_tag_stop_flag(c): self.keyWord = html[p:i].lower() return i; #返回关键词的节数位置 if not self.is_tag_name_char(c, i - p): return -2 # 如果是错误字符(非有效字符)。 return -1 # 表示没有关键字 def is_tag_name_char(self, ch, i): if (ch \u0026gt;= \u0026#39;a\u0026#39; and ch \u0026lt;= \u0026#39;z\u0026#39;) or (ch \u0026gt;= \u0026#39;A\u0026#39; and ch \u0026lt;= \u0026#39;Z\u0026#39;): return True if ch == \u0026#39;_\u0026#39; or ch == \u0026#39;:\u0026#39; or ch == \u0026#39;.\u0026#39;: return True if i \u0026gt; 0 and ch \u0026gt;= \u0026#39;0\u0026#39; and ch \u0026lt;= \u0026#39;9\u0026#39;: return True if i == 0 and ch == \u0026#39;!\u0026#39;: return True return False def check_is_end(self, html, p): if p \u0026gt;= len(html): return -1 for i in range(p, len(html)): c= html[i] if not c.isspace(): if (c == \u0026#39;/\u0026#39;): self.isEnd = True return i + 1 else: self.isEnd = False return i return -1 def is_tag_stop_flag(self, c): if c.isspace() or c == \u0026#39;\u0026gt;\u0026#39; or c == \u0026#39;/\u0026#39;: return True return False 接下来，是测试代码：\ntest_parser.py\n#coding=utf-8 import unittest from time import time from html_handler import HtmlHandler from html_parser import HtmlParser from html_util import AttributeUtil class TestHandler(HtmlHandler): def __init__(self, handle_comment=False, handle_text=True): super(TestHandler, self).__init__(handle_comment, handle_text) self.anum = 0 self.hrefs = [] def start(self, name, value, p): print \u0026#34;start:name=\u0026#34;, name, \u0026#34;;value=\u0026#34;, value, \u0026#34;;p=\u0026#34;, p if name.lower() == \u0026#39;a\u0026#39;: href = AttributeUtil.get_attribute(value, \u0026#39;href\u0026#39;) if href: self.hrefs.append(href.strip()) self.anum += 1 def end(self, name, value, p): print \u0026#34;end:name=\u0026#34;, name, \u0026#34;;value=\u0026#34;, value, \u0026#34;;p=\u0026#34;, p def text(self, text): print \u0026#34;text:\u0026#34;, text def comment(self, c, p): print \u0026#34;comment:\u0026#34;, c def finish(self): print \u0026#39;finish\u0026#39; def print_hrefs(self): for href in set(self.hrefs): # print href.replace(\u0026#34;javascript:changeCity(\u0026#39;\u0026#34;, \u0026#34;http://\u0026#34;).replace(\u0026#34;\u0026#39;,\u0026#39;\u0026#39;)\u0026#34;, \u0026#34;.city8.com\u0026#34;) print href class TestParser(unittest.TestCase): def setUp(self): self.html = \u0026#34;\u0026#34;\u0026#34;开始的文本内容\u0026lt;!--这是一个注释--\u0026gt; \u0026lt;div class=\u0026#34;colRight\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/07/5I40E0S200031H2L.html\u0026#34;\u0026gt;金越任虎年春晚总导演\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;list\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/05/5I3P9S7T00031H2L.html\u0026#34;\u0026gt;曾轶可《狮子座》涉嫌抄袭纯音乐《天际》\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/07/5I41RRCR00031H2L.html\u0026#34;\u0026gt;金马奖报名截止 郭富城刘德华黎明争夺影帝\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/04/5I3LJ0QE00031H2L.html\u0026#34;\u0026gt;赵雅芝准备接演古董收藏剧 支持阿娇演白娘子\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/03/5I3I031200032DGD.html\u0026#34;\u0026gt;李玟:与男友前妻成了姐妹 暂时没时间结婚\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/02/5I3E96TU00032KMI.html\u0026#34;\u0026gt;潘粤明:已经在蜜罐里 有信心与董洁白头偕老\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 中间的文本内容 \u0026lt;ul class=\u0026#34;line\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/05/5I3OPHO600031H2L.html\u0026#34;\u0026gt;《气喘吁吁》被批“难看” 葛优票房神话难续\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/02/5I3FAUL000032KMI.html\u0026#34;\u0026gt;关锦鹏：梁朝伟斗心强 张曼玉曾苦练走路\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/06/5I3V00IF00031H2L.html\u0026#34;\u0026gt;郁可唯成长经历揭秘 父亲:常骂得她痛哭流涕\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/04/5I3NPGGT00031H2L.html\u0026#34;\u0026gt;李英爱结婚后继续完成博士学业 9月初回韩国\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/09/0901/04/5I3NGA2F00031H2L.html\u0026#34;\u0026gt;导演张元直面吸毒事件:感谢全社会的关注\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt; script type=\u0026#34;text/javascript\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;more\u0026#34;\u0026gt; \u0026lt;span\u0026gt;\u0026lt;a href=\u0026#34;http://ent.163.com/\u0026#34;\u0026gt;更多娱乐新闻\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;span style=\u0026#34;background: transparent none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: rgb(31, 58, 135); float: left;\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://popme.163.com/link/005975_0804_8307.html\u0026#34;\u0026gt;[热点:痘印难消为痘抓狂]\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026#34;\u0026#34;\u0026#34; def test_is_closed(self): p = HtmlParser(HtmlHandler()) self.assertFalse(p.is_self_closed(\u0026#34;\u0026lt;sdgsdg\u0026gt;\u0026#34;)) self.assertTrue(p.is_self_closed(\u0026#34;\u0026lt;sdgsdg/\u0026gt;\u0026#34;)) self.assertTrue(p.is_self_closed(\u0026#34;\u0026lt;sdgsdg/ \u0026gt;\u0026#34;)) self.assertTrue(p.is_self_closed(\u0026#34;\u0026lt;sdgsdg / \u0026gt;\u0026#34;)) def test_html(self): handler = TestHandler(handle_comment=True, handle_text=True) parser = HtmlParser(handler) parser.parse(self.html) self.assertEquals(13, handler.anum) def test_remove_script(self): handler = HtmlHandler(handle_comment=True, handle_text=True) parser = HtmlParser(handler) parser.parse(self.html) connect_mark = \u0026#39;\u0026#39; html_removed = handler.get_html_exclude_script(connect_mark) self.assertEquals(html_removed, connect_mark.join([ \u0026#34;开始的文本内容\u0026lt;!--这是一个注释--\u0026gt;金越任虎年春晚总导演\u0026#34;, \u0026#34;曾轶可《狮子座》涉嫌抄袭纯音乐《天际》\u0026#34;, \u0026#34;金马奖报名截止 郭富城刘德华黎明争夺影帝\u0026#34;, \u0026#34;赵雅芝准备接演古董收藏剧 支持阿娇演白娘子\u0026#34;, \u0026#34;李玟:与男友前妻成了姐妹 暂时没时间结婚\u0026#34;, \u0026#34;潘粤明:已经在蜜罐里 有信心与董洁白头偕老\u0026#34;, \u0026#34;中间的文本内容\u0026#34;, \u0026#34;《气喘吁吁》被批“难看” 葛优票房神话难续\u0026#34;, \u0026#34;关锦鹏：梁朝伟斗心强 张曼玉曾苦练走路\u0026#34;, \u0026#34;郁可唯成长经历揭秘 父亲:常骂得她痛哭流涕\u0026#34;, \u0026#34;李英爱结婚后继续完成博士学业 9月初回韩国\u0026#34;, \u0026#34;导演张元直面吸毒事件:感谢全社会的关注\u0026#34;, \u0026#34;[热点:痘印难消为痘抓狂]\u0026#34; ])) def test_main(): import urllib2 from time import time urls = [ \u0026#39;http://wap.sohu.com/\u0026#39; # \u0026#39;http://bj.3g.cn/index.aspx?cin=-67\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;rd=02\u0026amp;sid=0\u0026#39;, # \u0026#39;http://blog.3g.cn/\u0026#39;, # \u0026#39;http://blog.3g.cn/commspec/0754/6years.aspx?cin=362312\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;sid=0\u0026#39;, # \u0026#39;http://bula.cn/HelpDetail.aspx?ID=7\u0026amp;helperID=8\u0026amp;sid=0\u0026#39;, # \u0026#39;http://caipiao.3g.cn/index.aspx?cin=-80\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;rd=20\u0026amp;sid=0\u0026#39;, # \u0026#39;http://digi.3g.cn/index.aspx?cin=121\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;rd=02\u0026amp;sid=0\u0026#39;, # \u0026#39;http://down2.uc.cn/?f=chenf@moabccom\u0026amp;title=moabc.com\u0026amp;url=http%3A%2F%2Fmoabc.com\u0026#39;, # \u0026#39;http://edu.3g.cn/index.aspx?ftp=0\u0026amp;k=2009%e9%ab%98%e8%80%83\u0026amp;nid=21336\u0026amp;sid=0\u0026#39;, # \u0026#39;http://news.3g.cn/shehui.aspx?cin=366164\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;sid=0\u0026#39;, # \u0026#39;http://now.3g.cn/foryou/index.aspx?cin=-33\u0026amp;gaid=Tm9raWE2MjMw\u0026amp;rd=02\u0026amp;sid=0\u0026#39;, # \u0026#39;http://qinggan.loveshafa.com/index.aspx?cin=70\u0026amp;sid=0\u0026#39;, # \u0026#39;http://rdt.yicha.cn/1360\u0026#39;, # \u0026#39;http://sj.lexun.com/man/manlist.aspx?cd=39903\u0026amp;cr=cb04baa21198295\u0026amp;forumId=8982\u0026amp;lxt=0\u0026amp;topic_page=1\u0026#39;, # \u0026#39;http://u.yicha.cn/union/search.jsp?pageBegin=1\u0026amp;site=2145944277\u0026amp;version=1\u0026#39;, # \u0026#39;http://wap.3g.net.cn/index.aspx\u0026#39;, # \u0026#39;http://wapblog.people.com.cn/?chid=\u0026amp;fromid=201\u0026amp;iv=sz\u0026amp;sid=0\u0026amp;v=l\u0026amp;wv=1.2\u0026#39;, # \u0026#39;http://wfne.3g.qq.com/g/s?\u0026amp;aid=tmark\u0026amp;sid=0\u0026amp;tips=1\u0026#39;, # \u0026#39;http://y.easou.com/thread/barViewThread.e?barId=10007\u0026amp;esid=0\u0026amp;fr=52.1.8\u0026#39; ] htmls = [] for url in urls: try: html = urllib2.urlopen(url, None, 3).read() html = html.strip() if html: htmls.append(html) else: print url except: print url print \u0026#39;begin\u0026#39; handler = HtmlHandler(handle_comment=False, handle_text=True) parser = HtmlParser(handler) btime = time() for i in range(1): for html in htmls: parser.parse(html) text = handler.get_html_exclude_script() handler.html_list = [] print text print time() - btime def test_main_2(): from time import time html = \u0026#34;\u0026#34;\u0026#34; \u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD XHTML 1.0 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\u0026#34;\u0026gt; \u0026lt;html xmlns=\u0026#34;http://www.w3.org/1999/xhtml\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=gb2312\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;三亚酒店预订列表 三亚宾馆查询订房\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;Description\u0026#34; content=\u0026#34;三亚酒店列表宾馆查询订房\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;Keywords\u0026#34; content=\u0026#34;三亚酒店预订宾馆查询订房\u0026#34; /\u0026gt; \u0026lt;link href=\u0026#34;/hotel/css/hotellist.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; /\u0026gt; \u0026lt;script src=\u0026#34;http://pic.yoyv.com/scripts/gwindow.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;http://pic.yoyv.com/scripts/stuHover.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;http://pic.yoyv.com/top/scripts/newtop.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;http://pic.yoyv.com/scripts/ajax.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026#34;http://pic.yoyv.com/css/gwindow.css\u0026#34; type=text/css rel=stylesheet\u0026gt;\u0026lt;/link\u0026gt; \u0026lt;link href=\u0026#34;http://pic.yoyv.com/css/newtop.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; /\u0026gt; \u0026lt;script language=\u0026#34;javascript\u0026#34; src=\u0026#34;/hotel/scripts/search.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script language=\u0026#34;javascript\u0026#34; src=\u0026#34;/hotel/scripts/mycal.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body style=\u0026#34;margin-top:0px;\u0026#34; onload=\u0026#34;init(\u0026#39;2201\u0026#39;,0,0,0,0)\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;position:absolute; width:980px!important;width:983px; border:0px; top:0px; z-index:1000;\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;loginBox\u0026#34; name=\u0026#34;loginBox\u0026#34; class=\u0026#34;signin\u0026#34; style=\u0026#34;position: absolute; display:none; float:right; right:0px; width:10px; height:10px; overflow: hidden;\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;margin-top:10px;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;signintop\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;text-align:right; margin-top:-10px; margin-right:-10px; z-index:500; position:relative;\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/close_LoginBox.gif\u0026#34; alt=\u0026#34;关闭\u0026#34; style=\u0026#34;cursor:pointer;\u0026#34; onclick=\u0026#34;closeloginBox()\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;loginword\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/usericon.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34;\u0026gt;游鱼会员登陆\u0026lt;/div\u0026gt; \u0026lt;table width=\u0026#34;260\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; style=\u0026#34;margin-top:0px; margin-left:20px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;62\u0026#34; height=\u0026#34;18\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;198\u0026#34; id=\u0026#34;errorLog\u0026#34; align=\u0026#34;left\u0026#34; valign=\u0026#34;bottom\u0026#34; class=\u0026#34;errorInfo\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;62\u0026#34; height=\u0026#34;34\u0026#34; align=\u0026#34;right\u0026#34; class=\u0026#34;loginword2\u0026#34;\u0026gt;用户名：\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;198\u0026#34;\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;username_login\u0026#34; style=\u0026#34;width:180px; height:17px; background-color:#FFFFFF;\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword2\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;39\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;登录密码：\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;input type=\u0026#34;password\u0026#34; id=\u0026#34;password_login\u0026#34; style=\u0026#34;width:100px; height:17px; background-color:#FFFFFF;\u0026#34; onkeyup=\u0026#34;Javascript:if (event.which==13||event.keyCode==13){logOn();}\u0026#34;/\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/land/getpwd.htm\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;忘记了密码?\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword3\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;30\u0026#34; colspan=\u0026#34;2\u0026#34;\u0026gt;还不是会员？\u0026lt;a href=\u0026#34;/tour/guideintr.html\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;了解一下游鱼\u0026lt;/a\u0026gt;或者\u0026lt;a href=\u0026#34;/reg/reg.asp\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;立即注册\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword3\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;12\u0026#34; colspan=\u0026#34;2\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;loginline1\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;loginline2\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword3\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;34\u0026#34; colspan=\u0026#34;2\u0026#34;\u0026gt;\u0026lt;input name=\u0026#34;remember\u0026#34; type=\u0026#34;checkbox\u0026#34; hidefocus=\u0026#34;true\u0026#34; value=\u0026#34;\u0026#34; checked=\u0026#34;checked\u0026#34;/\u0026gt;在这台电脑上记住我的密码。\u0026amp;nbsp;\u0026lt;img src=\u0026#34;/images/sign_in_form_hover.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34; onclick=\u0026#34;logOn()\u0026#34; alt=\u0026#34;登录\u0026#34; style=\u0026#34;cursor:pointer;\u0026#34;/\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;signinbottom\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;progressBar\u0026#34; name=\u0026#34;progressBar\u0026#34; class=\u0026#34;signin\u0026#34; style=\u0026#34;position: absolute; display:none; float:right; right:0px; width:310px; height:280px; overflow: hidden;\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;margin-top:10px;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;signin\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;signintop\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;text-align:right; margin-top:-10px; margin-right:-10px; z-index:500; position:relative;\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/close_LoginBox.gif\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;loginword\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/usericon.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34;\u0026gt;游鱼会员登陆\u0026lt;/div\u0026gt; \u0026lt;table width=\u0026#34;260\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; style=\u0026#34;margin-top:10px; margin-left:20px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;198\u0026#34; height=\u0026#34;22\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword2\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;40\u0026#34; align=\u0026#34;center\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/progressBar_Log.gif\u0026#34; width=\u0026#34;40\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr class=\u0026#34;loginword3\u0026#34;\u0026gt; \u0026lt;td height=\u0026#34;38\u0026#34; align=\u0026#34;center\u0026#34; valign=\u0026#34;bottom\u0026#34; id=\u0026#34;progressInfo\u0026#34;\u0026gt;正在登录……\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;signinbottom\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;navarea\u0026#34; style=\u0026#34;background-color:#FFFFFF\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;loginarea\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;logoarea\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/\u0026#34; title=\u0026#34;游鱼——发现旅游！分享旅游！\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/images/logo4.gif\u0026#34; border=\u0026#34;0\u0026#34; alt=\u0026#34;游鱼——发现旅游！分享旅游！\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;pagetopright\u0026#34;\u0026gt; \u0026lt;div style=\u0026#34;display:none; color:#999999;\u0026#34; id=\u0026#34;loginsuc\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;login\u0026#34; style=\u0026#34;color:#999999;\u0026#34;\u0026gt;第一次来游鱼？\u0026lt;img src=\u0026#34;/images/toprightarrow.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34; /\u0026gt;\u0026lt;a href=\u0026#34;/tour/guideintr.html\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;了解游鱼\u0026lt;/a\u0026gt;\u0026amp;nbsp;|\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/reg/reg.asp\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;注册\u0026lt;/a\u0026gt;\u0026amp;nbsp;|\u0026amp;nbsp;\u0026lt;a href=\u0026#34;javascript:showLoginBox1()\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;登陆\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;topsearch\u0026#34;\u0026gt; \u0026lt;!-- Google CSE Search Box Begins --\u0026gt; \u0026lt;form id=\u0026#34;searchbox_017628897638471485970:hceobi7ukkq\u0026#34; action=\u0026#34;http://www.yoyv.com/search/result.html\u0026#34; target=\u0026#34;_blank\u0026#34; style=\u0026#34;margin:0px\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; value=\u0026#34;017628897638471485970:hceobi7ukkq\u0026#34; name=\u0026#34;cx\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; value=\u0026#34;FORID:9\u0026#34; name=\u0026#34;cof\u0026#34; /\u0026gt; \u0026lt;input size=\u0026#34;25\u0026#34; name=\u0026#34;q\u0026#34; align=\u0026#34;absmiddle\u0026#34; class=\u0026#34;inputarea\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;Input\u0026#34; type=\u0026#34;image\u0026#34; src=\u0026#34;/images/yoyvsearch.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34;/\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;width:928px; text-align:left; clear:both;background-color:#FFFFFF\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;preload1\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026#34;preload2\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;ul id=\u0026#34;nav\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;首页\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/guide/\u0026#34; rel=\u0026#34;nofollow\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span class=\u0026#34;down\u0026#34;\u0026gt;旅游指南\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;ul class=\u0026#34;sub\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;b\u0026gt;目的地旅游指南\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/\u0026#34;\u0026gt;国内旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/asia.html\u0026#34;\u0026gt;亚洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/europe.html\u0026#34;\u0026gt;欧洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/africa.html\u0026#34;\u0026gt;非洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/namerica.html\u0026#34;\u0026gt;北美洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/samerica.html\u0026#34;\u0026gt;南美洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/continent/oceania.html\u0026#34;\u0026gt;大洋洲旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/top/traveltool.html\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span class=\u0026#34;down\u0026#34;\u0026gt;预订查询\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;ul class=\u0026#34;sub\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;b\u0026gt;旅游查询预订\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/dflight.asp\u0026#34;\u0026gt;国内航班查询\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/iflight.asp\u0026#34;\u0026gt;国际航班查询\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/hotel.asp\u0026#34;\u0026gt;国内酒店查询\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/hotelsearch.asp\u0026#34;\u0026gt;海外酒店查询\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;b\u0026gt;分类查询工具\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/map/satellite.asp\u0026#34;\u0026gt;地图搜索\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/sightseeing.asp\u0026#34; class=\u0026#34;fly\u0026#34;\u0026gt;景点搜索\u0026lt;/a\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/sightseeing.asp\u0026#34;\u0026gt;国内景点搜索\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/sightsearch.asp\u0026#34;\u0026gt;世界景点搜索\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/easytour/index.asp\u0026#34; class=\u0026#34;fly\u0026#34;\u0026gt;旅行交通查询\u0026lt;/a\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/easytour/index.asp\u0026#34;\u0026gt;行易通\u0026amp;nbsp;\u0026lt;img src=\u0026#34;/guide/myview/images/good.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/bus.asp\u0026#34;\u0026gt;国内260城市公交\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/metromap.asp\u0026#34;\u0026gt;地铁路线图(全球)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/train.asp\u0026#34;\u0026gt;国内火车查询\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/hostel.asp\u0026#34;\u0026gt;旅馆招待所查询\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/restaurant.asp\u0026#34; class=\u0026#34;fly\u0026#34;\u0026gt;餐饮娱乐购物\u0026lt;/a\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/restaurant.asp\u0026#34;\u0026gt;餐馆搜索(国内)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/restaurantsearch.asp\u0026#34;\u0026gt;餐馆搜索(海外)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/Entertainment.asp\u0026#34;\u0026gt;娱乐搜索(国内)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/entertainmentsearch.asp\u0026#34;\u0026gt;娱乐搜索(海外)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/shopping.asp\u0026#34;\u0026gt;购物搜索(国内)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/overseas/shoppingsearch.asp\u0026#34;\u0026gt;购物搜索(海外)\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/weather.asp\u0026#34;\u0026gt;各城市天气预报\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/tripplanner/\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;旅行计划\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34; style=\u0026#34;margin-top:8px;\u0026#34;\u0026gt;\u0026lt;font color=\u0026#34;#999999\u0026#34;\u0026gt;|\u0026lt;/font\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/space/blogindex.asp\u0026#34; rel=\u0026#34;nofollow\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span class=\u0026#34;down\u0026#34;\u0026gt;博客\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;ul class=\u0026#34;sub\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;b\u0026gt;博客游记分享\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/space/blogindex.asp\u0026#34;\u0026gt;博客首页\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/platter/b-list/1\u0026#34;\u0026gt;博客拼盘\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/moving/blogmoving.asp\u0026#34;\u0026gt;博客搬家\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/moving/synservice.asp\u0026#34;\u0026gt;博客同步\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/Album/Index.asp\u0026#34; rel=\u0026#34;nofollow\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span class=\u0026#34;down\u0026#34;\u0026gt;图片相册\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;ul class=\u0026#34;sub\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;b\u0026gt;相册与图片分享\u0026lt;/b\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/Album/Index.asp\u0026#34;\u0026gt;图片相册首页\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/platter/p-list/1\u0026#34;\u0026gt;图片拼盘\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/album/more_1/\u0026#34;\u0026gt;最新相册列表\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/photos/calendar.asp\u0026#34;\u0026gt;图片日历\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/phototype9/1.html\u0026#34;\u0026gt;旅游图片分类\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/space/pkzone.asp\u0026#34;\u0026gt;靓照对决\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/Map/\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;主题地图\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/group/\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;群组\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34; style=\u0026#34;margin-top:8px;\u0026#34;\u0026gt;\u0026lt;font color=\u0026#34;#bbbbbb\u0026#34;\u0026gt;|\u0026lt;/font\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/space/trailmap.asp\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;足迹\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/platter/\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;拼盘\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/quiz/travelquiz.asp\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;竞猜\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/vote/voteindex.asp\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;投票\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/ask/index.asp\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;问答\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/Deal/Index.asp\u0026#34; class=\u0026#34;top_link\u0026#34;\u0026gt;\u0026lt;span\u0026gt;交易\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;script language=\u0026#34;javascript\u0026#34;\u0026gt;login();\u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;nowposition\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;/traveltool/hotel.asp\u0026#34;\u0026gt;酒店预订\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;gt;\u0026amp;gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_1/\u0026#34;\u0026gt;三亚酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;leftbody\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;hotelcount\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;hotelsno\u0026#34;\u0026gt;134\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelsnointro\u0026#34;\u0026gt;间三亚的酒店宾馆\u0026lt;br /\u0026gt; 符合您的搜索要求\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelsnointro\u0026#34; style=\u0026#34;margin-top:30px; font-weight:bold;\u0026#34;\u0026gt;对搜索结果排序\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelsfliterarrow\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;fliterarea\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;flitername1\u0026#34;\u0026gt;酒店价格排序\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;flitervolum\u0026#34;\u0026gt; \u0026lt;select name=\u0026#34;orderByPrice2\u0026#34; class=\u0026#34;selectmenu1\u0026#34; onchange=\u0026#34;orderType(\u0026#39;price\u0026#39;)\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;请选择排序方式\u0026#34;\u0026gt;请选择排序方式\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;asc\u0026#34;\u0026gt;从低到高\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;flitername1\u0026#34;\u0026gt;酒店星级排序\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;flitervolum\u0026#34;\u0026gt; \u0026lt;select name=\u0026#34;orderByStar2\u0026#34; class=\u0026#34;selectmenu1\u0026#34; onchange=\u0026#34;orderType(\u0026#39;star\u0026#39;)\u0026#34;\u0026gt; \u0026lt;option value=\u0026#34;请选择排序方式\u0026#34;\u0026gt;请选择排序方式\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;asc\u0026#34;\u0026gt;从低到高\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;leftothersearch\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;searchvolum\u0026#34; onclick=\u0026#34;show2(this)\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;168\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;margin-top:12px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;153\u0026#34;\u0026gt;按商业区查看酒店\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;15\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/displayarrow.gif\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightlist\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%B4%F3%B6%AB%BA%A3_1/\u0026#34;\u0026gt;大东海\u0026lt;/a\u0026gt;(50 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C4%CF%C9%BD_1/\u0026#34;\u0026gt;南山\u0026lt;/a\u0026gt;(3 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C4%CF%CC%EF_1/\u0026#34;\u0026gt;南田\u0026lt;/a\u0026gt;(3 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C8%FD%D1%C7%CD%E5_1/\u0026#34;\u0026gt;三亚湾\u0026lt;/a\u0026gt;(65 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%CA%D0%C4%DA_1/\u0026#34;\u0026gt;市内\u0026lt;/a\u0026gt;(27 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%F2%DA%D6%A7%D6%DE_1/\u0026#34;\u0026gt;蜈支洲\u0026lt;/a\u0026gt;(1 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%CE%F7%B5%BA_1/\u0026#34;\u0026gt;西岛\u0026lt;/a\u0026gt;(1 )\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;(20 )\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;searchvolum\u0026#34; onclick=\u0026#34;show2(this)\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;168\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;margin-top:12px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;153\u0026#34;\u0026gt;按行政区查看酒店\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;15\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/hidearrow.gif\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightlist\u0026#34; style=\u0026#34;display:none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%B4%F3%B6%AB%BA%A3_1/\u0026#34;\u0026gt;大东海\u0026lt;/a\u0026gt;(14)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%BA%D3%B6%AB%C7%F8_1/\u0026#34;\u0026gt;河东区\u0026lt;/a\u0026gt;(4)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%C8%FD%D1%C7%CD%E5_1/\u0026#34;\u0026gt;三亚湾\u0026lt;/a\u0026gt;(25)\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;(17)\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;searchvolum\u0026#34; onclick=\u0026#34;show2(this)\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;168\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;margin-top:12px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;153\u0026#34;\u0026gt;按星级查看酒店\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;15\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/hidearrow.gif\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightlist\u0026#34; style=\u0026#34;display:none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/star/%C8%FD%D1%C7_5_1/\u0026#34;\u0026gt;三亚五星级酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/star/%C8%FD%D1%C7_4_1/\u0026#34;\u0026gt;三亚四星级酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/star/%C8%FD%D1%C7_3_1/\u0026#34;\u0026gt;三亚三星级酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/star/%C8%FD%D1%C7_2_1/\u0026#34;\u0026gt;三亚二星级酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;searchvolum\u0026#34; onclick=\u0026#34;show2(this)\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;168\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;margin-top:12px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;153\u0026#34;\u0026gt;热门城市酒店索引\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;15\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/hidearrow.gif\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightlist\u0026#34; style=\u0026#34;display:none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%B1%B1%BE%A9_1/\u0026#34;\u0026gt;北京酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C9%CF%BA%A3_1/\u0026#34;\u0026gt;上海酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%B9%E3%D6%DD_1/\u0026#34;\u0026gt;广州酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C9%EE%DB%DA_1/\u0026#34;\u0026gt;深圳酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%BA%BC%D6%DD_1/\u0026#34;\u0026gt;杭州酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CE%F7%B0%B2_1/\u0026#34;\u0026gt;西安酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CE%E4%BA%BA_1/\u0026#34;\u0026gt;武汉酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%B3%C9%B6%BC_1/\u0026#34;\u0026gt;成都酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C4%CF%BE%A9_1/\u0026#34;\u0026gt;南京酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_1/\u0026#34;\u0026gt;三亚酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C9%F2%D1%F4_1/\u0026#34;\u0026gt;沈阳酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CB%D5%D6%DD_1/\u0026#34;\u0026gt;苏州酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C7%E0%B5%BA_1/\u0026#34;\u0026gt;青岛酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CC%EC%BD%F2_1/\u0026#34;\u0026gt;天津酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CF%C3%C3%C5_1/\u0026#34;\u0026gt;厦门酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;searchvolum\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;168\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;margin-top:12px;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;153\u0026#34;\u0026gt;酒店订单查询\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;15\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightlist\u0026#34;\u0026gt;\u0026lt;form action=\u0026#34;/hotel/browseorder.asp\u0026#34; method=\u0026#34;post\u0026#34; style=\u0026#34;margin:0px;\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li style=\u0026#34;margin-left:0px; list-style:none;\u0026#34;\u0026gt;\u0026lt;font color=\u0026#34;#666666\u0026#34;\u0026gt;联系人姓名：\u0026lt;/font\u0026gt; \u0026lt;input name=\u0026#34;CName\u0026#34; type=\u0026#34;text\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026#34;margin-left:0px; list-style:none;\u0026#34;\u0026gt;\u0026lt;font color=\u0026#34;#666666\u0026#34;\u0026gt;手机号码：\u0026lt;/font\u0026gt; \u0026lt;input name=\u0026#34;Mobile\u0026#34; type=\u0026#34;text\u0026#34; /\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li style=\u0026#34;margin-top:10px; margin-bottom:10px;margin-left:0px; list-style:none;\u0026#34;\u0026gt;\u0026lt;input name=\u0026#34;\u0026#34; type=\u0026#34;image\u0026#34; src=\u0026#34;/hotel/images/checkorder.gif\u0026#34; /\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;rightbody\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;三亚酒店预订列表 三亚宾馆查询结果\u0026lt;/h1\u0026gt; \u0026lt;div class=\u0026#34;hotellistintro\u0026#34;\u0026gt;您搜索的是\u0026lt;font color=\u0026#34;#FF6600\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;2010-07-14\u0026lt;/strong\u0026gt;\u0026lt;/font\u0026gt;至\u0026lt;font color=\u0026#34;#FF6600\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;2010-07-16\u0026lt;/strong\u0026gt;\u0026lt;/font\u0026gt;三亚酒店价格。这些价格是每个酒店宾馆的最低房型价格，您可以点击每个酒店右侧的“房型价格”链接来浏览该酒店的所有房型。同时您也可以选择左侧的行政区或商业区来缩小您的搜索范围。\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellistintro\u0026#34; style=\u0026#34;margin-top:20px;\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;changdate\u0026#34;\u0026gt;变更日期重新查询：\u0026lt;/font\u0026gt;\u0026amp;nbsp;入住日期\u0026amp;nbsp;\u0026lt;input id=\u0026#34;InDate2\u0026#34; type=\u0026#34;text\u0026#34; class=\u0026#34;datefill\u0026#34; value=\u0026#34;2010-07-14\u0026#34; onClick=\u0026#34;event.cancelBubble=true;showCalendar(\u0026#39;InDate2\u0026#39;,false,\u0026#39;InDate2\u0026#39;)\u0026#34;/\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;离店日期\u0026amp;nbsp;\u0026lt;input id=\u0026#34;OutDate2\u0026#34; type=\u0026#34;text\u0026#34; class=\u0026#34;datefill\u0026#34; value=\u0026#34;2010-07-16\u0026#34; onClick=\u0026#34;event.cancelBubble=true;showCalendar(\u0026#39;OutDate2\u0026#39;,false,\u0026#39;OutDate2\u0026#39;)\u0026#34;/\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;javascript:changeDate()\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/searchbutton.gif\u0026#34; align=\u0026#34;absmiddle\u0026#34; border=\u0026#34;0\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;#moresearch\u0026#34;\u0026gt;更多查询选项\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/searchmap/%C8%FD%D1%C7.html\u0026#34; title=\u0026#34;在三亚地图上查询酒店\u0026#34;\u0026gt;使用地图查询\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;restpage\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;font class=\u0026#34;curpage\u0026#34;\u0026gt;1\u0026lt;/font\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_2/\u0026#34;\u0026gt;2\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_3/\u0026#34;\u0026gt;3\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_4/\u0026#34;\u0026gt;4\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_5/\u0026#34;\u0026gt;5\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_6/\u0026#34;\u0026gt;6\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_7/\u0026#34;\u0026gt;7\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_8/\u0026#34;\u0026gt;8\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_9/\u0026#34;\u0026gt;9\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_10/\u0026#34;\u0026gt;10\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;font color=\u0026#34;#666666\u0026#34; style=\u0026#34; font-weight:normal;\u0026#34;\u0026gt;共14页\u0026lt;/font\u0026gt;\u0026amp;nbsp;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/30/42201201_0_5_0_6.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;1.\u0026lt;a href=\u0026#34;/hotel/details/8330.htm\u0026#34;\u0026gt;三亚国光豪生度假酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C8%FD%D1%C7%CD%E5_1/\u0026#34;title=\u0026#34;位于三亚湾的酒店列表\u0026#34;\u0026gt;三亚湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市三亚湾路188号\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;2010/3/16-2010/5/3，酒店试行24小时入住制。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥780\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/8330.htm\u0026#34; title=\u0026#34;浏览三亚三亚国光豪生度假酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/8330.htm\u0026#34; title=\u0026#34;浏览三亚三亚国光豪生度假酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/8330.htm\u0026#34; title=\u0026#34;三亚三亚国光豪生度假酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/8330.htm\u0026#34; title=\u0026#34;浏览三亚三亚国光豪生度假酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/7/52201012_0_5_0_4.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;2.\u0026lt;a href=\u0026#34;/hotel/details/173.htm\u0026#34;\u0026gt;三亚天福源度假酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C8%FD%D1%C7%CD%E5_1/\u0026#34;title=\u0026#34;位于三亚湾的酒店列表\u0026#34;\u0026gt;三亚湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市三亚湾旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;酒店位于三亚湾海坡开发区，拥有目前三亚最大的温泉泳池，可近览海天一线的美景。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥348\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/173.htm\u0026#34; title=\u0026#34;浏览三亚三亚天福源度假酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/173.htm\u0026#34; title=\u0026#34;浏览三亚三亚天福源度假酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/173.htm\u0026#34; title=\u0026#34;三亚三亚天福源度假酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/173.htm\u0026#34; title=\u0026#34;浏览三亚三亚天福源度假酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/1/42201002_0_5_0_6.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;3.\u0026lt;a href=\u0026#34;/hotel/details/4583.htm\u0026#34;\u0026gt;三亚南中国大酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate2.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%B4%F3%B6%AB%BA%A3_1/\u0026#34;title=\u0026#34;位于大东海的酒店列表\u0026#34;\u0026gt;大东海\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市大东海旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;从酒店步行两分钟可达大东海嬉水乐园，曾多次接待国家领导及外国元首的豪华花园酒店。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥444\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/4583.htm\u0026#34; title=\u0026#34;浏览三亚三亚南中国大酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/4583.htm\u0026#34; title=\u0026#34;浏览三亚三亚南中国大酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/4583.htm\u0026#34; title=\u0026#34;三亚三亚南中国大酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/4583.htm\u0026#34; title=\u0026#34;浏览三亚三亚南中国大酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/2/52201004_0_5_0_3.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;4.\u0026lt;a href=\u0026#34;/hotel/details/184.htm\u0026#34;\u0026gt;三亚亚龙湾天鸿度假村\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34; title=\u0026#34;亚龙湾酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;，\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;title=\u0026#34;位于亚龙湾的酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市亚龙湾国家旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;具有热带休闲风格的别墅精品度假酒店，前瞰白沙碧海，背依湖泊青山，房间全部面海。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥738\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/184.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾天鸿度假村的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/184.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾天鸿度假村的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/184.htm\u0026#34; title=\u0026#34;三亚三亚亚龙湾天鸿度假村的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/184.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾天鸿度假村的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/11/52201018_0_2_0_6.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;5.\u0026lt;a href=\u0026#34;/hotel/details/176.htm\u0026#34;\u0026gt;三亚亚龙湾红树林度假酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34; title=\u0026#34;亚龙湾酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;，\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;title=\u0026#34;位于亚龙湾的酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市亚龙湾国家旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;酒店位于亚龙湾国家旅游度假区，是中国唯一具有巴厘岛热带风情的纯度假酒店。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥1240\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/176.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾红树林度假酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/176.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾红树林度假酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/176.htm\u0026#34; title=\u0026#34;三亚三亚亚龙湾红树林度假酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/176.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾红树林度假酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/11/52201017_0_5_0_4.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;6.\u0026lt;a href=\u0026#34;/hotel/details/175.htm\u0026#34;\u0026gt;三亚湾假日酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C8%FD%D1%C7%CD%E5_1/\u0026#34;title=\u0026#34;位于三亚湾的酒店列表\u0026#34;\u0026gt;三亚湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市三亚湾旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;位于海南岛海岸线最长的三亚湾海坡度假区的国际品牌酒店，与美丽的椰梦长廊相依偎。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥700\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/175.htm\u0026#34; title=\u0026#34;浏览三亚三亚湾假日酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/175.htm\u0026#34; title=\u0026#34;浏览三亚三亚湾假日酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/175.htm\u0026#34; title=\u0026#34;三亚三亚湾假日酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/175.htm\u0026#34; title=\u0026#34;浏览三亚三亚湾假日酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/ImgList/nopic.gif\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;7.\u0026lt;a href=\u0026#34;/hotel/details/11835.htm\u0026#34;\u0026gt;三亚大小洞天小月湾度假酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%C4%CF%C9%BD_1/\u0026#34;title=\u0026#34;位于南山的酒店列表\u0026#34;\u0026gt;南山\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：三亚市崖城大小洞天旅游区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;酒店位于国家5A级景区大小洞天内，面朝南海背靠南山，滨海原生态木屋别墅，一千多米原生态的海滩。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥598\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/11835.htm\u0026#34; title=\u0026#34;浏览三亚三亚大小洞天小月湾度假酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/11835.htm\u0026#34; title=\u0026#34;浏览三亚三亚大小洞天小月湾度假酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/11835.htm\u0026#34; title=\u0026#34;三亚三亚大小洞天小月湾度假酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/11835.htm\u0026#34; title=\u0026#34;浏览三亚三亚大小洞天小月湾度假酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/nolistpic.gif\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;8.\u0026lt;a href=\u0026#34;/hotel/details/13929.htm\u0026#34;\u0026gt;三亚半山半岛洲际度假酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%B4%F3%B6%AB%BA%A3_1/\u0026#34;title=\u0026#34;位于大东海的酒店列表\u0026#34;\u0026gt;大东海\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：中国海南省三亚市洲际路1号\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;半山半岛间悦享洲际天\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥1690\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/13929.htm\u0026#34; title=\u0026#34;浏览三亚三亚半山半岛洲际度假酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/13929.htm\u0026#34; title=\u0026#34;浏览三亚三亚半山半岛洲际度假酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/4/52201006_0_5_0_3.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;9.\u0026lt;a href=\u0026#34;/hotel/details/186.htm\u0026#34;\u0026gt;三亚亚龙湾环球城大酒店\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34; title=\u0026#34;亚龙湾酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;，\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;title=\u0026#34;位于亚龙湾的酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：海南省三亚市亚龙湾国家度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;酒店背靠青山、西枕绿湖、面朝大海，是一家拥有山、湖、海“三合一”客房风景的酒店。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥608\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/186.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾环球城大酒店的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/186.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾环球城大酒店的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/186.htm\u0026#34; title=\u0026#34;三亚三亚亚龙湾环球城大酒店的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/186.htm\u0026#34; title=\u0026#34;浏览三亚三亚亚龙湾环球城大酒店的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotellist\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;detailtop\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailmid\u0026#34;\u0026gt; \u0026lt;table width=\u0026#34;727\u0026#34; border=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td width=\u0026#34;145\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;http://static.elong.com/images/hotels/hotelimages/1/32201001_0_5_0_1.jpg\u0026#34; width=\u0026#34;130\u0026#34; border=\u0026#34;0\u0026#34; onError=javascript:{this.src=\u0026#39;http://www.yoyv.com/hotel/ImgList/nopic.gif\u0026#39;}\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;350\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelname\u0026#34;\u0026gt;10.\u0026lt;a href=\u0026#34;/hotel/details/3337.htm\u0026#34;\u0026gt;三亚凯莱仙人掌度假酒店（原三亚仙人掌度假酒店）\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;hotelcontent\u0026#34;\u0026gt;酒店星级：\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026lt;img src=\u0026#39;/hotel/images/rate.gif\u0026#39; align=\u0026#39;absmiddle\u0026#39; /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;所在区域：\u0026lt;a href=\u0026#34;/hotel/district/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34; title=\u0026#34;亚龙湾酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;，\u0026lt;a href=\u0026#34;/hotel/sowntown/%C8%FD%D1%C7_%D1%C7%C1%FA%CD%E5_1/\u0026#34;title=\u0026#34;位于亚龙湾的酒店列表\u0026#34;\u0026gt;亚龙湾\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; 酒店地址：三亚市亚龙湾国家旅游度假区\u0026lt;br /\u0026gt; \u0026lt;font style=\u0026#34;font-weight:bold\u0026#34;\u0026gt;位于亚龙湾的以印地安人和海南黎、苗族等土著文化为主题具有浓郁玛雅文化的度假酒店。\u0026lt;/font\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td width=\u0026#34;232\u0026#34; valign=\u0026#34;top\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;hotelprice\u0026#34;\u0026gt;\u0026lt;font class=\u0026#34;hotelprice2\u0026#34;\u0026gt;￥518\u0026lt;/font\u0026gt;起\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/room/3337.htm\u0026#34; title=\u0026#34;浏览三亚三亚凯莱仙人掌度假酒店（原三亚仙人掌度假酒店）的所有房型及价格\u0026#34;\u0026gt;房型价格\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/details/3337.htm\u0026#34; title=\u0026#34;浏览三亚三亚凯莱仙人掌度假酒店（原三亚仙人掌度假酒店）的详细介绍及酒店设施\u0026#34;\u0026gt;酒店设施\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;a href=\u0026#34;/hotel/traffic/3337.htm\u0026#34; title=\u0026#34;三亚三亚凯莱仙人掌度假酒店（原三亚仙人掌度假酒店）的交通、位置以及电子地图\u0026#34;\u0026gt;交通地图\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;\u0026lt;a href=\u0026#34;/hotel/pic/3337.htm\u0026#34; title=\u0026#34;浏览三亚三亚凯莱仙人掌度假酒店（原三亚仙人掌度假酒店）的所有图片\u0026#34;\u0026gt;酒店图片\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;detailbtm\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;restpage\u0026#34; style=\u0026#34;margin-top:15px;\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;font class=\u0026#34;curpage\u0026#34;\u0026gt;1\u0026lt;/font\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_2/\u0026#34;\u0026gt;2\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_3/\u0026#34;\u0026gt;3\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_4/\u0026#34;\u0026gt;4\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_5/\u0026#34;\u0026gt;5\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_6/\u0026#34;\u0026gt;6\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_7/\u0026#34;\u0026gt;7\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_8/\u0026#34;\u0026gt;8\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_9/\u0026#34;\u0026gt;9\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_10/\u0026#34;\u0026gt;10\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026lt;font color=\u0026#34;#666666\u0026#34; style=\u0026#34; font-weight:normal;\u0026#34;\u0026gt;共14页\u0026lt;/font\u0026gt;\u0026amp;nbsp;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;moreinfo\u0026#34;\u0026gt; \u0026lt;form name=\u0026#34;search1\u0026#34; action=\u0026#34;/hotel/search.asp\u0026#34; method=\u0026#34;post\u0026#34; style=\u0026#34;margin:0px 0px 0px 0px;\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;districtId\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;commercialId\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;city\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;三亚\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;page\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;1\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;orderByPrice\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;input name=\u0026#34;orderByStar\u0026#34; type=\u0026#34;hidden\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;moresearch\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;酒店高级查询：\u0026lt;a name=\u0026#34;moresearch\u0026#34; id=\u0026#34;moresearch\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt;\u0026amp;nbsp;选择城市\u0026amp;nbsp;\u0026lt;select name=\u0026#34;cityId\u0026#34; class=\u0026#34;selectmenu2\u0026#34;\u0026gt;\u0026lt;script language=\u0026#34;JavaScript\u0026#34; src=\u0026#34;/hotel/scripts/hotelcityS.js\u0026#34; type=\u0026#34;text/javascript\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026lt;/select\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;入住日期\u0026amp;nbsp;\u0026lt;input name=\u0026#34;InDate\u0026#34; type=\u0026#34;text\u0026#34; class=\u0026#34;datefill\u0026#34; value=\u0026#34;2010-07-14\u0026#34; onClick=\u0026#34;event.cancelBubble=true;showCalendar(\u0026#39;InDate\u0026#39;,false,\u0026#39;InDate\u0026#39;)\u0026#34;/\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;离店日期\u0026amp;nbsp;\u0026lt;input name=\u0026#34;OutDate\u0026#34; type=\u0026#34;text\u0026#34; class=\u0026#34;datefill\u0026#34; value=\u0026#34;2010-07-16\u0026#34; onClick=\u0026#34;event.cancelBubble=true;showCalendar(\u0026#39;OutDate\u0026#39;,false,\u0026#39;OutDate\u0026#39;)\u0026#34;/\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;moresearch\u0026#34; style=\u0026#34;padding-top:10px; padding-left:347px;\u0026#34;\u0026gt;酒店星级\u0026amp;nbsp;\u0026lt;select name=\u0026#34;star\u0026#34; class=\u0026#34;selectmenu2\u0026#34;\u0026gt;\u0026lt;option value=\u0026#34;1\u0026#34; selected\u0026gt;不限星级\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#34;2\u0026#34;\u0026gt;二星级\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#34;3\u0026#34;\u0026gt;三星级\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#34;4\u0026#34;\u0026gt;四星级\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#34;5\u0026#34;\u0026gt;五星级\u0026lt;/option\u0026gt;\u0026lt;/select\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;酒店价格\u0026amp;nbsp;\u0026lt;select name=\u0026#34;price\u0026#34; class=\u0026#34;selectmenu2\u0026#34; style=\u0026#34;width:104px;\u0026#34;\u0026gt;\u0026lt;option value=\u0026#39;-1\u0026#39; selected\u0026gt;不限\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;1201\u0026#39;\u0026gt;1200元以上\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;1200\u0026#39;\u0026gt;801--1200元\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;800\u0026#39;\u0026gt;501--800元\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;500\u0026#39;\u0026gt;401--500元\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;400\u0026#39;\u0026gt;301--400元\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;300\u0026#39;\u0026gt;201--300元\u0026lt;/option\u0026gt;\u0026lt;option value=\u0026#39;200\u0026#39;\u0026gt;200元以下\u0026lt;/option\u0026gt;\u0026lt;/select\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;酒店名称\u0026amp;nbsp;\u0026lt;input name=\u0026#34;hotelName\u0026#34; type=\u0026#34;text\u0026#34; class=\u0026#34;datefill\u0026#34; style=\u0026#34;background-image:none;\u0026#34;/\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;javascript:newSearch()\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/hotel/images/searchbtn.gif\u0026#34; border=\u0026#34;0\u0026#34; align=\u0026#34;absmiddle\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;moresearch\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;本地旅游资讯：\u0026lt;/strong\u0026gt;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/totimetable/309_1/\u0026#34;\u0026gt;三亚航班查询\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/guide/c/%C8%FD%D1%C7/\u0026#34;\u0026gt;三亚旅游指南\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/guide/OutLook/%C8%FD%D1%C7/\u0026#34;\u0026gt;三亚旅游景点\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/search/Bus/City/C8FDD1C7.htm\u0026#34;\u0026gt;三亚公交\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/search/train/station/C8FDD1C7.htm\u0026#34;\u0026gt;三亚火车\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/guide/Food/%C8%FD%D1%C7/\u0026#34;\u0026gt;三亚餐馆\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/city/trip/309_1/\u0026#34;\u0026gt;三亚旅行计划\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;yoyvbtm\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;btmbg\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;btmcontent\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;btmitem\u0026#34;\u0026gt;关于游鱼www.yoyv.com◎\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;youyuintro\u0026#34;\u0026gt;游鱼是一个旅游爱好者分享旅途快乐,交流旅行经验的旅游社区。\u0026lt;br /\u0026gt; 游鱼是一部涵盖目的地餐饮、住宿、交通、旅游景点、购物、娱乐等实用信息的旅行指南。\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;btmcontent2\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;btmitem\u0026#34;\u0026gt;热门旅游目的地\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;youyuintro\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%B1%B1%BE%A9/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;北京旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%C9%CF%BA%A3/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;上海旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%BA%BC%D6%DD/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;杭州旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%C4%CF%BE%A9/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;南京旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%B9%F0%C1%D6/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;桂林旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%CE%F7%B0%B2/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;西安旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%C8%FD%D1%C7/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;三亚旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/guide/c/%C0%F6%BD%AD/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;丽江旅游指南\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;btmcontent2\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;btmitem\u0026#34;\u0026gt;热门地区酒店预订\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;youyuintro\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%B1%B1%BE%A9_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;北京酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%B3%C9%B6%BC_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;成都酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C9%CF%BA%A3_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;上海酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%CE%E4%BA%BA_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;武汉酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%B9%E3%D6%DD_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;广州酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C4%CF%BE%A9_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;南京酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C9%EE%DB%DA_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;深圳酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C8%FD%D1%C7_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;三亚酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%BA%BC%D6%DD_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;杭州酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%CB%D5%D6%DD_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;苏州酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CE%F7%B0%B2_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;西安酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%C0%A5%C3%F7_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;昆明酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%C7%E0%B5%BA_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;青岛酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%B4%F3%C1%AC_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;大连酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/hotel/city/%CF%C3%C3%C5_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;厦门酒店\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/hotel/city/%D6%D8%C7%EC_1/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;重庆酒店\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;btmcontent2\u0026#34; \u0026gt; \u0026lt;div class=\u0026#34;btmitem\u0026#34;\u0026gt;热门旅游景点\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;youyuintro\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/11796\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;故宫\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/15549\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;西湖\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/16521\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;黄山\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/22128\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;华山\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/17772\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;泰山\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/15082\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;周庄\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/19604\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;阳朔\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/16284\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;乌镇\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/11865\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;天安门\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/12465\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;颐和园\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/15572\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;千岛湖\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/20162\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;九寨沟\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/17942\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;少林寺\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/16900\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;鼓浪屿\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/s/18950\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;凤凰古城\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026lt;a href=\u0026#34;/s/21556\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;布达拉宫\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;btmcontent2\u0026#34; style=\u0026#34; border:0px;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;btmitem\u0026#34;\u0026gt;关于游鱼\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;youyuintro\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/Info/help.html#d\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;关于游鱼\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/Info/help.html#l\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;联系我们\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/ad/index.html\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;产品服务\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/Info/SiteMap.htm\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;站内导航\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/group/yoyv/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;游鱼站务论坛\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;http://yoyvcom.yoyv.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;游鱼Blog\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/LeaveWord/index.asp\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;建议留言\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/Info/link2.asp\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;友情链接\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;yoyvcopyright\u0026#34;\u0026gt;Copright ◎2006-2010 YOYV.COM All Rights reserved \u0026lt;a href=\u0026#34;http://www.miibeian.gov.cn/\u0026#34; rel=\u0026#34;nofollow\u0026#34;\u0026gt;陕ICP备07000041号\u0026lt;/a\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div style=\u0026#34;display:none;\u0026#34;\u0026gt;\u0026lt;script language=\u0026#34;javascript\u0026#34; src=\u0026#34;http://count8.51yes.com/click.aspx?id=84597943\u0026amp;logo=12\u0026#34; charset=\u0026#34;gb2312\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026#34;\u0026#34;\u0026#34; handler = TestHandler(handle_comment=False, handle_text=False) parser = HtmlParser(handler) btime = time() for i in range(1): parser.parse(html) handler.print_hrefs() print time() - btime def test_main_3(): html = \u0026#39;\u0026#39;\u0026#39; \u0026lt;a href=\u0026#34;http://anshan.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾰﾰ￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://erds.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾶ￵ﾶ￻ﾶ￠ￋﾹ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jn.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾼￃￄￏ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nanjing.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￄￏﾾﾩ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://tj.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌ￬ﾽ￲\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yt.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￑ￌￌﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;B\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;F\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jl.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾼﾪ￁ￖ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nc.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￄￏﾲ�\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://tz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌﾨￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￑￯ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://bj.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾱﾱﾾﾩ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://fs.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾷ￰￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jx.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾼￎ￐ￋ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nn.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￄￏￄ￾\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://taiyuan.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌﾫￔﾭ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yc.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￒￋﾲ�\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://bt.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾰ￼ￍﾷ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://fz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾸﾣￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jh.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾽ￰ﾻﾪ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nt.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￄￏￍﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://taizhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌﾩￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yinchuan.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￒ￸ﾴﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://bd.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾱﾣﾶﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;G\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jc.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾽ￺ﾳￇ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nb.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￄ￾ﾲﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://ts.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌￆ￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yl.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￓ￱￁ￖ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://bh.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾱﾱﾺﾣ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://gz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾹ￣ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jy.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾽﾭￒ￵\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;Q\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://tc.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌﾫﾲￖ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://yk.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￓﾪ﾿ￚ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://baoji.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾱﾦﾼﾦ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://gy.soufun.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾹ￳￑￴\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://jm.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾽﾭￃￅ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://qd.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￇ￠ﾵﾺ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;W\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;Z\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;C\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://guilin.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾹ￰￁ￖ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;K\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://qhd.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￇ￘ﾻￊﾵﾺ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wuhan.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￤ﾺﾺ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zj.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￕ﾿ﾽﾭ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://cq.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖ￘ￇ￬\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://ganzhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾸￓￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://km.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￀ﾥￃ￷\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://qz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￈ﾪￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://weihai.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￍ￾ﾺﾣ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zhenjiang.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￕ￲ﾽﾭ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://cd.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾳ￉ﾶﾼ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;H\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://ks.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￀ﾥ￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;R\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wf.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎﾫﾷﾻ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖﾣￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://cz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾳﾣￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺﾼￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;L\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://rz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￈ￕￕￕ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎￂￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zs.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖ￐￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://changchun.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾳﾤﾴﾺ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hrb.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾹ￾ﾶ￻ﾱ￵\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://lz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￀ﾼￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;S\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wuxi.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￞ￎ�\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zhuzhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖ￪ￖ￞\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://cs.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾳﾤ￉ﾳ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hn.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺﾣￄￏ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://ls.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￀￶ￋﾮ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sh.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￉ￏﾺﾣ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wj.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￢ﾽﾭ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zh.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖ￩ﾺﾣ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://changshu.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾳﾣￊ￬\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hd.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺﾪﾵﾦ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://lyg.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￁ﾬￔￆﾸￛ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￉￮ￛￚ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xj.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎￚￂﾳￄﾾￆ￫\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zb.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￗￍﾲﾩ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;D\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hf.soufun.com\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺￏﾷￊ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://ly.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￂ￥￑￴\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://suzhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￋￕￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://wuhu.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￟ﾺ￾\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zhoushan.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￖￛ￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://dl.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾴ￳￁ﾬ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://huizhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾻ￝ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://liuzhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￁￸ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sx.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￉ￜ￐ￋ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;X\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://zjg.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￕￅﾼￒﾸￛ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://dg.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾶﾫ￝ﾸ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://nm.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺ￴ﾺￍﾺￆￌ￘\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://lf.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￀￈ﾷﾻ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sy.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￉￲￑￴\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xian.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￷ﾰﾲ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;ￆ￤ￋ￻\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://dy.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾶﾫￓﾪ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://huaian.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾻﾴﾰﾲ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://lc.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￁ￄﾳￇ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sjz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￊﾯﾼￒￗﾯ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xn.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎ￷ￄ￾\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://www.hkproperty.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￏ￣ﾸￛ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://dz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾵￂￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://heze.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺￊￔ￳\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;M\u0026lt;/strong\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://st.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￉ￇￍﾷ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xm.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￏￃￃￅ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://www.twproperty.com.tw/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￌﾨￍ￥\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://huzhou.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺ￾ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://mianyang.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￃ￠￑￴\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://shunde.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￋﾳﾵￂ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xz.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￐￬ￖ￝\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; height=\u0026#34;20\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://www.sgproperty.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￐ￂﾼￓￆￂ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://hs.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ﾺ￢ￋﾮ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; height=\u0026#34;20\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://mas.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￂ￭ﾰﾰ￉ﾽ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sanya.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￈�￑ￇ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xt.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￏ￦ￌﾶ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; height=\u0026#34;20\u0026#34; valign=\u0026#34;middle\u0026#34; width=\u0026#34;16%\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://vancouver.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￎￂﾸ￧ﾻﾪ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; height=\u0026#34;20\u0026#34; valign=\u0026#34;middle\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://sq.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;ￋ￞ￇﾨ\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td align=\u0026#34;left\u0026#34; valign=\u0026#34;middle\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;http://xx.soufun.com/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;￐ￂￏ￧\u0026lt;/a\u0026gt; \u0026#39;\u0026#39;\u0026#39; handler = TestHandler(handle_comment=False, handle_text=True) parser = HtmlParser(handler) parser.parse(html) handler.print_hrefs() if __name__ == \u0026#39;__main__\u0026#39;: unittest.main() test_main() test_main_2() test_main_3() "},{"id":19,"href":"/posts/python-validation/","title":"python validation","section":"Blog","content":"rails中，有一个active_validation，用来做一些常见的校验，十分方便。于是乎，模仿了它，写下了它。\n#coding: utf-8 import re class NoOptionError(Exception): def __init__(self, options = []): self.msg = \u0026#39;should be in [%s], but noting\u0026#39; % \u0026#39;, \u0026#39;.join(options) class OptionNameError(Exception): def __init__(self, option, options = []): should_be = \u0026#39;, \u0026#39;.join(options) self.msg = \u0026#39;should be in [%s], but %s\u0026#39; % (should_be, option) class Validator(object): def _validate_options(self, **options): all_null = True for opt in options: if opt not in self._options: raise OptionNameError(opt, self._options) else: if options[opt] is not None: all_null = False if all_null: raise NoOptionError(self._options) return True class PresenceValidator(Validator): def validate(self, value, allow_blank = True): if value is None: return False if allow_blank: if isinstance(value, str): # 字符串要单独处理 if not value.strip(): return True if not value: return True else: if isinstance(value, str): # 字符串要单独处理 if not value.strip(): return False if (isinstance(value, str) or isinstance(value, list) or isinstance(value, dict) or isinstance(value, tuple)) and not value: # 数字0不用做这个判断 return False return True class InclusionValidator(Validator): def validate(self, value, in_values = [], allow_null = False, allow_blank = False): if value is None: return allow_null if isinstance(value, str): value = value.strip() if isinstance(value, str) and not value: return allow_blank return value in in_values class NumericalityValidator(Validator): _options = set([ \u0026#39;greater_than\u0026#39;, \u0026#39;greater_than_or_equal_to\u0026#39;, \u0026#39;equal_to\u0026#39;, \u0026#39;less_than\u0026#39;, \u0026#39;less_than_or_equal_to\u0026#39;, \u0026#39;odd\u0026#39;, \u0026#39;even\u0026#39; ]) def validate(self, value, **options): self._validate_options(**options) if value is None: raise Exception(\u0026#39;value can not be null.\u0026#39;) if type(value) not in (int, long, float): raise Exception(\u0026#39;value should be a number, but a %s\u0026#39; % type(value)) if options.get(\u0026#39;greater_than\u0026#39;, False) and value \u0026lt;= options[\u0026#39;greater_than\u0026#39;]: return False if options.get(\u0026#39;greater_than_or_equal_to\u0026#39;, False) and value \u0026lt; options[\u0026#39;greater_than_or_equal_to\u0026#39;]: return False if options.get(\u0026#39;equal_to\u0026#39;, False) and value != options[\u0026#39;equal_to\u0026#39;]: return False if options.get(\u0026#39;less_than\u0026#39;, False) and value \u0026gt;= options[\u0026#39;less_than\u0026#39;]: return False if options.get(\u0026#39;less_than_or_equal_to\u0026#39;, False) and value \u0026gt; options[\u0026#39;less_than_or_equal_to\u0026#39;]: return False odd = options.get(\u0026#39;odd\u0026#39;, None) if odd in (True, False): if odd: if value % 2 == 0: return False else: if value % 2 != 0: return False even = options.get(\u0026#39;even\u0026#39;, None) if even in (True, False): if even: if value % 2 != 0: return False else: if value % 2 == 0: return False return True class AcceptanceValidator(Validator): def validate(self, value, allow_null = True ): if allow_null: return True return value is not None class LengthValidator(Validator): _options = set([ \u0026#39;_is\u0026#39;, \u0026#39;minimum\u0026#39;, \u0026#39;maximum\u0026#39;, \u0026#39;allow_null\u0026#39;, \u0026#39;allow_blank\u0026#39; ]) def validate(self, value, **options): self._validate_options(**options) if value is None: return options.get(\u0026#39;allow_null\u0026#39;, True) if options.get(\u0026#39;allow_blank\u0026#39;, True): if isinstance(value, str): if value.strip() == \u0026#39;\u0026#39;: return True if not value: return True else: if isinstance(value, str): if value.strip() == \u0026#39;\u0026#39;: return False if (isinstance(value, str) or isinstance(value, list) or isinstance(value, dict) or isinstance(value, tuple)) and not value: # 数字0不用做这个判断 return False if options.get(\u0026#39;_is\u0026#39;, False) and len(value) != options[\u0026#39;_is\u0026#39;]: return False if options.get(\u0026#39;minimum\u0026#39;, False) and len(value) \u0026lt; options[\u0026#39;minimum\u0026#39;]: return False if options.get(\u0026#39;maximum\u0026#39;, False) and len(value) \u0026gt; options[\u0026#39;maximum\u0026#39;]: return False return True class ConfirmationValidator(Validator): def validate(self, value, confirmation_value): return confirmation_value == value class FormatValidator(Validator): def validate(self, value, _with = None, allow_null = True, allow_blank = True): if value is None: return allow_null if allow_blank: if isinstance(value, str): if not value.strip(): return True if (isinstance(value, str) or isinstance(value, list) or isinstance(value, dict) or isinstance(value, tuple)) and not value: # 数字0不用做这个判断 return True return True if re.match(_with, value) else False class ExclusionValidator(Validator): def validate(self, value, exclusion_values = [], allow_null = False, allow_blank = False): if value is None: return allow_null if isinstance(value, str): value = value.strip() if (isinstance(value, str) or isinstance(value, list) or isinstance(value, dict) or isinstance(value, tuple)) and not value: # 数字0不用做这个判断 return allow_blank return value not in exclusion_values "},{"id":20,"href":"/posts/some-common-metrics-in-Data-Analysis-and-Statistics/","title":"几个常用统计指标","section":"Blog","content":" TF/IDF # TF: 词在一个文档出现的次数 / 文档中的所有词 IDF: log(所有文档的数量/出现了某个词的文档数量) 召回率、准确率、F值 # 召回率 = 查询出来的正确数量 / 正确数量的总集 准确率 = 查询出来的正确数量 / 查询出来的总集 F值 = ( 召回率 * 准确率 * 2 ) / ( 召回率 + 准确率 ) 召回率很高的时候，往往准确率会低。所以，一味的抢到召回率或者准确率都不行，因此，定一个了F值，是对召回率和准确率的一个平衡.\n举例 # 水塘中有1000条鱼, 500只虾, 300只螺.\n捕鱼500条, 300虾, 200螺只那么: 召回率 = 500 / 1000 = 50% 准确率 = 500 / ( 500 + 300 + 200) = 50% F值 = 50% * 50% * 2 / (50% + 50%) = 50% 捕鱼1000条, 500虾, 300螺 召回率 = 1000 / 1000 = 100% 准确率 = 1000 / ( 1000 + 500 + 300) = 56% F值 = 100% * 56% * 2 (100% + 56%) = 72.8% 其它各种率 # 统一算法：各种率 = |(新值 - 旧值) - 1|\n利润率 = 利润 / 进价 = (售价 - 进价) / 进价 = (售价 / 进价) - 1 变化率 = 变化量 / 变前量 * 100% 增长率 = (现在 - 原来) / 原来 = (现在 / 原来) - 1 下降率 = (原来 - 现在) / 原来 = 1 - (原来 / 现在) 比例性质 # a / b = c / d \u0026lt;\u0026ndash;\u0026gt; ad = bc "},{"id":21,"href":"/posts/python-tricks-and-hacks/","title":"python奇技淫巧","section":"Blog","content":"在Python中，有一些常见不常用又很有用的奇技淫巧\ngetattribute # 先上代码\nclass Foo(object): def __init__(self): self.value = \u0026#39;1\u0026#39;*10 def __getattribute__(self, name): print \u0026#39;in get attribute\u0026#39; return super(Foo, self).__getattribute__(name) def hello(self): return \u0026#39;hello\u0026#39; f = Foo() print f.value 打印出：\n\u0026gt;\u0026gt;\u0026gt; in get attribute \u0026gt;\u0026gt;\u0026gt; 1111111111 \u0026gt;\u0026gt;\u0026gt; in get attribute \u0026gt;\u0026gt;\u0026gt; hello 可见 当调用一个Instance.attr 或者 Instance.method的时候，实际上是调用了__getattribute__ 注意不要在__getattribute__的方法里面写Intance.xx，否则会进入死递归，直到溢出\ngetattr # 上代码：\n#coding: utf-8 class Foo(object): def __init__(self): self.value = \u0026#39;1\u0026#39;*10 def __getattribute__(self, name): print \u0026#39;in get attribute\u0026#39; return super(Foo, self).__getattribute__(name) def __getattr__(self, name): print \u0026#39;in get attr\u0026#39; def hello(self): return \u0026#39;hello\u0026#39; f = Foo() print f.value print f.hello() print f.value1 打印出：\n\u0026gt;\u0026gt;\u0026gt; in get attribute \u0026gt;\u0026gt;\u0026gt; 1111111111 \u0026gt;\u0026gt;\u0026gt; in get attribute \u0026gt;\u0026gt;\u0026gt; hello \u0026gt;\u0026gt;\u0026gt; in get attribute \u0026gt;\u0026gt;\u0026gt; in get attr \u0026gt;\u0026gt;\u0026gt; None 可见 当调用一个Instance.attr 或者 Instance.method的时候，实际上先调用了__getattribute__，当没有找到的时候，\n再调用__getattr__方法。\n利用上面的方法，其实类似于rails里面的missing_method在Python中也可以实现\nsetattr # 上代码：\n#coding: utf-8 class Foo(object): def __init__(self): pass def __setattribute__(self, name, value): self.__dict__[name] = value print \u0026#39;in set attribute\u0026#39; def __setattr__(self, name, value): self.__dict__[name] = value print \u0026#39;in set attr\u0026#39; f = Foo() f.value = \u0026#39;1\u0026#39;*10 f.hello = lambda: \u0026#39;hello\u0026#39; print f.value print f.hello() 打印出：\n\u0026gt;\u0026gt;\u0026gt; in set attr \u0026gt;\u0026gt;\u0026gt; in set attr \u0026gt;\u0026gt;\u0026gt; 1111111111 \u0026gt;\u0026gt;\u0026gt; hello 可见\nInstance.attr = value Instance.method = xxx 都是调用的__setattr__方法，注意不要在__setattr__里面再调用Instance.xx = yy或者 setattr的方法，否则会进行死递归，直到溢出\nwith \u0026hellip; as \u0026hellip; # python2.6中有一个特殊的用法：with...as... ； 在2.5中需要import __feature__;\n先来说说他的用法，先看看一般我们如何打开并且读取一个文件的：\nf = None try: f = open(\u0026#39;/etc/hosts\u0026#39;, \u0026#39;r\u0026#39;) print f.readlines() except: raise finally: if f: try: f.close() except: pass finally: f = None 一个简单的文件操作，但是对于文件的打开和关闭我们做了太多的处理。那么如果减少这些资源的打开和释放的代码呢？请看下面：\nwith open(\u0026#39;/etc/hosts\u0026#39;, \u0026#39;r\u0026#39;) as f: print f.readlines() 实现了同样的功能，但是文件的关闭在哪里呢？这个就是with \u0026hellip; as \u0026hellip; 的作用了。它最大的好处就是自动释放一些资源。那么原理是怎么样的呢？看看下面的代码吧：\nclass Foo(object): def __enter__(self): print \u0026#39;in enter\u0026#39; def __exit__(self, exc_type, exc_value, traceback): print \u0026#39;exit\u0026#39; with Foo() as f: pass 打印出：\n\u0026gt;\u0026gt;\u0026gt; in enter \u0026gt;\u0026gt;\u0026gt; exit 可见 with ... as ... 的时候，嗲用了 __enter__ 的方法，当跳出with 代码段的时候，自动调用了 __exit__的方法。对于高版本的python来说，可以直接用contextmanager来进行相同的工作。而我们可以利用这个写出很多有意思的代码，例如在操作数据库的时候，假设有一个User的ORM。\n那么对于事务的处理，我们完全可以写成：\nclass Transaction(object): def __init__(self, db): self._conn = db self._conn._db.autocommit(False) def commit(self): if self._conn._db: self._conn._db.commit() self._conn._db.autocommit(True) def rollback(self): if self._conn._db: self._conn._db.rollback() self._conn._db.autocommit(True) class User(object): @classmethod @contextmanager def transaction(cls): t = Transaction(db) try: yield None except Exception, ex: t.rollback() raise else: t.commit() with User.transaction(): # do sth. 巧用异常得到代码片段的信息 # python 有__file__, 但没有__funcname__, __line__ 这样的东西，来描述目前执行到什么方法，哪一行。怎么办？巧用异常，可以得到相应的信息。\n#utf-8 import sys def func_name_and_line(): \u0026#34;\u0026#34;\u0026#34;Return the frame object for the caller\u0026#39;s stack frame.\u0026#34;\u0026#34;\u0026#34; try: raise Exception except: f = sys.exc_info()[2].tb_frame.f_back return f.f_code.co_name, f.f_lineno def test(): print func_name_and_line() if __name__ == \u0026#39;__main__\u0026#39;: test() 基本数学 # 一个方法得到整数和余数\nprint divmod(5, 3) 利用两个*号，求幂\nprint 2**3 利用namedtuple代替常量的dict\ndict的优势在于简单，缺点在于key可以是随意的，所以，有时候key填错了，也不容易找出来。而且，由于dict的完全对外开发性。所以，通过某些步骤后，可能内容就完全变化了。所以，当你的dict作为一个常量的时候，可以考虑用namedtuple，这样增加了代码的可读性。而且，减少了出错的概率\nfrom collections import namedtuple user = namedtuple(\u0026#39;User\u0026#39;, [\u0026#39;name\u0026#39;, \u0026#39;password\u0026#39;])._make([\u0026#39;pengyi\u0026#39;, \u0026#39;888888\u0026#39;]) print user.name, user.password 快速拉平一个list\n对于一个list，里面的元素可能又是一个list或者tuple。那么有没有方式快速拉平？\ndef flatten(sequnce): for x in sequnce: if isinstance(x, (list, tuple)): for y in flatten(x): yield y else: yield x for x in flatten([\u0026#39;a\u0026#39;, [\u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;], range(10), \u0026#39;f\u0026#39;]): print x 元素组合\n组合一个集合里面的所有元素\nfrom itertools import combinations for x in combinations(range(10), 2): print x for x in combinations(range(10), 3): print x 对list进行排序\n不忽略大小写 l = [\u0026#39;B\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;b\u0026#39; ] l.sort() 忽略大小写 l = [\u0026#39;B\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;A\u0026#39;, \u0026#39;b\u0026#39; ] l.sort(key = str.lower) 对字典进行排序\n元素很多的字典： def sort_dict(d): for k in sorted(d.iterkeys()): yield k, d[k] 元素不多的字典： [ k, d[k] for k in sorted(d.iterkeys()) ] SortedDict 保证字典的插入顺序 对于字典来说，key是hash算法。那么，无法保证插入顺序。但是python的标准库里面提供了一个SortedDict，用法和dict一样。\nfor k, v in SortedDict(a=1, b=2, c=3, aa=4, bb=5).iteritems(): print k, v "},{"id":22,"href":"/posts/thoughts-on-vertical-website-crawler/","title":"关于垂直网站爬虫的思考","section":"Blog","content":" 基本指标和难点 # 实时性 新的内容，需要很快的抓到 全面性 老的内容和新的内容都需要能抓到，不能只侧重某一方面 新的内容在一定时间后就是老的内容了 基于1，可能新内容要抓取的优先级更高，但不能只抓新的，不要旧的 去除重复 不同的网站可能有相同的内容，抓完后可能需要去掉重复的内容 有写网站的url后面带有随机数，或者无效的参数，但是内容却是固定的，需要想办法去掉，只抓一次 去除循环抓取 各个网站之间可能相互link，需要职能的分析出已经抓取过的 可持续抓取性 一个入口可以一直在抓取，无需人工干预，7*24小时服务 人工干预 抓取速度 抓取进程个数 可能被封 利用6 降低抓取频率 多IP对外抓取 通过Proxy 子系统简单分析 # crawler，专门负责抓取的服务，输入是一个url，输入是一个url对应的页面 scheduler，专门负责crawler的调度，能够控制crawler的各方面参数，可能需要多进程共享 linkdb, 用来存取link的，非常简单，只有增删改查，注意大数据，要提供对于link抓取优先级的接口，永远提供优先级的topN个link repository, 用来存取content的，非常简单，只有增删改查，注意大数据 analyzer, 分析repository的内容，进行去重复，为索引服务 抓取模型 # 多线程 实现简单，python的多线程无法重复利用多核 多进程 实现简单，python的多进程能利用多核 异步 实现复杂，重复利用多核 性能高 "},{"id":23,"href":"/posts/hibernate-simple-tutorials/","title":"Hibernate入门使用","section":"Blog","content":"Hibernate入门使用文章, 主要讲快速使用，不会介绍太多的深层次的东西。方便自己，方便大家。因本人懒惰，记不住hibernate的配置选项，所以，此文实例都是使用myeclipse进行快速开发，数据库都是mysql。\n初次使用 # 直接上需求：实现对用户的增、删、改、查。\n为了方便，用户就2个属性 用户ID和用户名。实体模型如下：\n建立工程:HibernateQuickUse，并且建立包。如下：\nPojo # 根据实体，创建类User，代码如下：\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class User implements java.io.Serializable { private String id; private String name; public User() { } public String getId() { return this.id; } public void setId(String id) { this.id = id; } public String getName() { return this.name; } public void setName(String name) {this.name = name;} } DB # 根据实体，创建数据表。sql如下：\nuse HibernateQuickUse; drop table if exists User; create table user ( id varchar(32) primary key, name varchar(32) ); 这里的id，我没有采用Integer auto_increment, 原因是为了数据库的数据能方便的导入到另外一种数据库里面，比方说：oracle。当然，这个是以牺牲部分效率为前提的。因为id是integer的，能更加快速查询。不过，从数据库会自动为 primary key 建立 index来看，效率也不会相差太多。\nhibernate.cfg.xml # 要想通过hibernate访问数据库。首先要建立描述数据库的文件：hibernate.cfg.xml。放到src下面。内容如下：\n\u0026lt;!DOCTYPE hibernate-configuration PUBLIC \u0026#34;-//Hibernate/Hibernate Configuration DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-configuration\u0026gt; \u0026lt;session-factory\u0026gt; \u0026lt;!-- dialect, 这个对应着hibernate生成哪种数据库的sql。--\u0026gt; \u0026lt;property name=\u0026#34;dialect\u0026#34;\u0026gt;org.hibernate.dialect.MySQLDialect\u0026lt;/property\u0026gt; \u0026lt;property name=\u0026#34;connection.url\u0026#34;\u0026gt;jdbc:mysql://localhost:3306/hibernatequickUse\u0026lt;/property\u0026gt; \u0026lt;property name=\u0026#34;connection.username\u0026#34;\u0026gt;root\u0026lt;/property\u0026gt; \u0026lt;property name=\u0026#34;connection.password\u0026#34;\u0026gt;root\u0026lt;/property\u0026gt; \u0026lt;property name=\u0026#34;connection.driver_class\u0026#34;\u0026gt;com.mysql.jdbc.Driver\u0026lt;/property\u0026gt; \u0026lt;!-- show_sql, 这个是为了调试时候输出sql语句到屏幕用 --\u0026gt; \u0026lt;property name=\u0026#34;show_sql\u0026#34;\u0026gt;true\u0026lt;/property\u0026gt; \u0026lt;mapping resource=\u0026#34;org/py/hib/quickstart/User.hbm.xml\u0026#34; /\u0026gt; \u0026lt;/session-factory\u0026gt; \u0026lt;/hibernate-configuration\u0026gt; User.hbm.xml # 实体-数据库映射文件 \u0026ndash; 主要是告诉hibernate，这个User类，对应着哪个table，User类里面的那个属性对应着table里面的哪个字段。\n我们可以建立 实体-数据库 的xml映射文件，也可以采用Annotations映射，但是目前只说xml映射方式。如下：\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.quickstart.User\u0026#34; table=\u0026#34;user\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;id\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;!-- id的生成策略采用 uuid，也可以是 native等 --\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;32\u0026#34; /\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; Testing # 有了上面的准备，那么我们开始来用junit测试. 我把测试用力放到了test/org.py.hib.quickstart下面。代码如下：\nimport junit.framework.Assert; import junit.framework.TestCase; import org.hibernate.Session; import org.hibernate.SessionFactory; import org.hibernate.Transaction; import org.hibernate.cfg.Configuration; import org.junit.After; import org.junit.Before; public class QuickStartTest extends TestCase { SessionFactory factory; String m_name = \u0026#34;ryanpoy\u0026#34;; String m_name2 = \u0026#34;ryanpoy2\u0026#34;; @Before public void setUp() throws Exception { Configuration conf = new Configuration().configure(); factory = conf.buildSessionFactory(); } public void testSave() throws Exception { System.out.println(\u0026#34;\\n=== test save ===\u0026#34;); User u = new User(); u.setName(m_name); // 设置用户名 = m_name Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); session.save(u); tran.commit(); Assert.assertEquals(u.getId() != null, true); } catch (Exception ex) { tran.rollback(); throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testFind() throws Exception { System.out.println(\u0026#34;=== test find ===\u0026#34;); Session session = null; try { session = factory.openSession(); User u = (User) session.createQuery(\u0026#34; from User\u0026#34;).list().get(0); Assert.assertEquals(true, u.getId() != null); Assert.assertEquals(m_name, u.getName()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testModify() throws Exception { System.out.println(\u0026#34;\\n=== test modify ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); User u = (User) session.createQuery(\u0026#34; from User\u0026#34;).list().get(0); u.setName(m_name2); // 修改用户名 = m_name2.（原来用户名= m_name） tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 修改后再查询 */ System.out.println(\u0026#34;\\n=== test find after modify ===\u0026#34;); try { session = factory.openSession(); User u = (User) session.createQuery(\u0026#34; from User\u0026#34;).list().get(0); Assert.assertEquals(true, u.getId() != null); Assert.assertEquals(m_name2, u.getName()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testDelete() throws Exception { System.out.println(\u0026#34;\\n=== test delete ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); User u = (User) session.createQuery(\u0026#34; from User\u0026#34;).list().get(0); session.delete(u); tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 删除后再查询 */ System.out.println(\u0026#34;\\n=== test find after delete ===\u0026#34;); try { session = factory.openSession(); Integer num = (Integer) session.createQuery(\u0026#34; from User\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @After public void tearDown() throws Exception { factory.close(); } } 运行后，我们很欣慰的看到一路绿灯，全部通过了。那么测试没有问题。呵呵(这里的测试可能还不完善。请大家指出。前面说过，我对测试这块也不熟)。\n看控制台，会输出如下信息：\n=== test save === Hibernate: insert into hibernatequickuse.user (name, id) values (?, ?) === test find === Hibernate: select user0_.id as id2_, user0_.name as name2_ from hibernatequickuse.user user0_ === test modify === Hibernate: select user0_.id as id4_, user0_.name as name4_ from hibernatequickuse.user user0_ Hibernate: update hibernatequickuse.user set name=? where id=? === test find after modify === Hibernate: select user0_.id as id4_, user0_.name as name4_ from hibernatequickuse.user user0_ === test delete === Hibernate: select user0_.id as id6_, user0_.name as name6_ from hibernatequickuse.user user0_ Hibernate: delete from hibernatequickuse.user where id=? === test find after delete === Hibernate: select user0_.id as id6_, user0_.name as name6_ from hibernatequickuse.user user0_ 这些，就是hibernte自动生成的。仔细看看，其实就是标准sql。呵呵。懂jdbc的都能看懂。\nxml关系映射 1:1 # 1对1的关系在现实中很常见。比方说：人和身份证。1个身份证对应着一个身份证，一个身份证对应着一个人。那么，我们就以此为原型。进行代码编写。\n实体模型\nDB # 根据模型，创建数据库：\nuse HibernateQuickUse; drop table if exists Person; drop table if exists Card; create table Card ( id varchar(32) primary key, cardDesc varchar(128) not null ); create table Person ( id varchar(32) primary key, name varchar(32) not null, card_id varchar(32) not null, foreign key(card_id) references Card(id) ); Pojo # java代码如下：\nPerson类\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class Person implements java.io.Serializable { private String id; private String name; private Card card; public Person() { } public String getId() { return this.id; } public void setId(String id) { this.id = id; } public Card getCard() {return this.card;} public void setCard(Card card) { this.card = card; } public String getName() { return this.name; } public void setName(String name) { this.name = name; } } Card类：\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class Card implements java.io.Serializable { private String id; private String cardDesc; public Card() { } public String getId() { return this.id; } public void setId(String id) { this.id = id; } public String getCardDesc() { return cardDesc; } public void setCardDesc(String cardDesc) { this.cardDesc = cardDesc; } } Mapping Xml # xml映射文件如下：\nPerson.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.one2one.Person\u0026#34; table=\u0026#34;person\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;id\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34;\u0026gt; \u0026lt;column name=\u0026#34;name\u0026#34; length=\u0026#34;32\u0026#34; /\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;many-to-one name=\u0026#34;card\u0026#34; class=\u0026#34;org.py.hib.relation.one2one.Card\u0026#34; unique=\u0026#34;true\u0026#34; cascade=\u0026#34;all\u0026#34; column=\u0026#34;card_id\u0026#34; /\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; 今天讲的是one-to-one配置。但是，此处用的是many-to-one，这个是什么原因呢？其实，one-to-one就是特殊的many-to-one。\nCard.hbm.xml：\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.one2one.Card\u0026#34; table=\u0026#34;card\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;id\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;cardDesc\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;cardDesc\u0026#34; length=\u0026#34;128\u0026#34; not-null=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; Testing # 测试代码如下：\nOne2OneTest.java\nimport junit.framework.Assert; import junit.framework.TestCase; import org.hibernate.Session; import org.hibernate.SessionFactory; import org.hibernate.Transaction; import org.hibernate.cfg.Configuration; import org.junit.After; import org.junit.Before; public class One2OneTest extends TestCase { private SessionFactory factory; private String m_name = \u0026#34;ryanpoy\u0026#34;; private String m_name2 = \u0026#34;ryanpoy2\u0026#34;; private String m_cardDesc1 = \u0026#34;desc_1\u0026#34;; private String m_cardDesc2 = \u0026#34;desc_2\u0026#34;; @Before public void setUp() throws Exception { Configuration conf = new Configuration().configure(); factory = conf.buildSessionFactory(); } public void testSave() throws Exception { System.out.println(\u0026#34;\\n=== test save ===\u0026#34;); Card card = new Card(); card.setCardDesc(m_cardDesc1); Person person = new Person(); person.setName(m_name); // 设置用户名 = m_name person.setCard(card); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); session.save(person); tran.commit(); Assert.assertEquals(person.getId() != null, true); Assert.assertEquals(card.getId() != null, true); } catch (Exception ex) { tran.rollback(); throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testFind() throws Exception { System.out.println(\u0026#34;\\n=== test find ===\u0026#34;); Session session = null; try { session = factory.openSession(); Person person = (Person) session.createQuery(\u0026#34;from Person\u0026#34;).list().get(0); Assert.assertEquals(true, person.getId() != null); Assert.assertEquals(m_name, person.getName()); Assert.assertEquals(true, person.getCard().getId() != null); Assert.assertEquals(m_cardDesc1, person.getCard().getCardDesc()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testModify() throws Exception { System.out.println(\u0026#34;\\n=== test modify ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Person person = (Person) session.createQuery(\u0026#34;from Person\u0026#34;).list().get(0); person.setName(m_name2); // 修改用户名 = m_name2.（原来用户名= m_name） person.getCard().setCardDesc(m_cardDesc2); // 修改cardDesc 为 m_cardDesc2 (原来是：m_cardDesc1) tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } System.out.println(\u0026#34;\\n=== test find after modify ===\u0026#34;); try { session = factory.openSession(); Person person = (Person) session.createQuery(\u0026#34;from Person\u0026#34;).list().get(0); Assert.assertEquals(true, person.getId() != null); Assert.assertEquals(m_name2, person.getName()); Assert.assertEquals(true, person.getCard().getId() != null); Assert.assertEquals(m_cardDesc2, person.getCard().getCardDesc()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testDelete() throws Exception { System.out.println(\u0026#34;\\n=== test delete ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Person person = (Person) session.createQuery(\u0026#34;from Person\u0026#34;).list().get(0); session.delete(person); tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 删除后再查询 */ System.out.println(\u0026#34;\\n=== test find after delete ===\u0026#34;); try { session = factory.openSession(); Integer num = (Integer) session.createQuery(\u0026#34;from Person\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); num = (Integer) session.createQuery(\u0026#34;from Card\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @After public void tearDown() throws Exception { factory.close(); } } 运行test，一路飚绿。呵呵。陶醉一番。不过，这也就是一个拿不出手的测试和一个拿不出手的例子。没有任何实际意义的例子。仅此一个demo而已。\n在1：1中，其实还有一种方式，即：唯一主见关联。但是，我一直倾向于上面的这种形式，所以，唯一主见关联的就不再介绍了。\nxml关系映射 1:n # 因为n:1就是1:1，两者是一样的，所以不单独说了。下面主要讲主要讲1:n：\n这次用到的例子是Father和child之间的关系。一个father可以有n个child，但是1个child只有一个father。这里只说生父。至于其他的继父、养父、干爹等等，不再范围之内。\n建立实体模型如下：\nDB # 根据模型创建数据库。sql脚本如下：\nuse HibernateQuickUse; drop table if exists Child; drop table if exists Father; create table Father ( id varchar(32) primary key, name varchar(32) not null ); create table Child ( id varchar(32) primary key, name varchar(128) not null, father_id varchar(32) not null, foreign key(father_id) references Father(id) ); Pojo # 根据模型创建java对象。\nFather.java：\nimport java.util.HashSet; import java.util.Set; @SuppressWarnings(\u0026#34;serial\u0026#34;) public class Father implements java.io.Serializable { private String id; private String name; private Set children = new HashSet(0); public String getId() { return this.id; } public void setId(String id) { this.id = id; } public String getName() { return this.name; } public void setName(String name) { this.name = name; } public Set getChildren() { return children; } public void setChildren(Set children) { this.children = children; } } Child.java：\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class Child implements java.io.Serializable { private String id; private String name; private Father father; public String getId() { return this.id; } public void setId(String id) { this.id = id; } public Father getFather() { return this.father; } public void setFather(Father father) { this.father = father; } public String getName() { return this.name; } public void setName(String name) { this.name = name;} } Mapping Xml # 映射文件如下：\nFather.hbm.xml：\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.one2many.Father\u0026#34; table=\u0026#34;father\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;id\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;32\u0026#34; not-null=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;set name=\u0026#34;children\u0026#34; table=\u0026#34;child\u0026#34; cascade=\u0026#34;all\u0026#34; inverse=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;key column=\u0026#34;father_id\u0026#34; /\u0026gt; \u0026lt;one-to-many class=\u0026#34;org.py.hib.relation.one2many.Child\u0026#34; /\u0026gt; \u0026lt;/set\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; 这里要说说 \u0026ldquo;set\u0026rdquo; 这个标签里面的内容。\n\u0026ldquo;name\u0026quot;是Father里面的属性的名字。 \u0026ldquo;table\u0026quot;表示它对应的是数据库中的哪个表。 cascade=\u0026ldquo;all\u0026rdquo; 表示所有的操作都级联操作。 \u0026ldquo;inverse\u0026quot;表示关系的维护由谁来执行。 true表示不由自己执行，而有对应的另外一方执行。 false则相反，表示由自己维护关系。 这里设置成 true 是由原因的。如果说把它设置成为false，那么就由他来维护关系了。\n这里得说一下inverse属性的问题。在one-to-many中，如果关系由one来维护，那么会很麻烦，性能也会很低。每次对many一方的一条记录进行增、删、改 时都会多一次update操作。原因很简单，因为关系的维护设置在了one这一方，所以对many的每一次操作，one这一方都要维护一次双方的关系。\n这个就好像皇帝和老百姓的关系。试问，是来一个老百姓，皇帝就宣布他是我的子民，还是由老百姓直接选择做那个皇帝的子民更加有效率呢？呵呵。不知道这个例子大家有没有明白。关于inverse的更具体的说明，在javaeye上搜一下，就会发现有很多。这里推荐一篇，我认为讲得很明白的： inverse\n\u0026ldquo;key\u0026rdquo; 中的 \u0026ldquo;column\u0026rdquo; 表示在table(这里的table是child)中, 跟Father关联的字段名称。这里是\u0026quot;father_id\u0026rdquo;。可以看看开始的sql脚本。\none-to-many 表示father和children的关系。class则表示是同哪个类是这种关系。\nChild.hbm.xml：\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.one2many.Child\u0026#34; table=\u0026#34;child\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;id\u0026#34; length=\u0026#34;32\u0026#34; \u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;128\u0026#34; not-null=\u0026#34;true\u0026#34;/\u0026gt; \u0026lt;many-to-one name=\u0026#34;father\u0026#34; class=\u0026#34;org.py.hib.relation.one2many.Father\u0026#34; column=\u0026#34;father_id\u0026#34; /\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; 这个里面主要就是多了一个many-to-one，表示child 和 father 的关系是\u0026quot;many-to-one\u0026rdquo;\nTesting # 测试代码如下：\nOne2ManyTest.java\nimport java.util.Set; import junit.framework.Assert; import junit.framework.TestCase; import org.hibernate.Session; import org.hibernate.SessionFactory; import org.hibernate.Transaction; import org.hibernate.cfg.Configuration; import org.junit.After; import org.junit.Before; public class One2ManyTest extends TestCase { private SessionFactory factory; private static final String[] childname = new String[]{\u0026#34;child_1\u0026#34;, \u0026#34;child_2\u0026#34;, \u0026#34;child_3\u0026#34;}; private static final String[] newchildname = new String[]{\u0026#34;new_child_1\u0026#34;, \u0026#34;new_child_2\u0026#34;, \u0026#34;new_child_3\u0026#34;}; @Before public void setUp() throws Exception { Configuration conf = new Configuration().configure(); factory = conf.buildSessionFactory(); } public void testSave() throws Exception { System.out.println(\u0026#34;\\n=== test save ===\u0026#34;); Father father = new Father(); father.setName(\u0026#34;Father_1\u0026#34;); Child child1 = new Child(); child1.setName(childname[0]); Child child2 = new Child(); child2.setName(childname[1]); Child child3 = new Child(); child3.setName(childname[2]); father.getChildren().add(child1); father.getChildren().add(child2); father.getChildren().add(child3); child1.setFather(father); child2.setFather(father); child3.setFather(father); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); session.save(father); tran.commit(); Assert.assertNotNull(father.getId()); Assert.assertNotNull(child1.getId()); Assert.assertNotNull(child2.getId()); Assert.assertNotNull(child3.getId()); } catch (Exception ex) { tran.rollback(); throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } private boolean isChildrenName(String name) { for (String n : childname) { if (n.equals(name)) return true; } return false; } private boolean isNewChildrenName(String name) { for (String n : newchildname) { if (n.equals(name)) return true; } return false; } public void testFind() throws Exception { System.out.println(\u0026#34;\\n=== test find ===\u0026#34;); Session session = null; try { session = factory.openSession(); Father father = (Father) session.createQuery(\u0026#34;from Father\u0026#34;).list().get(0); Assert.assertNotNull(father.getId()); Assert.assertEquals(\u0026#34;Father_1\u0026#34;, father.getName()); Set children = father.getChildren(); for (Child child : children) { Assert.assertEquals(child.getFather(), father); Assert.assertNotNull(child.getId()); Assert.assertTrue(isChildrenName(child.getName())); } } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testModify() throws Exception { System.out.println(\u0026#34;\\n=== test modify ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Father father = (Father) session.createQuery(\u0026#34;from Father\u0026#34;).list().get(0); father.setName(\u0026#34;Father_2\u0026#34;); // 修改用户名 = m_name2.（原来用户名= m_name） Set children = father.getChildren(); int i = 0; for (Child child : children) { child.setName(newchildname[i++]); } tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 修改后再查询 */ System.out.println(\u0026#34;\\n=== test find after modify ===\u0026#34;); try { session = factory.openSession(); Father father = (Father) session.createQuery(\u0026#34;from Father\u0026#34;).list().get(0); Assert.assertNotNull(father.getId()); Assert.assertEquals(\u0026#34;Father_2\u0026#34;, father.getName()); Set children = father.getChildren(); for (Child child : children) { Assert.assertEquals(child.getFather(), father); Assert.assertNotNull(child.getId()); Assert.assertTrue(isNewChildrenName(child.getName())); } } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testDelete() throws Exception { System.out.println(\u0026#34;\\n=== test delete ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Father father = (Father) session.createQuery(\u0026#34;from Father\u0026#34;).list().get(0); session.delete(father); tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 删除后再查询 */ System.out.println(\u0026#34;\\n=== test find after delete ===\u0026#34;); try { session = factory.openSession(); Integer num = (Integer) session.createQuery(\u0026#34;from Father\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); num = (Integer) session.createQuery(\u0026#34;from Child\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @After public void tearDown() throws Exception { factory.close(); } } 这里不得不再重申以下 one-to-many 中 inverse 关系的维护问题。 在one-to-many中，把inverse放到many中来维护是一个好的习惯。大家可以把上面的inverse改成false，看看会发生什么情况。\n在inverse=true的时候，输出结果如下：\n=== test save === Hibernate: insert into father (name, id) values (?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) === test find === Hibernate: select father0_.id as id13_, father0_.name as name13_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id14_0_, children0_.name as name14_0_, children0_.father_id as father3_14_0_ from child children0_ where children0_.father_id=? === test modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? Hibernate: update father set name=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? === test find after modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? === test delete === Hibernate: select father0_.id as id33_, father0_.name as name33_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id34_0_, children0_.name as name34_0_, children0_.father_id as father3_34_0_ from child children0_ where children0_.father_id=? Hibernate: delete from child where id=? Hibernate: delete from child where id=? Hibernate: delete from child where id=? Hibernate: delete from father where id=? === test find after delete === Hibernate: select father0_.id as id33_, father0_.name as name33_ from father father0_ Hibernate: select child0_.id as id34_, child0_.name as name34_, child0_.father_id as father3_34_ from child child0_ 而改成inverse=false后，testDelete()是没法通过的。输出如下：\nlog4j:WARN No appenders could be found for logger (org.hibernate.cfg.Environment). log4j:WARN Please initialize the log4j system properly. === test save === Hibernate: insert into father (name, id) values (?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: update child set father_id=? where id=? Hibernate: update child set father_id=? where id=? Hibernate: update child set father_id=? where id=? === test find === Hibernate: select father0_.id as id13_, father0_.name as name13_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id14_0_, children0_.name as name14_0_, children0_.father_id as father3_14_0_ from child children0_ where children0_.father_id=? === test modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? Hibernate: update father set name=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? === test find after modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? === test delete === Hibernate: select father0_.id as id33_, father0_.name as name33_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id34_0_, children0_.name as name34_0_, children0_.father_id as father3_34_0_ from child children0_ where children0_.father_id=? Hibernate: update child set father_id=null where father_id=? 产生了错误，原因是：违反了非空约束。\n得修改sql脚本，把Child的建表脚本中的：\nfather_id varchar(32) not null, 修改成为：\nfather_id varchar(32), 才能通过。这个时候输出的结果是：\nlog4j:WARN No appenders could be found for logger (org.hibernate.cfg.Environment). log4j:WARN Please initialize the log4j system properly. === test save === Hibernate: insert into father (name, id) values (?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: insert into child (name, father_id, id) values (?, ?, ?) Hibernate: update child set father_id=? where id=? Hibernate: update child set father_id=? where id=? Hibernate: update child set father_id=? where id=? === test find === Hibernate: select father0_.id as id13_, father0_.name as name13_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id14_0_, children0_.name as name14_0_, children0_.father_id as father3_14_0_ from child children0_ where children0_.father_id=? === test modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? Hibernate: update father set name=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? Hibernate: update child set name=?, father_id=? where id=? === test find after modify === Hibernate: select father0_.id as id23_, father0_.name as name23_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id24_0_, children0_.name as name24_0_, children0_.father_id as father3_24_0_ from child children0_ where children0_.father_id=? === test delete === Hibernate: select father0_.id as id33_, father0_.name as name33_ from father father0_ Hibernate: select children0_.father_id as father3_1_, children0_.id as id1_, children0_.id as id34_0_, children0_.name as name34_0_, children0_.father_id as father3_34_0_ from child children0_ where children0_.father_id=? Hibernate: update child set father_id=null where father_id=? Hibernate: delete from child where id=? Hibernate: delete from child where id=? Hibernate: delete from child where id=? Hibernate: delete from father where id=? === test find after delete === Hibernate: select father0_.id as id33_, father0_.name as name33_ from father father0_ Hibernate: select child0_.id as id34_, child0_.name as name34_, child0_.father_id as father3_34_ from child child0_ 所以，inverse的设置是很重要的一个事情。\nxml关系映射 n:n # 我们以老师和学生为例，一个老师可以交很多学生，同样一个学生可以拥有多个老师，所以，他们之间的关系就是n：n的。\n实体模型： 从实体模型来看。有2个对象，但是为了在数据库中表示出2者的n:n的关系，我们还得引入一张表。\nDB # sql脚本如下：\nuse HibernateQuickUse; drop table if exists teacher_student_relation; drop table if exists Teacher; drop table if exists Student; create table Teacher ( tid varchar(32) primary key, name varchar(32) not null ); create table Student ( sid varchar(32) primary key, name varchar(128) not null ); create table teacher_student_relation ( id integer auto_increment primary key, teacher_id varchar(32) not null, student_id varchar(32) not null, foreign key(teacher_id) references Teacher(tid), foreign key(student_id) references Student(sid) ); Pojo # 通过模型，创建java类如下：\nStudent.java\nimport java.util.HashSet; import java.util.Set; @SuppressWarnings(\u0026#34;serial\u0026#34;) public class Student implements java.io.Serializable { private String id; private String name; private Set teachers = new HashSet(0); public Student() {} public String getId() {return this.id;} public void setId(String id) {this.id = id;} public String getName() {return this.name;} public void setName(String name) {this.name = name;} public Set getTeachers() {return teachers;} public void setTeachers(Set teachers) {this.teachers = teachers;} } Teacher.java:\nimport java.util.HashSet; import java.util.Set; @SuppressWarnings(\u0026#34;serial\u0026#34;) public class Teacher implements java.io.Serializable { private String id; private String name; private Set students = new HashSet(0); public Teacher() {} public String getId() { return this.id;} public void setId(String id) { this.id = id;} public String getName() { return this.name;} public void setName(String name) { this.name = name;} public Set getStudents() { return students;} public void setStudents(Set students) { this.students = students;} } Mapping Xml # xml映射文件如下\nStudent.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.many2many.Student\u0026#34; table=\u0026#34;student\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;sid\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;128\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;set name=\u0026#34;teachers\u0026#34; table=\u0026#34;teacher_student_relation\u0026#34; cascade=\u0026#34;save-update\u0026#34; inverse=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;key column=\u0026#34;student_id\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;many-to-many column=\u0026#34;teacher_id\u0026#34; class=\u0026#34;org.py.hib.relation.many2many.Teacher\u0026#34; /\u0026gt; \u0026lt;/set\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; 注意\nset中的 table 指向的是数据库中的关联表。 cascade 用的是save-update , 且inverse用的是false，这样的话，当进行修改和保存和删除时，关联表中的记录也会删掉. 如果cascade 用的是 all 那么连同student表中的记录也会被删除掉。 key中的column指的是： 关联表中与Student发生关系的字段。 而many-to-many中的column指的是：关联表中，与class(这里是：org.py.hib.relation.many2many.Teacher)发生关系的字段。 Teacher.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.many2many.Teacher\u0026#34; table=\u0026#34;teacher\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;tid\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;32\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;set name=\u0026#34;students\u0026#34; table=\u0026#34;teacher_student_relation\u0026#34; cascade=\u0026#34;save-update\u0026#34; inverse=\u0026#34;false\u0026#34;\u0026gt; \u0026lt;key column=\u0026#34;teacher_id\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;many-to-many class=\u0026#34;org.py.hib.relation.many2many.Student\u0026#34; column=\u0026#34;student_id\u0026#34; /\u0026gt; \u0026lt;/set\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; 注意： 这里的inverse也采用了false，这样子的话，Teacher和Student都维护关系表中的关系。\n测试类，Many2ManyTest.java\nimport java.util.Iterator; import java.util.List; import java.util.Set; import junit.framework.Assert; import junit.framework.TestCase; import org.hibernate.Session; import org.hibernate.SessionFactory; import org.hibernate.Transaction; import org.hibernate.cfg.Configuration; import org.junit.After; import org.junit.Before; public class Many2ManyTest extends TestCase { private SessionFactory factory; @Before public void setUp() throws Exception { Configuration conf = new Configuration().configure(); factory = conf.buildSessionFactory(); } public void testSave() throws Exception { System.out.println(\u0026#34;\\n=== test save ===\u0026#34;); Teacher teacher1 = new Teacher(); teacher1.setName(\u0026#34;teacher_1\u0026#34;); Teacher teacher2 = new Teacher(); teacher2.setName(\u0026#34;teacher_2\u0026#34;); Student stu1 = new Student(); stu1.setName(\u0026#34;student_1\u0026#34;); Student stu2 = new Student(); stu2.setName(\u0026#34;student_2\u0026#34;); stu1.getTeachers().add(teacher1); stu1.getTeachers().add(teacher2); stu2.getTeachers().add(teacher2); teacher1.getStudents().add(stu2); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); session.save(stu1); session.save(stu2); tran.commit(); Assert.assertNotNull(teacher1.getId()); Assert.assertNotNull(teacher2.getId()); Assert.assertNotNull(stu1.getId()); Assert.assertNotNull(stu2.getId()); } catch (Exception ex) { tran.rollback(); throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @SuppressWarnings(\u0026#34;unchecked\u0026#34;) public void testFindFromTeacher() throws Exception { System.out.println(\u0026#34;\\n=== test find from Teacher ===\u0026#34;); Session session = null; try { session = factory.openSession(); Iterator iter = session.createQuery(\u0026#34;from Teacher\u0026#34;).iterate(); while (iter.hasNext()) { Teacher teacher = iter.next(); Assert.assertNotNull(teacher.getId()); String teacherName = teacher.getName(); if (\u0026#34;teacher_1\u0026#34;.equals(teacherName)) { Set stus = teacher.getStudents(); Assert.assertEquals(stus.size(), 2); for (Student stu : stus) { String stuName = stu.getName(); Assert.assertNotNull(stu.getId()); Assert.assertTrue(stuName.equals(\u0026#34;student_1\u0026#34;) || stuName.equals(\u0026#34;student_2\u0026#34;)); } } else if (\u0026#34;teacher_2\u0026#34;.equals(teacherName)) { Set stus = teacher.getStudents(); Assert.assertEquals(stus.size(), 2); for (Student stu : stus) { String stuName = stu.getName(); Assert.assertNotNull(stu.getId()); Assert.assertTrue(stuName.equals(\u0026#34;student_1\u0026#34;) || stuName.equals(\u0026#34;student_2\u0026#34;)); } } else { throw new Exception(\u0026#34;teacher name error exception.\u0026#34;); } } } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @SuppressWarnings(\u0026#34;unchecked\u0026#34;) public void testFindFromStudent() throws Exception { System.out.println(\u0026#34;\\n=== test find from Student ===\u0026#34;); Session session = null; try { session = factory.openSession(); Iterator iter = session.createQuery(\u0026#34;from Student\u0026#34;).iterate(); while (iter.hasNext()) { Student stu = iter.next(); Assert.assertNotNull(stu.getId()); String stuName = stu.getName(); if (\u0026#34;student_1\u0026#34;.equals(stuName)) { Set teachers = stu.getTeachers(); Assert.assertEquals(teachers.size(), 2); for (Teacher teacher : teachers) { String tName = teacher.getName(); Assert.assertNotNull(teacher.getId()); Assert.assertTrue(tName.equals(\u0026#34;teacher_1\u0026#34;) || tName.equals(\u0026#34;teacher_2\u0026#34;)); } } else if (\u0026#34;student_2\u0026#34;.equals(stuName)) { Set teachers = stu.getTeachers(); Assert.assertEquals(teachers.size(), 2); for (Teacher teacher : teachers) { String tName = teacher.getName(); Assert.assertNotNull(teacher.getId()); Assert.assertTrue(tName.equals(\u0026#34;teacher_1\u0026#34;) || tName.equals(\u0026#34;teacher_2\u0026#34;)); } } else { throw new Exception(\u0026#34;student name error exception.\u0026#34;); } } } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testModify() throws Exception { System.out.println(\u0026#34;\\n=== test modify ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Teacher t1 = (Teacher) session.createQuery(\u0026#34;from Teacher t where t.name=\u0026#39;teacher_1\u0026#39;\u0026#34;).list().get(0); t1.setName(\u0026#34;new_teacher_1\u0026#34;); // 修改用户名 = m_name2.（原来用户名= m_name） Set stus = t1.getStudents(); for (Student stu : stus) { if (stu.getName().equals(\u0026#34;student_1\u0026#34;)) { stus.remove(stu); break; } } tran.commit(); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 修改后再查询 */ System.out.println(\u0026#34;\\n=== test find from Teacher after modify===\u0026#34;); try { session = factory.openSession(); Iterator iter = session.createQuery(\u0026#34;from Teacher\u0026#34;).iterate(); while (iter.hasNext()) { Teacher teacher = iter.next(); Assert.assertNotNull(teacher.getId()); String teacherName = teacher.getName(); if (\u0026#34;new_teacher_1\u0026#34;.equals(teacherName)) { Set stus = teacher.getStudents(); Assert.assertEquals(stus.size(), 1); for (Student stu : stus) { String stuName = stu.getName(); Assert.assertNotNull(stu.getId()); Assert.assertTrue(stuName.equals(\u0026#34;student_2\u0026#34;)); } } else if (\u0026#34;teacher_2\u0026#34;.equals(teacherName)) { Set stus = teacher.getStudents(); Assert.assertEquals(stus.size(), 2); for (Student stu : stus) { String stuName = stu.getName(); Assert.assertNotNull(stu.getId()); Assert.assertTrue(stuName.equals(\u0026#34;student_1\u0026#34;) || stuName.equals(\u0026#34;student_2\u0026#34;)); } } else { throw new Exception(\u0026#34;teacher name error exception.\u0026#34;); } } } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } public void testDelete() throws Exception { System.out.println(\u0026#34;\\n=== test delete ===\u0026#34;); Session session = null; Transaction tran = null; try { session = factory.openSession(); tran = session.beginTransaction(); Iterator iter = session.createQuery(\u0026#34;from Teacher\u0026#34;).iterate(); while (iter.hasNext()) session.delete(iter.next()); tran.commit(); Integer count = (Integer) session.createQuery(\u0026#34;select count(*) from Teacher\u0026#34;).list().get(0); Assert.assertEquals(0, count.intValue()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } /* * 删除后再查询 */ System.out.println(\u0026#34;\\n=== test find after delete ===\u0026#34;); try { session = factory.openSession(); Integer num = (Integer) session.createQuery(\u0026#34;from Teacher\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); num = (Integer) session.createQuery(\u0026#34;from Student\u0026#34;).list().size(); Assert.assertEquals(0, num.intValue()); } catch (Exception ex) { throw ex; } finally { if (session != null) { try { session.close(); } catch (Exception ex) { // nothing to do } finally { if (session != null) session = null; } } } } @After public void tearDown() throws Exception { factory.close(); } } 从这个例子中可以看出，many-to-many中，需要引入第3张表来表示关系。\nxml关系映射 - 复杂的case # 需求：丈夫有1个妻子，这样是1夫1妻。但是，丈夫花心，同时有多个情妇。\n例子归例子，大家不要做这样的丈夫。只是为了更加深入记忆。\nDB # 先看sql：\nuse HibernateQuickUse; drop table if exists Paramour; drop table if exists Husband; drop table if exists Wife; create table Wife ( wid varchar(32) primary key, name varchar(128) not null ); create table Husband ( hid varchar(32) primary key, name varchar(32) not null, wife_id varchar(32) not null, foreign key(wife_id) references Wife(wid) ); create table Paramour ( pid varchar(32) primary key, name varchar(128) not null, husband_id varchar(32) not null, foreign key(husband_id) references Husband(hid) ); Pojo # 然后看java文件。\nHusband.java\nimport java.util.HashSet; import java.util.Set; @SuppressWarnings(\u0026#34;serial\u0026#34;) public class Husband implements java.io.Serializable { private String id; private String name; private Wife wife; private Set paramours = new HashSet(); public Husband(){} public String getId() { return id;} public void setId(String id) { this.id = id;} public String getName() { return name;} public void setName(String name) { this.name = name;} public Wife getWife() { return wife;} public void setWife(Wife wife) { this.wife = wife;} public Set getParamours() { return paramours;} public void setParamours(Set paramours) { this.paramours = paramours;} } Wife.java\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class Wife implements java.io.Serializable { private String id; private String name; public Wife() { } public String getId() { return id; } public void setId(String id) { this.id = id; } public String getName() { return this.name; } public void setName(String name) { this.name = name; } } Paramour.java\n@SuppressWarnings(\u0026#34;serial\u0026#34;) public class Paramour implements java.io.Serializable { private String id; private String name; private Husband husband; public Paramour(){ } public String getId() { return id; } public void setId(String id) { this.id = id; } public Husband getHusband() { return this.husband; } public void setHusband(Husband husband) { this.husband = husband; } public String getName() { return this.name; } public void setName(String name) { this.name = name; } } Mapping Xml # 接下来再看xml映射文件。\nHusband.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.complex.Husband\u0026#34; table=\u0026#34;husband\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;hid\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;32\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;many-to-one name=\u0026#34;wife\u0026#34; class=\u0026#34;org.py.hib.relation.complex.Wife\u0026#34; cascade=\u0026#34;all\u0026#34; column=\u0026#34;wife_id\u0026#34; /\u0026gt; \u0026lt;set name=\u0026#34;paramours\u0026#34; cascade=\u0026#34;all\u0026#34; inverse=\u0026#34;true\u0026#34; \u0026gt; \u0026lt;key column=\u0026#34;husband_id\u0026#34; /\u0026gt; \u0026lt;one-to-many class=\u0026#34;org.py.hib.relation.complex.Paramour\u0026#34; /\u0026gt; \u0026lt;/set\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; Wife.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.complex.Wife\u0026#34; table=\u0026#34;wife\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;wid\u0026#34; length=\u0026#34;32\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; length=\u0026#34;128\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; Paramour.hbm.xml\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE hibernate-mapping PUBLIC \u0026#34;-//Hibernate/Hibernate Mapping DTD 3.0//EN\u0026#34; \u0026#34;http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\u0026#34;\u0026gt; \u0026lt;hibernate-mapping\u0026gt; \u0026lt;class name=\u0026#34;org.py.hib.relation.complex.Paramour\u0026#34; table=\u0026#34;paramour\u0026#34;\u0026gt; \u0026lt;id name=\u0026#34;id\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;pid\u0026#34;\u0026gt; \u0026lt;generator class=\u0026#34;uuid\u0026#34; /\u0026gt; \u0026lt;/id\u0026gt; \u0026lt;property name=\u0026#34;name\u0026#34; type=\u0026#34;java.lang.String\u0026#34; column=\u0026#34;name\u0026#34; not-null=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;many-to-one name=\u0026#34;husband\u0026#34; class=\u0026#34;org.py.hib.relation.complex.Husband\u0026#34; column=\u0026#34;husband_id\u0026#34; /\u0026gt; \u0026lt;/class\u0026gt; \u0026lt;/hibernate-mapping\u0026gt; Testing # 这里只测试了save。其他的测试大家感兴趣的可以补充。 ComplexTest.java\nimport junit.framework.Assert; import junit.framework.TestCase; import org.hibernate.Session; import org.hibernate.SessionFactory; import org.hibernate.Transaction; import org.hibernate.cfg.Configuration; import org.junit.After; import org.junit.Before; /** * 这个测试忽略了hibernate的异常 **/ public class ComplexTest extends TestCase { private SessionFactory factory; @Before public void setUp() throws Exception { Configuration conf = new Configuration().configure(); factory = conf.buildSessionFactory(); } public void testSave() { Session session = factory.openSession(); Transaction tran = session.beginTransaction(); Husband hus = new Husband(); hus.setName(\u0026#34;husband\u0026#34;); Wife wife = new Wife(); wife.setName(\u0026#34;wife\u0026#34;); Paramour p1 = new Paramour(); p1.setName(\u0026#34;paramour_1\u0026#34;); Paramour p2 = new Paramour(); p2.setName(\u0026#34;paramour_2\u0026#34;); Paramour p3 = new Paramour(); p3.setName(\u0026#34;paramour_3\u0026#34;); hus.setWife(wife); hus.getParamours().add(p1); hus.getParamours().add(p2); hus.getParamours().add(p3); p1.setHusband(hus); p2.setHusband(hus); p3.setHusband(hus); session.save(hus); tran.commit(); Assert.assertNotNull(hus.getId()); Assert.assertNotNull(wife.getId()); Assert.assertNotNull(p1.getId()); Assert.assertNotNull(p2.getId()); Assert.assertNotNull(p3.getId()); session.close(); } @After public void tearDown() { factory.close(); } } annotation关系映射 1:1 # 讲完了xml的关系映射，下面讲一下annatation的关系映射 这讲OneToOne的用法。而且是基于主外键的关联。因为这个是实际开发中最最常见的。\n这里先说明一下，我的java类的命名都以Test开头。而对应的对象名却没有用test开头。这里是为了更好的说明注视中的value到底是类名还是对象名。\nPojo # 先看java代码：\nTestUser.java\nimport javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.OneToOne; @Entity public class TestUser { String id; String username; TestCard card; @Id public String getId() {return id; } public void setId(String id) {this.id = id; } public String getUsername() {return username; } public void setUsername(String username) {this.username = username; } @OneToOne public TestCard getCard() {return card; } public void setCard(TestCard card) {this.card = card; } } TestCard：\nimport javax.persistence.Entity; import javax.persistence.Id; @Entity public class TestCard { String id; String cardNumber; @Id public String getId() { return id; } public void setId(String id) { this.id = id; } public String getCardNumber() { return cardNumber; } public void setCardNumber(String cardNumber) { this.cardNumber = cardNumber; } } 这样子就是OneToOne了。这个是单向的关系，即：由TestCard控制TestUser。看sql语句就知道了。\nDB # hibernate自动生成的sql为：\ndrop table test_card cascade constraints; drop table test_user cascade constraints; create table test_card ( id varchar2(255 char) not null, card_number varchar2(255 char), primary key (id) ); create table test_user ( id varchar2(255 char) not null, username varchar2(255 char), card_id varchar2(255 char), primary key (id) ); alter table test_user add constraint FKB9A96B58A237D846 foreign key (card_id) references test_card; 个人认为，应该这样子理解OneToOne。\n首先，他是用来声明在方法上的。（这句好似废话） 然后，他其实是用来annation这个方法的返回值的。即：描述TestCard的。 也就是说：TestCard 为控制方。TestUser为被控方。那么对应的表中，test_user表有一个外键字段对应着test_card表中的一个主键。\n这样，就好理解了。\n上面的为单向关联。那么，双向关联呢？修改TestCard如下：\nimport javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.OneToOne; @Entity public class TestCard { String id; String cardNumber; TestUser user; @Id public String getId() { return id; } public void setId(String id) { this.id = id; } @OneToOne public TestUser getUser() { return user; } public void setUser(TestUser user) { this.user = user; } public String getCardNumber() { return cardNumber; } public void setCardNumber(String cardNumber) { this.cardNumber = cardNumber; } } 这样，产生的sql为：\ndrop table test_card cascade constraints; drop table test_user cascade constraints; create table test_card ( id varchar2(255 char) not null, card_number varchar2(255 char), user_id varchar2(255 char), primary key (id) ); create table test_user ( id varchar2(255 char) not null, username varchar2(255 char), card_id varchar2(255 char), primary key (id) ); alter table test_card add constraint FKB9A0FA9D7876DA66 foreign key (user_id) references test_user; alter table test_user add constraint FKB9A96B58A237D846 foreign key (card_id) references test_card; 可以看到，当我双方都声明了OneToOne时候，也就达到了双向的One2One效果。但是很遗憾。Hibernate不知道你由哪边控制哪边，或者说由哪边来维护关系。所以，他生成的sql语句中可以看到，都有test_card和test_user是相互关联的，即：都有FK关联上堆放的PK。很明显，这个不是我们要的效果。\n我们需要的是，pojo中能双向one2one，但是db中不需要。所以，我们需要修改一下。\n修改TestCard.java代码：\nimport javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.OneToOne; @Entity public class TestCard { String id; String cardNumber; TestUser user; @Id public String getId() { return id; } public void setId(String id) { this.id = id; } @OneToOne(mappedBy=\u0026#34;card\u0026#34;) public TestUser getUser() { return user; } public void setUser(TestUser user) { this.user = user; } public String getCardNumber() { return cardNumber; } public void setCardNumber(String cardNumber) { this.cardNumber = cardNumber; } } 注意： OneToOne中的mappedBy就指出了此处返回的TestUser对应的test_user表中有一个指向TestUser的属性\u0026quot;card\u0026quot;的外键。可以看sql。\ndrop table test_card cascade constraints; drop table test_user cascade constraints; create table test_card ( id varchar2(255 char) not null, card_number varchar2(255 char), primary key (id) ); create table test_user ( id varchar2(255 char) not null, username varchar2(255 char), card_id varchar2(255 char), primary key (id) ); alter table test_user add constraint FKB9A96B58A237D846 foreign key (card_id) references test_card; 而这得\u0026quot;mappedBy=card\u0026quot;中的card是TestUser中的TestCard类型的成员变量名。这也就是为什么我要用Test修饰类名，而对象名却不用的理由。\n或者，还可以这样子来理解OneToOne。\n1.单向OneToOne中。声明了OneToOne这个Annotation的方法，他的返回值即：维护方。(主键方) 1.双向OneToOne中。在OneToOne中声明了mappedBy=\u0026ldquo;xx\u0026quot;的，他的返回值即：被维护方。(外键方)\nannotation的关系映射 1:n # 这次说说OneToMany和ManyToOne\n我们的场景是 1个父亲n多个孩子\nPojo # 先来看看这中做法：\nTestFather.java\nimport java.util.ArrayList; import java.util.List; import javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.OneToMany; @Entity public class TestFather{ String id; String name; List children = new ArrayList(); @Id public String getId() { return id; } public void setId(String id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } @OneToMany public List getChildren() { return children; } public void setChildren(List children) { this.children = children; } } TestChild.java\nimport javax.persistence.Entity; import javax.persistence.Id; @Entity public class TestChild { String id; String name; @Id public String getId() { return id; } public void setId(String id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } } DB # 这样子，好像就可以了。那么是的么？我们来看看hib产生的sql\ndrop table test_child cascade constraints; drop table test_father cascade constraints; drop table test_father_children cascade constraints; create table test_child ( id varchar2(255 char) not null, name varchar2(255 char), primary key (id) ); create table test_father ( id varchar2(255 char) not null, name varchar2(255 char), primary key (id) ); create table test_father_children ( null_id varchar2(255 char) not null, children_id varchar2(255 char) not null, unique (children_id) ); alter table test_father_children add constraint FK2E6E87D5901B7DBB foreign key (null_id) references test_father; alter table test_father_children add constraint FK2E6E87D58CD0E56B foreign key (children_id) references test_child; alter table test_user add constraint FKB9A96B58A237D846 foreign key (card_id) references test_card; oh！ My God ！它居然又帮我们多创建了一个table。作为关联。太笨了。\n很明显，这不是我们所需要的。\n那我们该如何呢？这就需要ManyToMany了。\nannotation的关系映射 n:n # 场景：Product和Customer。\nPojo # 先看TestProduct.java\nimport java.util.ArrayList; import java.util.List; import javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.ManyToMany; @Entity public class TestProduct { private String id; private String name; private float price; private List customers = new ArrayList(); @Id public String getId() { return id; } public void setId(String id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public float getPrice() { return price; } public void setPrice(float price) { this.price = price; } @ManyToMany public List getCustomers() { return customers; } public void setCustomers(List customers) { this.customers = customers; } } 注意这里的ManyToMany什么都没有写。\n再看TestCustomer.java\nimport java.util.ArrayList; import java.util.List; import javax.persistence.Entity; import javax.persistence.Id; import javax.persistence.ManyToMany; @Entity public class TestCustomer { private String id; private String tel; private List products = new ArrayList(); @Id public String getId() { return id; } public void setId(String id) { this.id = id; } public String getTel() { return tel; } public void setTel(String tel) { this.tel = tel; } @ManyToMany(mappedBy = \u0026#34;customers\u0026#34;) public List getProducts() { return products; } public void setProducts(List products) { this.products = products; } } **注意：**这里的ManyToMany我写了mappedBy这个attribute。\nDB # 然后看hib产生的sql:\ndrop table test_customer cascade constraints; drop table test_product cascade constraints; drop table test_product_customers cascade constraints; create table test_customer ( id varchar2(255 char) not null, tel varchar2(255 char), primary key (id) ); create table test_product ( id varchar2(255 char) not null, price float not null, name varchar2(255 char), primary key (id) ); create table test_product_customers ( products_id varchar2(255 char) not null, customers_id varchar2(255 char) not null ); ok! 非常好。hib终于在ManyToMany上没有犯白痴了。\n上面强调了mappedBy这个属性。其实，之前有提到mappedBy这个东西。只是，我没有说到底是什么意思。其实很简单：这个东西就相当于xml配置中的inverse。写了mappedBy就代表这个方法的返回值是被维护方。\n"},{"id":24,"href":"/docs/example/collapsed/3rd-level/4th-level/","title":"4th Level","section":"3rd Level","content":" 4th Level of Menu # Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":25,"href":"/docs/example/collapsed/3rd-level/","title":"3rd Level","section":"Collapsed","content":" 3rd Level of Menu # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); "},{"id":26,"href":"/docs/example/hidden/","title":"Hidden","section":"Example Site","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":27,"href":"/docs/shortcodes/buttons/","title":"Buttons","section":"Shortcodes","content":" Buttons # Buttons are styled links that can lead to local page or external link.\nExample # {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Get Home Contribute "},{"id":28,"href":"/docs/shortcodes/columns/","title":"Columns","section":"Shortcodes","content":" Columns # Columns help organize shorter pieces of content horizontally for readability.\nExample # {{% columns [ratio=\u0026#34;1:1\u0026#34;] [class=\u0026#34;...\u0026#34;] %}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{% /columns %}} Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nMid Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nRight Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nSettings size ratio for columns # {{% columns ratio=\u0026#34;1:2\u0026#34; %}} \u0026lt;!-- begin columns block --\u0026gt; ## x1 Column Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; ## x2 Column Lorem markdownum insigne... {{% /columns %}} x1 Column # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nx2 Column # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":29,"href":"/docs/shortcodes/details/","title":"Details","section":"Shortcodes","content":" Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample # {{% details \u0026#34;Title\u0026#34; [open] %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} {{% details title=\u0026#34;Title\u0026#34; open=true %}} ## Markdown content Lorem markdownum insigne... {{% /details %}} Title Markdown content # Lorem markdownum insigne\u0026hellip;\n"},{"id":30,"href":"/docs/shortcodes/hints/","title":"Hints","section":"Shortcodes","content":" Hints # Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{% hint [info|warning|danger] %}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{% /hint %}} Example # Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\nMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\nMarkdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa\n"},{"id":31,"href":"/docs/shortcodes/mermaid/","title":"Mermaid","section":"Shortcodes","content":" Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid initialization config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\nExample # {{\u0026lt; mermaid [class=\u0026#34;...\u0026#34;] \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u003e State2 note left of State2 : This is the note to the left. "},{"id":32,"href":"/docs/shortcodes/section/","title":"Section","section":"Shortcodes","content":" Section # Section renders pages in section as definition list, using title and description. Optional param summary can be used to show or hide page summary\nExample # {{\u0026lt; section [summary] \u0026gt;}} First Page First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nSecond Page Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n"},{"id":33,"href":"/docs/shortcodes/section/first-page/","title":"First Page","section":"Section","content":" First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":34,"href":"/docs/shortcodes/section/second-page/","title":"Second Page","section":"Section","content":" Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":35,"href":"/docs/shortcodes/tabs/","title":"Tabs","section":"Shortcodes","content":" Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;id\u0026#34; \u0026gt;}} {{% tab \u0026#34;MacOS\u0026#34; %}} # MacOS Content {{% /tab %}} {{% tab \u0026#34;Linux\u0026#34; %}} # Linux Content {{% /tab %}} {{% tab \u0026#34;Windows\u0026#34; %}} # Windows Content {{% /tab %}} {{\u0026lt; /tabs \u0026gt;}} Example # MacOS MacOS # This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux # This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows # This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":36,"href":"/docs/shortcodes/katex/","title":"KaTeX","section":"Shortcodes","content":" KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample # {{\u0026lt; katex display=true \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} \\[ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi \\] Display Mode Example # Here is some inline example: \\(\\pi(x)\\) , rendered in the same line. And below is display example, having display: block \\[ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi \\] Text continues here.\n"}]