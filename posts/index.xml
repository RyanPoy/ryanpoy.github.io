<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 一哥黑板报</title>
    <link>/posts/</link>
    <description>Recent content in Blog on 一哥黑板报</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <guid>/posts/creating-a-new-theme/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;&#xA;  Introduction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;&#xA;&lt;p&gt;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      <guid>/posts/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;&#xA;  Move static content to &lt;code&gt;static&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#move-static-content-to-static&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.&#xA;With Jekyll, something that looked like&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xA;    ▾ images/&#xA;        logo.png&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;should become&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/&#xA;    ▾ static/&#xA;        ▾ images/&#xA;            logo.png&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑客增长简悟</title>
      <link>/posts/growth-hacking/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/posts/growth-hacking/</guid>
      <description>&lt;h1 id=&#34;引子&#34;&gt;&#xA;  引子&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%95%e5%ad%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;黑客增长&lt;/code&gt;这个词已经出现很久了，之前只是听说过，也仅仅只是听说。这段时间，通过一些资料阅读，算是有一些了解了。简单说一下自己的领悟吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HomeBrew修改国内源</title>
      <link>/posts/HomeBrew%E4%BF%AE%E6%94%B9%E5%9B%BD%E5%86%85%E6%BA%90/</link>
      <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/posts/HomeBrew%E4%BF%AE%E6%94%B9%E5%9B%BD%E5%86%85%E6%BA%90/</guid>
      <description>&lt;p&gt;因为众所周知的原因，正常访问homebrew是很难的。所以，我们需要修改它的源，让其指向国内。&lt;/p&gt;</description>
    </item>
    <item>
      <title>重新设计我的看板</title>
      <link>/posts/translation-rethinking-kanban/</link>
      <pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate>
      <guid>/posts/translation-rethinking-kanban/</guid>
      <description>&lt;p&gt;发现&#xA;  &lt;a href=&#34;https://matschaffer.com/2014/06/16/rethinking-kanban&#34;&gt;一篇文章&lt;/a&gt;，觉得有意思，就翻译了一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>/posts/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &#xA;  &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; &#xA;  &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for&#xA;its template engine. It is an extremely lightweight engine that provides a very&#xA;small amount of logic. In our experience that it is just the right amount of&#xA;logic to be able to create a good static website. If you have used other&#xA;template systems from different languages or frameworks you will find a lot of&#xA;similarities in Go templates.&lt;/p&gt;&#xA;&lt;p&gt;This document is a brief primer on using Go templates. The &#xA;  &lt;a href=&#34;https://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;&#xA;provide more details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      <guid>/posts/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;&#xA;  Step 1. Install Hugo&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-install-hugo&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Go to &#xA;  &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo releases&lt;/a&gt; and download the&#xA;appropriate version for your OS and architecture.&lt;/p&gt;&#xA;&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;&#xA;&lt;p&gt;More complete instructions are available at &#xA;  &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Install Hugo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-2-build-the-docs&#34;&gt;&#xA;  Step 2. Build the Docs&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-2-build-the-docs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Hugo has its own example site which happens to also be the documentation site&#xA;you are reading right now.&lt;/p&gt;&#xA;&lt;p&gt;Follow the following steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>12年，1780公里，6小时</title>
      <link>/posts/12-Years-1780-Kilometers-6-Hours/</link>
      <pubDate>Sat, 03 Aug 2013 00:00:00 +0000</pubDate>
      <guid>/posts/12-Years-1780-Kilometers-6-Hours/</guid>
      <description>&lt;p&gt;12年前，青涩的他怀揣着懵懂的梦想踏上了这个被人津津乐道的城市的土地。&lt;/p&gt;&#xA;&lt;p&gt;古色古香的南锣鼓巷和钢筋铁骨的国贸中心、气势磅礴的万里长城和宁静如璧的互城小河体现出它与生俱来的混乱。密密麻麻的人群，拥堵不堪的车流，忙忙碌碌的人们，匆匆忙忙的脚步却又反映出那与混乱抗衡的秩序。人们在这儿实现梦想、体味繁华、分享喜悦，也在这儿增长欲望、产生颓废、无尽挣扎。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/posts/QCon-Beijing-2013/</link>
      <pubDate>Fri, 25 Jan 2013 00:00:00 +0000</pubDate>
      <guid>/posts/QCon-Beijing-2013/</guid>
      <description>&lt;h2 id=&#34;引子&#34;&gt;&#xA;  引子&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%95%e5%ad%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;接到了QCon BeiJing的邀请&lt;/strong&gt;，很荣幸，也很有压力，不知道能不能讲好。尽力吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fudge使用文档</title>
      <link>/posts/fudge-using-document/</link>
      <pubDate>Sat, 20 Oct 2012 00:00:00 +0000</pubDate>
      <guid>/posts/fudge-using-document/</guid>
      <description>&lt;p&gt;fudge是一个python的mock框架，我非常喜欢它。决定把使用文档翻译出来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>善·缘</title>
      <link>/posts/fate/</link>
      <pubDate>Sat, 13 Oct 2012 00:00:00 +0000</pubDate>
      <guid>/posts/fate/</guid>
      <description>&lt;p&gt;不信一见钟情，只因为我不是一个极端的人。&lt;/p&gt;&#xA;&lt;p&gt;既然不是一个极端的人，就不会有极端的想法，也不会有极端的感受。&lt;/p&gt;&#xA;&lt;p&gt;我相信缘分。&lt;/p&gt;&#xA;&lt;p&gt;缘分是一种奇妙的东西，你不想的时候，却偏偏来到你的身旁。&lt;/p&gt;&#xA;&lt;p&gt;我相信命运。&lt;/p&gt;&#xA;&lt;p&gt;命运是一种缥缈的东西，你永远琢磨不透，上天的如此安排究竟为何。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tornado教程</title>
      <link>/posts/a-quick-guide-to-using-tornado/</link>
      <pubDate>Sat, 05 Nov 2011 00:00:00 +0000</pubDate>
      <guid>/posts/a-quick-guide-to-using-tornado/</guid>
      <description>&lt;p&gt;最近要做一个新的系统：一个披着邮件系统外衣的消息系统。性能肯定是一方面，所以Webpy就不打算用了。Django本来是我的第一选择，但是觉得Django可能也会出现性能问题。我还是考虑其它的吧。选来选去，最后选择了Torando。因为它：&lt;strong&gt;简单&lt;/strong&gt;；&lt;strong&gt;传说性能好&lt;/strong&gt;；&lt;strong&gt;成熟案例&lt;/strong&gt; （ &#xA;  &lt;a href=&#34;https://www.zhihu.com&#34;&gt;知乎&lt;/a&gt;, &#xA;  &lt;a href=&#34;http://friendfeed.com/&#34;&gt;FriendFeed&lt;/a&gt; )&lt;/p&gt;</description>
    </item>
    <item>
      <title>webpy教程</title>
      <link>/posts/a-user-guild-to-using-webpy/</link>
      <pubDate>Thu, 18 Aug 2011 00:00:00 +0000</pubDate>
      <guid>/posts/a-user-guild-to-using-webpy/</guid>
      <description>&lt;p&gt;来&#xA;  &lt;a href=&#34;https://sohu.com&#34;&gt;搜狐&lt;/a&gt;后，这里做的系统几乎都是 webpy + twsited 写的。所以，有必要好好学习一下这两个东西了。从今天开始介绍webpy。&lt;/p&gt;</description>
    </item>
    <item>
      <title>python奇技淫巧</title>
      <link>/posts/python-tricks-and-hacks/</link>
      <pubDate>Fri, 11 Sep 2009 00:00:00 +0000</pubDate>
      <guid>/posts/python-tricks-and-hacks/</guid>
      <description>&lt;p&gt;在Python中，有一些常见不常用又很有用的&lt;strong&gt;奇技淫巧&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hibernate入门使用</title>
      <link>/posts/hibernate-simple-tutorials/</link>
      <pubDate>Thu, 24 Jul 2008 00:00:00 +0000</pubDate>
      <guid>/posts/hibernate-simple-tutorials/</guid>
      <description>&lt;p&gt;Hibernate入门使用文章, 主要讲快速使用，不会介绍太多的深层次的东西。方便自己，方便大家。因本人懒惰，记不住hibernate的配置选项，所以，此文实例都是使用myeclipse进行快速开发，数据库都是mysql。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
